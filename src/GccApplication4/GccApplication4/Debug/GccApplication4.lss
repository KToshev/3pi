
GccApplication4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000006e  00800100  0000275e  000027f2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000275e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          000005ae  0080016e  0080016e  00002860  2**0
                  ALLOC
  3 .stab         00006414  00000000  00000000  00002860  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00008ce2  00000000  00000000  00008c74  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .comment      00000041  00000000  00000000  00011956  2**0
                  CONTENTS, READONLY
  6 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00011998  2**2
                  CONTENTS, READONLY
  7 .debug_aranges 00000040  00000000  00000000  000119d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_info   000025b2  00000000  00000000  00011a18  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_abbrev 00000a59  00000000  00000000  00013fca  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_line   00000a42  00000000  00000000  00014a23  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_frame  000000ac  00000000  00000000  00015468  2**2
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_str    000013c6  00000000  00000000  00015514  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000aa1  00000000  00000000  000168da  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000148  00000000  00000000  0001737b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 55 00 	jmp	0xaa	; 0xaa <__dtors_end>
       4:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
       8:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
       c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      10:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      14:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      18:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      1c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      20:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      24:	0c 94 3e 0e 	jmp	0x1c7c	; 0x1c7c <__vector_9>
      28:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      2c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      30:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      34:	0c 94 54 0b 	jmp	0x16a8	; 0x16a8 <__vector_13>
      38:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      3c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      40:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      44:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      48:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      4c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      50:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      54:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      58:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      5c:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      60:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      64:	0c 94 7d 00 	jmp	0xfa	; 0xfa <__bad_interrupt>
      68:	bf 01       	movw	r22, r30
      6a:	bc 01       	movw	r22, r24
      6c:	cb 01       	movw	r24, r22
      6e:	bb 04       	cpc	r11, r11
      70:	be 04       	cpc	r11, r14
      72:	c8 01       	movw	r24, r16
      74:	c5 01       	movw	r24, r10
      76:	c2 01       	movw	r24, r4
      78:	08 4a       	sbci	r16, 0xA8	; 168
      7a:	d7 3b       	cpi	r29, 0xB7	; 183
      7c:	3b ce       	rjmp	.-906    	; 0xfffffcf4 <__eeprom_end+0xff7efcf4>
      7e:	01 6e       	ori	r16, 0xE1	; 225
      80:	84 bc       	out	0x24, r8	; 36
      82:	bf fd       	.word	0xfdbf	; ????
      84:	c1 2f       	mov	r28, r17
      86:	3d 6c       	ori	r19, 0xCD	; 205
      88:	74 31       	cpi	r23, 0x14	; 20
      8a:	9a bd       	out	0x2a, r25	; 42
      8c:	56 83       	std	Z+6, r21	; 0x06
      8e:	3d da       	rcall	.-2950   	; 0xfffff50a <__eeprom_end+0xff7ef50a>
      90:	3d 00       	.word	0x003d	; ????
      92:	c7 7f       	andi	r28, 0xF7	; 247
      94:	11 be       	out	0x31, r1	; 49
      96:	d9 e4       	ldi	r29, 0x49	; 73
      98:	bb 4c       	sbci	r27, 0xCB	; 203
      9a:	3e 91       	ld	r19, -X
      9c:	6b aa       	std	Y+51, r6	; 0x33
      9e:	aa be       	out	0x3a, r10	; 58
      a0:	00 00       	nop
      a2:	00 80       	ld	r0, Z
      a4:	3f 00       	.word	0x003f	; ????

000000a6 <__ctors_start>:
      a6:	fa 04       	cpc	r15, r10

000000a8 <__ctors_end>:
      a8:	fb 0e       	add	r15, r27

000000aa <__dtors_end>:
      aa:	11 24       	eor	r1, r1
      ac:	1f be       	out	0x3f, r1	; 63
      ae:	cf ef       	ldi	r28, 0xFF	; 255
      b0:	d8 e0       	ldi	r29, 0x08	; 8
      b2:	de bf       	out	0x3e, r29	; 62
      b4:	cd bf       	out	0x3d, r28	; 61

000000b6 <__do_copy_data>:
      b6:	11 e0       	ldi	r17, 0x01	; 1
      b8:	a0 e0       	ldi	r26, 0x00	; 0
      ba:	b1 e0       	ldi	r27, 0x01	; 1
      bc:	ee e5       	ldi	r30, 0x5E	; 94
      be:	f7 e2       	ldi	r31, 0x27	; 39
      c0:	02 c0       	rjmp	.+4      	; 0xc6 <__do_copy_data+0x10>
      c2:	05 90       	lpm	r0, Z+
      c4:	0d 92       	st	X+, r0
      c6:	ae 36       	cpi	r26, 0x6E	; 110
      c8:	b1 07       	cpc	r27, r17
      ca:	d9 f7       	brne	.-10     	; 0xc2 <__do_copy_data+0xc>

000000cc <__do_clear_bss>:
      cc:	27 e0       	ldi	r18, 0x07	; 7
      ce:	ae e6       	ldi	r26, 0x6E	; 110
      d0:	b1 e0       	ldi	r27, 0x01	; 1
      d2:	01 c0       	rjmp	.+2      	; 0xd6 <.do_clear_bss_start>

000000d4 <.do_clear_bss_loop>:
      d4:	1d 92       	st	X+, r1

000000d6 <.do_clear_bss_start>:
      d6:	ac 31       	cpi	r26, 0x1C	; 28
      d8:	b2 07       	cpc	r27, r18
      da:	e1 f7       	brne	.-8      	; 0xd4 <.do_clear_bss_loop>

000000dc <__do_global_ctors>:
      dc:	10 e0       	ldi	r17, 0x00	; 0
      de:	c4 e5       	ldi	r28, 0x54	; 84
      e0:	d0 e0       	ldi	r29, 0x00	; 0
      e2:	04 c0       	rjmp	.+8      	; 0xec <__do_global_ctors+0x10>
      e4:	21 97       	sbiw	r28, 0x01	; 1
      e6:	fe 01       	movw	r30, r28
      e8:	0e 94 35 12 	call	0x246a	; 0x246a <__tablejump2__>
      ec:	c3 35       	cpi	r28, 0x53	; 83
      ee:	d1 07       	cpc	r29, r17
      f0:	c9 f7       	brne	.-14     	; 0xe4 <__do_global_ctors+0x8>
      f2:	0e 94 c1 04 	call	0x982	; 0x982 <main>
      f6:	0c 94 a2 13 	jmp	0x2744	; 0x2744 <__do_global_dtors>

000000fa <__bad_interrupt>:
      fa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000fe <_ZN5Robot14initializeMenuEv>:
            print( ", " );
            print_long( y );
            print( ")" );
        }

        void initializeMenu()
      fe:	cf 92       	push	r12
     100:	df 92       	push	r13
     102:	ef 92       	push	r14
     104:	ff 92       	push	r15
     106:	0f 93       	push	r16
     108:	1f 93       	push	r17
     10a:	cf 93       	push	r28
     10c:	df 93       	push	r29
     10e:	ec 01       	movw	r28, r24
        {
            clear();
     110:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>

            while ( !button_is_pressed( BUTTON_B ) )
            {
                if ( button_is_pressed( BUTTON_A ) )
                {
                    finishPos.x = ( finishPos.x + 1 ) % MAX_ROWS;
     114:	0f 2e       	mov	r0, r31
     116:	ff e0       	ldi	r31, 0x0F	; 15
     118:	ef 2e       	mov	r14, r31
     11a:	f1 2c       	mov	r15, r1
     11c:	f0 2d       	mov	r31, r0

        void initializeMenu()
        {
            clear();

            while ( !button_is_pressed( BUTTON_B ) )
     11e:	80 e1       	ldi	r24, 0x10	; 16
     120:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <button_is_pressed>
     124:	81 11       	cpse	r24, r1
     126:	45 c0       	rjmp	.+138    	; 0x1b2 <_ZN5Robot14initializeMenuEv+0xb4>
            {
                if ( button_is_pressed( BUTTON_A ) )
     128:	82 e0       	ldi	r24, 0x02	; 2
     12a:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <button_is_pressed>
     12e:	88 23       	and	r24, r24
     130:	41 f0       	breq	.+16     	; 0x142 <_ZN5Robot14initializeMenuEv+0x44>
                {
                    finishPos.x = ( finishPos.x + 1 ) % MAX_ROWS;
     132:	8d 81       	ldd	r24, Y+5	; 0x05
     134:	9e 81       	ldd	r25, Y+6	; 0x06
     136:	01 96       	adiw	r24, 0x01	; 1
     138:	b7 01       	movw	r22, r14
     13a:	0e 94 e0 11 	call	0x23c0	; 0x23c0 <__divmodhi4>
     13e:	9e 83       	std	Y+6, r25	; 0x06
     140:	8d 83       	std	Y+5, r24	; 0x05
                }

                if ( button_is_pressed( BUTTON_C ) )
     142:	80 e2       	ldi	r24, 0x20	; 32
     144:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <button_is_pressed>
     148:	88 23       	and	r24, r24
     14a:	41 f0       	breq	.+16     	; 0x15c <_ZN5Robot14initializeMenuEv+0x5e>
                {
                    finishPos.y = ( finishPos.y + 1 ) % MAX_ROWS;
     14c:	8f 81       	ldd	r24, Y+7	; 0x07
     14e:	98 85       	ldd	r25, Y+8	; 0x08
     150:	01 96       	adiw	r24, 0x01	; 1
     152:	b7 01       	movw	r22, r14
     154:	0e 94 e0 11 	call	0x23c0	; 0x23c0 <__divmodhi4>
     158:	98 87       	std	Y+8, r25	; 0x08
     15a:	8f 83       	std	Y+7, r24	; 0x07
                }

                printPos( finishPos.x, finishPos.y );
     15c:	0f 81       	ldd	r16, Y+7	; 0x07
     15e:	18 85       	ldd	r17, Y+8	; 0x08
     160:	cd 80       	ldd	r12, Y+5	; 0x05
     162:	de 80       	ldd	r13, Y+6	; 0x06

        }

        void printPos( short x, short y )
        {
            clear();
     164:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>
            print( "(" );
     168:	81 e3       	ldi	r24, 0x31	; 49
     16a:	91 e0       	ldi	r25, 0x01	; 1
     16c:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
            print_long( x );
     170:	b6 01       	movw	r22, r12
     172:	dd 0c       	add	r13, r13
     174:	88 0b       	sbc	r24, r24
     176:	99 0b       	sbc	r25, r25
     178:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <print_long>
            print( ", " );
     17c:	83 e3       	ldi	r24, 0x33	; 51
     17e:	91 e0       	ldi	r25, 0x01	; 1
     180:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
            print_long( y );
     184:	b8 01       	movw	r22, r16
     186:	11 0f       	add	r17, r17
     188:	88 0b       	sbc	r24, r24
     18a:	99 0b       	sbc	r25, r25
     18c:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <print_long>
            print( ")" );
     190:	86 e3       	ldi	r24, 0x36	; 54
     192:	91 e0       	ldi	r25, 0x01	; 1
     194:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
                    finishPos.y = ( finishPos.y + 1 ) % MAX_ROWS;
                }

                printPos( finishPos.x, finishPos.y );

                lcd_goto_xy( 0, 1 );
     198:	61 e0       	ldi	r22, 0x01	; 1
     19a:	80 e0       	ldi	r24, 0x00	; 0
     19c:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <lcd_goto_xy>
                print( " A B C " );
     1a0:	88 e3       	ldi	r24, 0x38	; 56
     1a2:	91 e0       	ldi	r25, 0x01	; 1
     1a4:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>

                delay_ms( 100 );
     1a8:	84 e6       	ldi	r24, 0x64	; 100
     1aa:	90 e0       	ldi	r25, 0x00	; 0
     1ac:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>

        void initializeMenu()
        {
            clear();

            while ( !button_is_pressed( BUTTON_B ) )
     1b0:	b6 cf       	rjmp	.-148    	; 0x11e <_ZN5Robot14initializeMenuEv+0x20>

                delay_ms( 100 );
            }

            // Always wait for the button to be released so that 3pi doesn't start moving until your hand is away from it.
            wait_for_button_release( BUTTON_B );
     1b2:	80 e1       	ldi	r24, 0x10	; 16
     1b4:	0e 94 27 0e 	call	0x1c4e	; 0x1c4e <wait_for_button_release>
            delay_ms( 1000 );
     1b8:	88 ee       	ldi	r24, 0xE8	; 232
     1ba:	93 e0       	ldi	r25, 0x03	; 3
     1bc:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
        }
     1c0:	df 91       	pop	r29
     1c2:	cf 91       	pop	r28
     1c4:	1f 91       	pop	r17
     1c6:	0f 91       	pop	r16
     1c8:	ff 90       	pop	r15
     1ca:	ef 90       	pop	r14
     1cc:	df 90       	pop	r13
     1ce:	cf 90       	pop	r12
     1d0:	08 95       	ret

000001d2 <_ZN5Robot8mainMenuEv>:

        //Main program menu
        void mainMenu()
     1d2:	cf 93       	push	r28
     1d4:	df 93       	push	r29
     1d6:	cd b7       	in	r28, 0x3d	; 61
     1d8:	de b7       	in	r29, 0x3e	; 62
     1da:	2c 97       	sbiw	r28, 0x0c	; 12
     1dc:	0f b6       	in	r0, 0x3f	; 63
     1de:	f8 94       	cli
     1e0:	de bf       	out	0x3e, r29	; 62
     1e2:	0f be       	out	0x3f, r0	; 63
     1e4:	cd bf       	out	0x3d, r28	; 61
     1e6:	1c 01       	movw	r2, r24
        {
            clear();
     1e8:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>
            print( "A - Test" );
     1ec:	80 e4       	ldi	r24, 0x40	; 64
     1ee:	91 e0       	ldi	r25, 0x01	; 1
     1f0:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
            lcd_goto_xy( 0, 1 );
     1f4:	61 e0       	ldi	r22, 0x01	; 1
     1f6:	80 e0       	ldi	r24, 0x00	; 0
     1f8:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <lcd_goto_xy>
            print( "B - Main" );
     1fc:	89 e4       	ldi	r24, 0x49	; 73
     1fe:	91 e0       	ldi	r25, 0x01	; 1
     200:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
            set_motors( 0, 0 );
        }

        bool isOnMarker()
        {
            read_line_sensors( sensors, IR_EMITTERS_ON );
     204:	91 01       	movw	r18, r2
     206:	27 5f       	subi	r18, 0xF7	; 247
     208:	3f 4f       	sbci	r19, 0xFF	; 255
     20a:	3c 87       	std	Y+12, r19	; 0x0c
     20c:	2b 87       	std	Y+11, r18	; 0x0b

            bool isSelectedProgram = false;

            while ( !isSelectedProgram )
            {
                if ( button_is_pressed( BUTTON_A ) )
     20e:	82 e0       	ldi	r24, 0x02	; 2
     210:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <button_is_pressed>
     214:	88 23       	and	r24, r24
     216:	31 f1       	breq	.+76     	; 0x264 <_ZN5Robot8mainMenuEv+0x92>
                {
                    wait_for_button_release( BUTTON_A ); //wait for the button to be released before run the program
     218:	82 e0       	ldi	r24, 0x02	; 2
     21a:	0e 94 27 0e 	call	0x1c4e	; 0x1c4e <wait_for_button_release>
        // Displays the data returned from the sensors
        void testSensors()
        {
            while ( true )
            {
                read_line_sensors( sensors, IR_EMITTERS_ON );
     21e:	61 01       	movw	r12, r2
     220:	39 e0       	ldi	r19, 0x09	; 9
     222:	c3 0e       	add	r12, r19
     224:	d1 1c       	adc	r13, r1
     226:	71 01       	movw	r14, r2
     228:	43 e1       	ldi	r20, 0x13	; 19
     22a:	e4 0e       	add	r14, r20
     22c:	f1 1c       	adc	r15, r1
     22e:	61 e0       	ldi	r22, 0x01	; 1
     230:	c6 01       	movw	r24, r12
     232:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <read_line_sensors>
     236:	86 01       	movw	r16, r12

                // Display the sensor values
                for ( short i = 0; i < 5; i++ )
                {
                    print_long( sensors[ i ] );
     238:	d8 01       	movw	r26, r16
     23a:	6d 91       	ld	r22, X+
     23c:	7d 91       	ld	r23, X+
     23e:	8d 01       	movw	r16, r26
     240:	80 e0       	ldi	r24, 0x00	; 0
     242:	90 e0       	ldi	r25, 0x00	; 0
     244:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <print_long>
                    delay_ms( 500 );
     248:	84 ef       	ldi	r24, 0xF4	; 244
     24a:	91 e0       	ldi	r25, 0x01	; 1
     24c:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
                    clear();
     250:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>
            while ( true )
            {
                read_line_sensors( sensors, IR_EMITTERS_ON );

                // Display the sensor values
                for ( short i = 0; i < 5; i++ )
     254:	0e 15       	cp	r16, r14
     256:	1f 05       	cpc	r17, r15
     258:	79 f7       	brne	.-34     	; 0x238 <_ZN5Robot8mainMenuEv+0x66>
                    delay_ms( 500 );
                    clear();
                }

                // Play sound to notify that the next iteration will begin.
                play( ">>a32" );
     25a:	82 e5       	ldi	r24, 0x52	; 82
     25c:	91 e0       	ldi	r25, 0x01	; 1
     25e:	0e 94 b2 0b 	call	0x1764	; 0x1764 <play>
     262:	e5 cf       	rjmp	.-54     	; 0x22e <_ZN5Robot8mainMenuEv+0x5c>
                {
                    wait_for_button_release( BUTTON_A ); //wait for the button to be released before run the program
                    testSensors();
                }

                if ( button_is_pressed( BUTTON_B ) )
     264:	80 e1       	ldi	r24, 0x10	; 16
     266:	0e 94 3b 0e 	call	0x1c76	; 0x1c76 <button_is_pressed>
     26a:	88 23       	and	r24, r24
     26c:	81 f2       	breq	.-96     	; 0x20e <_ZN5Robot8mainMenuEv+0x3c>
                {
                    wait_for_button_release( BUTTON_B );//wait for the button to be released before run the program
     26e:	80 e1       	ldi	r24, 0x10	; 16
     270:	0e 94 27 0e 	call	0x1c4e	; 0x1c4e <wait_for_button_release>
                    // mainRobotLogic the initialization menu
                    initializeMenu();
     274:	c1 01       	movw	r24, r2
     276:	0e 94 7f 00 	call	0xfe	; 0xfe <_ZN5Robot14initializeMenuEv>
        }

        // Main logic function
        void mainRobotLogic()
        {
            matrix[ position.x ][ position.y ].distToStart	= 0;
     27a:	f1 01       	movw	r30, r2
     27c:	40 81       	ld	r20, Z
     27e:	51 81       	ldd	r21, Z+1	; 0x01
     280:	82 81       	ldd	r24, Z+2	; 0x02
     282:	93 81       	ldd	r25, Z+3	; 0x03
     284:	9c 01       	movw	r18, r24
     286:	22 0f       	add	r18, r18
     288:	33 1f       	adc	r19, r19
     28a:	82 0f       	add	r24, r18
     28c:	93 1f       	adc	r25, r19
     28e:	88 0f       	add	r24, r24
     290:	99 1f       	adc	r25, r25
     292:	2a e5       	ldi	r18, 0x5A	; 90
     294:	24 9f       	mul	r18, r20
     296:	f0 01       	movw	r30, r0
     298:	25 9f       	mul	r18, r21
     29a:	f0 0d       	add	r31, r0
     29c:	11 24       	eor	r1, r1
     29e:	8e 0f       	add	r24, r30
     2a0:	9f 1f       	adc	r25, r31
     2a2:	fc 01       	movw	r30, r24
     2a4:	e3 53       	subi	r30, 0x33	; 51
     2a6:	fe 4f       	sbci	r31, 0xFE	; 254
     2a8:	11 82       	std	Z+1, r1	; 0x01
     2aa:	10 82       	st	Z, r1
            matrix[ position.x ][ position.y ].isVisited	= true;
     2ac:	d1 01       	movw	r26, r2
     2ae:	4d 91       	ld	r20, X+
     2b0:	5c 91       	ld	r21, X
     2b2:	11 97       	sbiw	r26, 0x01	; 1
     2b4:	12 96       	adiw	r26, 0x02	; 2
     2b6:	8d 91       	ld	r24, X+
     2b8:	9c 91       	ld	r25, X
     2ba:	13 97       	sbiw	r26, 0x03	; 3
     2bc:	bc 01       	movw	r22, r24
     2be:	66 0f       	add	r22, r22
     2c0:	77 1f       	adc	r23, r23
     2c2:	86 0f       	add	r24, r22
     2c4:	97 1f       	adc	r25, r23
     2c6:	88 0f       	add	r24, r24
     2c8:	99 1f       	adc	r25, r25
     2ca:	24 9f       	mul	r18, r20
     2cc:	f0 01       	movw	r30, r0
     2ce:	25 9f       	mul	r18, r21
     2d0:	f0 0d       	add	r31, r0
     2d2:	11 24       	eor	r1, r1
     2d4:	8e 0f       	add	r24, r30
     2d6:	9f 1f       	adc	r25, r31
     2d8:	fc 01       	movw	r30, r24
     2da:	e3 53       	subi	r30, 0x33	; 51
     2dc:	fe 4f       	sbci	r31, 0xFE	; 254
     2de:	81 e0       	ldi	r24, 0x01	; 1
     2e0:	85 83       	std	Z+5, r24	; 0x05

                case EOrientation::SouthEast:
                    return -45;

                case EOrientation::East:
                    return 0;
     2e2:	51 2c       	mov	r5, r1
     2e4:	41 2c       	mov	r4, r1
        void mainRobotLogic()
        {
            matrix[ position.x ][ position.y ].distToStart	= 0;
            matrix[ position.x ][ position.y ].isVisited	= true;

            while ( ( position.x != finishPos.x || position.y != finishPos.y ) && lap <= CNT_LAPS )
     2e6:	f1 01       	movw	r30, r2
     2e8:	20 81       	ld	r18, Z
     2ea:	31 81       	ldd	r19, Z+1	; 0x01
     2ec:	85 81       	ldd	r24, Z+5	; 0x05
     2ee:	96 81       	ldd	r25, Z+6	; 0x06
     2f0:	28 17       	cp	r18, r24
     2f2:	39 07       	cpc	r19, r25
     2f4:	09 f0       	breq	.+2      	; 0x2f8 <_ZN5Robot8mainMenuEv+0x126>
     2f6:	11 c3       	rjmp	.+1570   	; 0x91a <__stack+0x1b>
     2f8:	22 81       	ldd	r18, Z+2	; 0x02
     2fa:	33 81       	ldd	r19, Z+3	; 0x03
     2fc:	87 81       	ldd	r24, Z+7	; 0x07
     2fe:	90 85       	ldd	r25, Z+8	; 0x08
     300:	28 17       	cp	r18, r24
     302:	39 07       	cpc	r19, r25
     304:	09 f0       	breq	.+2      	; 0x308 <_ZN5Robot8mainMenuEv+0x136>
     306:	09 c3       	rjmp	.+1554   	; 0x91a <__stack+0x1b>
     308:	82 cf       	rjmp	.-252    	; 0x20e <_ZN5Robot8mainMenuEv+0x3c>

            while ( count < 8 )
            {
                count++;

                if ( lap < CNT_LAPS )
     30a:	d1 01       	movw	r26, r2
     30c:	53 96       	adiw	r26, 0x13	; 19
     30e:	8d 91       	ld	r24, X+
     310:	9c 91       	ld	r25, X
     312:	54 97       	sbiw	r26, 0x14	; 20
     314:	04 97       	sbiw	r24, 0x04	; 4
     316:	c4 f4       	brge	.+48     	; 0x348 <_ZN5Robot8mainMenuEv+0x176>

        Point2D getClosestAdjacent( const Point2D& from, const Point2D& to, getDistFunc getDist )
        {
            //Point2D adjPts[8]	= this->getAdjacentPts();
            short	minDist		= getDist( from, to );
            Point2D	minPos( from );
     318:	8d 91       	ld	r24, X+
     31a:	9d 91       	ld	r25, X+
     31c:	0d 90       	ld	r0, X+
     31e:	bc 91       	ld	r27, X
     320:	a0 2d       	mov	r26, r0
                    minDist = currDist;
                    minPos	= currPos;
                }
            }*/

            doPrint = false;
     322:	10 92 13 07 	sts	0x0713, r1	; 0x800713 <doPrint>
     326:	5c 01       	movw	r10, r24
     328:	6d 01       	movw	r12, r26
            , y ( inY )
        {}

        bool operator==( const Point2D& pt ) const
        {
            return x == pt.x && y == pt.y;
     32a:	f1 01       	movw	r30, r2
     32c:	80 81       	ld	r24, Z
     32e:	91 81       	ldd	r25, Z+1	; 0x01
     330:	8a 15       	cp	r24, r10
     332:	9b 05       	cpc	r25, r11
     334:	09 f0       	breq	.+2      	; 0x338 <_ZN5Robot8mainMenuEv+0x166>
     336:	12 c3       	rjmp	.+1572   	; 0x95c <__stack+0x5d>
     338:	22 81       	ldd	r18, Z+2	; 0x02
     33a:	33 81       	ldd	r19, Z+3	; 0x03
     33c:	2a 17       	cp	r18, r26
     33e:	3b 07       	cpc	r19, r27
     340:	09 f4       	brne	.+2      	; 0x344 <_ZN5Robot8mainMenuEv+0x172>
     342:	f6 c2       	rjmp	.+1516   	; 0x930 <__stack+0x31>

                return result;
            };

            // Get next pos using the lambda from above
            Point2D nextPos( this->getClosestAdjacent( position, goalPos, getNextDist ) );
     344:	5c 01       	movw	r10, r24
     346:	10 c0       	rjmp	.+32     	; 0x368 <_ZN5Robot8mainMenuEv+0x196>

        Point2D getClosestAdjacent( const Point2D& from, const Point2D& to, getDistFunc getDist )
        {
            //Point2D adjPts[8]	= this->getAdjacentPts();
            short	minDist		= getDist( from, to );
            Point2D	minPos( from );
     348:	f1 01       	movw	r30, r2
     34a:	80 81       	ld	r24, Z
     34c:	91 81       	ldd	r25, Z+1	; 0x01
     34e:	a2 81       	ldd	r26, Z+2	; 0x02
     350:	b3 81       	ldd	r27, Z+3	; 0x03
                    minDist = currDist;
                    minPos	= currPos;
                }
            }*/

            doPrint = false;
     352:	10 92 13 07 	sts	0x0713, r1	; 0x800713 <doPrint>
     356:	5c 01       	movw	r10, r24
     358:	6d 01       	movw	r12, r26
            , y ( inY )
        {}

        bool operator==( const Point2D& pt ) const
        {
            return x == pt.x && y == pt.y;
     35a:	d1 01       	movw	r26, r2
     35c:	8d 91       	ld	r24, X+
     35e:	9c 91       	ld	r25, X
     360:	8a 15       	cp	r24, r10
     362:	9b 05       	cpc	r25, r11
     364:	09 f0       	breq	.+2      	; 0x368 <_ZN5Robot8mainMenuEv+0x196>
     366:	fa c2       	rjmp	.+1524   	; 0x95c <__stack+0x5d>
     368:	f1 01       	movw	r30, r2
     36a:	82 81       	ldd	r24, Z+2	; 0x02
     36c:	93 81       	ldd	r25, Z+3	; 0x03
     36e:	8c 15       	cp	r24, r12
     370:	9d 05       	cpc	r25, r13
     372:	09 f0       	breq	.+2      	; 0x376 <_ZN5Robot8mainMenuEv+0x1a4>
     374:	f3 c2       	rjmp	.+1510   	; 0x95c <__stack+0x5d>
     376:	16 c1       	rjmp	.+556    	; 0x5a4 <__LOCK_REGION_LENGTH__+0x1a4>

                case EOrientation::East:
                    return 0;

                case EOrientation::NorthEast:
                    return 45;
     378:	0d e2       	ldi	r16, 0x2D	; 45
     37a:	10 e0       	ldi	r17, 0x00	; 0
     37c:	0e c0       	rjmp	.+28     	; 0x39a <_ZN5Robot8mainMenuEv+0x1c8>

                case EOrientation::North:
                    return 90;
     37e:	0a e5       	ldi	r16, 0x5A	; 90
     380:	10 e0       	ldi	r17, 0x00	; 0
     382:	0b c0       	rjmp	.+22     	; 0x39a <_ZN5Robot8mainMenuEv+0x1c8>

                case EOrientation::NorthWest:
                    return 135;
     384:	07 e8       	ldi	r16, 0x87	; 135
     386:	10 e0       	ldi	r17, 0x00	; 0
     388:	08 c0       	rjmp	.+16     	; 0x39a <_ZN5Robot8mainMenuEv+0x1c8>

                case EOrientation::West:
                    return 180;
     38a:	04 eb       	ldi	r16, 0xB4	; 180
     38c:	10 e0       	ldi	r17, 0x00	; 0
     38e:	05 c0       	rjmp	.+10     	; 0x39a <_ZN5Robot8mainMenuEv+0x1c8>

                case EOrientation::SouthWest:
                default:
                    return 225;
     390:	01 ee       	ldi	r16, 0xE1	; 225
     392:	10 e0       	ldi	r17, 0x00	; 0
     394:	02 c0       	rjmp	.+4      	; 0x39a <_ZN5Robot8mainMenuEv+0x1c8>

                case EOrientation::SouthEast:
                    return -45;

                case EOrientation::East:
                    return 0;
     396:	05 2d       	mov	r16, r5
     398:	14 2d       	mov	r17, r4
        }

        //1,2,3,4 clockwise, -1,-2,-3,-4 counterclockwise
        void setDirection( Point2D startPoint, Point2D endPoint )
        {
            short	x			= -startPoint.x + endPoint.x;
     39a:	d1 01       	movw	r26, r2
     39c:	8d 91       	ld	r24, X+
     39e:	9c 91       	ld	r25, X
     3a0:	11 97       	sbiw	r26, 0x01	; 1
     3a2:	45 01       	movw	r8, r10
     3a4:	88 1a       	sub	r8, r24
     3a6:	99 0a       	sbc	r9, r25
            short	y			= -startPoint.y + endPoint.y;
     3a8:	12 96       	adiw	r26, 0x02	; 2
     3aa:	8d 91       	ld	r24, X+
     3ac:	9c 91       	ld	r25, X
     3ae:	13 97       	sbiw	r26, 0x03	; 3
     3b0:	f6 01       	movw	r30, r12
     3b2:	e8 1b       	sub	r30, r24
     3b4:	f9 0b       	sbc	r31, r25
     3b6:	cf 01       	movw	r24, r30
            int		angle		= 0;
            int		direction	= 0;
            int		robotAngle	= getRobotAngle();

            if ( x == 0 )
     3b8:	81 14       	cp	r8, r1
     3ba:	91 04       	cpc	r9, r1
     3bc:	61 f4       	brne	.+24     	; 0x3d6 <_ZN5Robot8mainMenuEv+0x204>
            {
                if ( y > 0 )
     3be:	1e 16       	cp	r1, r30
     3c0:	1f 06       	cpc	r1, r31
     3c2:	4c f1       	brlt	.+82     	; 0x416 <__LOCK_REGION_LENGTH__+0x16>
                {
                    angle = 90;
                }
                else if ( y < 0 )
     3c4:	ff 23       	and	r31, r31
     3c6:	6c f5       	brge	.+90     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
                {
                    angle = -90;
     3c8:	0f 2e       	mov	r0, r31
     3ca:	f6 ea       	ldi	r31, 0xA6	; 166
     3cc:	ef 2e       	mov	r14, r31
     3ce:	f0 2d       	mov	r31, r0
     3d0:	ff 24       	eor	r15, r15
     3d2:	fa 94       	dec	r15
     3d4:	28 c0       	rjmp	.+80     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
                }
            }
            else
            {
                angle = ( int )( atan( y / x ) * 180 / PI );
     3d6:	b4 01       	movw	r22, r8
     3d8:	0e 94 e0 11 	call	0x23c0	; 0x23c0 <__divmodhi4>
     3dc:	07 2e       	mov	r0, r23
     3de:	00 0c       	add	r0, r0
     3e0:	88 0b       	sbc	r24, r24
     3e2:	99 0b       	sbc	r25, r25
     3e4:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__floatsisf>
     3e8:	0e 94 11 05 	call	0xa22	; 0xa22 <atan>
     3ec:	20 e0       	ldi	r18, 0x00	; 0
     3ee:	30 e0       	ldi	r19, 0x00	; 0
     3f0:	44 e3       	ldi	r20, 0x34	; 52
     3f2:	53 e4       	ldi	r21, 0x43	; 67
     3f4:	0e 94 a5 06 	call	0xd4a	; 0xd4a <__mulsf3>
     3f8:	2b ed       	ldi	r18, 0xDB	; 219
     3fa:	3f e0       	ldi	r19, 0x0F	; 15
     3fc:	49 e4       	ldi	r20, 0x49	; 73
     3fe:	50 e4       	ldi	r21, 0x40	; 64
     400:	0e 94 40 05 	call	0xa80	; 0xa80 <__divsf3>
     404:	0e 94 b2 05 	call	0xb64	; 0xb64 <__fixsfsi>
     408:	7b 01       	movw	r14, r22

                if ( x < 0 )
     40a:	99 20       	and	r9, r9
     40c:	64 f4       	brge	.+24     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
                {
                    angle += 180;
     40e:	f4 eb       	ldi	r31, 0xB4	; 180
     410:	ef 0e       	add	r14, r31
     412:	f1 1c       	adc	r15, r1
     414:	08 c0       	rjmp	.+16     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>

            if ( x == 0 )
            {
                if ( y > 0 )
                {
                    angle = 90;
     416:	0f 2e       	mov	r0, r31
     418:	fa e5       	ldi	r31, 0x5A	; 90
     41a:	ef 2e       	mov	r14, r31
     41c:	f1 2c       	mov	r15, r1
     41e:	f0 2d       	mov	r31, r0
     420:	02 c0       	rjmp	.+4      	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
        //1,2,3,4 clockwise, -1,-2,-3,-4 counterclockwise
        void setDirection( Point2D startPoint, Point2D endPoint )
        {
            short	x			= -startPoint.x + endPoint.x;
            short	y			= -startPoint.y + endPoint.y;
            int		angle		= 0;
     422:	e5 2c       	mov	r14, r5
     424:	f4 2c       	mov	r15, r4
                {
                    angle += 180;
                }
            }

            direction = ( int )( round( ( robotAngle - angle ) / 45 ) );
     426:	c8 01       	movw	r24, r16
     428:	8e 19       	sub	r24, r14
     42a:	9f 09       	sbc	r25, r15
     42c:	6d e2       	ldi	r22, 0x2D	; 45
     42e:	70 e0       	ldi	r23, 0x00	; 0
     430:	0e 94 e0 11 	call	0x23c0	; 0x23c0 <__divmodhi4>
     434:	07 2e       	mov	r0, r23
     436:	00 0c       	add	r0, r0
     438:	88 0b       	sbc	r24, r24
     43a:	99 0b       	sbc	r25, r25
     43c:	0e 94 ea 05 	call	0xbd4	; 0xbd4 <__floatsisf>
     440:	0e 94 12 07 	call	0xe24	; 0xe24 <round>
     444:	0e 94 b2 05 	call	0xb64	; 0xb64 <__fixsfsi>
     448:	8b 01       	movw	r16, r22

            if ( direction > 4 )
     44a:	65 30       	cpi	r22, 0x05	; 5
     44c:	71 05       	cpc	r23, r1
     44e:	14 f0       	brlt	.+4      	; 0x454 <__LOCK_REGION_LENGTH__+0x54>
            {
                direction = -8 + direction;
     450:	08 50       	subi	r16, 0x08	; 8
     452:	11 09       	sbc	r17, r1
            }

            if ( direction < -4 )
     454:	0c 3f       	cpi	r16, 0xFC	; 252
     456:	2f ef       	ldi	r18, 0xFF	; 255
     458:	12 07       	cpc	r17, r18
     45a:	14 f4       	brge	.+4      	; 0x460 <__LOCK_REGION_LENGTH__+0x60>
            {
                direction = 8 + direction;
     45c:	08 5f       	subi	r16, 0xF8	; 248
     45e:	1f 4f       	sbci	r17, 0xFF	; 255
            }

            clear();
     460:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>
            print_long( direction );
     464:	b8 01       	movw	r22, r16
     466:	01 2e       	mov	r0, r17
     468:	00 0c       	add	r0, r0
     46a:	88 0b       	sbc	r24, r24
     46c:	99 0b       	sbc	r25, r25
     46e:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <print_long>
            lcd_goto_xy( 0, 1 );
     472:	61 e0       	ldi	r22, 0x01	; 1
     474:	80 e0       	ldi	r24, 0x00	; 0
     476:	0e 94 42 0d 	call	0x1a84	; 0x1a84 <lcd_goto_xy>
            print_long( angle );
     47a:	b7 01       	movw	r22, r14
     47c:	0f 2c       	mov	r0, r15
     47e:	00 0c       	add	r0, r0
     480:	88 0b       	sbc	r24, r24
     482:	99 0b       	sbc	r25, r25
     484:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <print_long>
            }
        }

        void setDeviceOrientation( int angle )
        {
            switch ( angle )
     488:	3d e2       	ldi	r19, 0x2D	; 45
     48a:	e3 16       	cp	r14, r19
     48c:	f1 04       	cpc	r15, r1
     48e:	81 f1       	breq	.+96     	; 0x4f0 <__LOCK_REGION_LENGTH__+0xf0>
     490:	74 f4       	brge	.+28     	; 0x4ae <__LOCK_REGION_LENGTH__+0xae>
     492:	83 ed       	ldi	r24, 0xD3	; 211
     494:	e8 16       	cp	r14, r24
     496:	8f ef       	ldi	r24, 0xFF	; 255
     498:	f8 06       	cpc	r15, r24
     49a:	09 f1       	breq	.+66     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
     49c:	e1 14       	cp	r14, r1
     49e:	f1 04       	cpc	r15, r1
     4a0:	11 f1       	breq	.+68     	; 0x4e6 <__LOCK_REGION_LENGTH__+0xe6>
     4a2:	96 ea       	ldi	r25, 0xA6	; 166
     4a4:	e9 16       	cp	r14, r25
     4a6:	9f ef       	ldi	r25, 0xFF	; 255
     4a8:	f9 06       	cpc	r15, r25
     4aa:	c1 f5       	brne	.+112    	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     4ac:	13 c0       	rjmp	.+38     	; 0x4d4 <__LOCK_REGION_LENGTH__+0xd4>
     4ae:	a7 e8       	ldi	r26, 0x87	; 135
     4b0:	ea 16       	cp	r14, r26
     4b2:	f1 04       	cpc	r15, r1
     4b4:	29 f1       	breq	.+74     	; 0x500 <__LOCK_REGION_LENGTH__+0x100>
     4b6:	2c f4       	brge	.+10     	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
     4b8:	ea e5       	ldi	r30, 0x5A	; 90
     4ba:	ee 16       	cp	r14, r30
     4bc:	f1 04       	cpc	r15, r1
     4be:	e9 f0       	breq	.+58     	; 0x4fa <__LOCK_REGION_LENGTH__+0xfa>
     4c0:	2d c0       	rjmp	.+90     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
     4c2:	f4 eb       	ldi	r31, 0xB4	; 180
     4c4:	ef 16       	cp	r14, r31
     4c6:	f1 04       	cpc	r15, r1
     4c8:	01 f1       	breq	.+64     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
     4ca:	21 ee       	ldi	r18, 0xE1	; 225
     4cc:	e2 16       	cp	r14, r18
     4ce:	f1 04       	cpc	r15, r1
     4d0:	09 f1       	breq	.+66     	; 0x514 <__LOCK_REGION_LENGTH__+0x114>
     4d2:	24 c0       	rjmp	.+72     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
            {
                case -90:
                    orientation = EOrientation::South;
     4d4:	84 e0       	ldi	r24, 0x04	; 4
     4d6:	d1 01       	movw	r26, r2
     4d8:	14 96       	adiw	r26, 0x04	; 4
     4da:	8c 93       	st	X, r24
     4dc:	1f c0       	rjmp	.+62     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
                    break;

                case -45:
                    orientation = EOrientation::SouthEast;
     4de:	23 e0       	ldi	r18, 0x03	; 3
     4e0:	f1 01       	movw	r30, r2
     4e2:	24 83       	std	Z+4, r18	; 0x04
     4e4:	1b c0       	rjmp	.+54     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
                    break;

                case 0:
                    orientation = EOrientation::East;
     4e6:	e2 e0       	ldi	r30, 0x02	; 2
     4e8:	d1 01       	movw	r26, r2
     4ea:	14 96       	adiw	r26, 0x04	; 4
     4ec:	ec 93       	st	X, r30
     4ee:	16 c0       	rjmp	.+44     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
                    break;

                case 45:
                    orientation = EOrientation::NorthEast;
     4f0:	81 e0       	ldi	r24, 0x01	; 1
     4f2:	d1 01       	movw	r26, r2
     4f4:	14 96       	adiw	r26, 0x04	; 4
     4f6:	8c 93       	st	X, r24
     4f8:	11 c0       	rjmp	.+34     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
                    break;

                case 90:
                    orientation = EOrientation::North;
     4fa:	f1 01       	movw	r30, r2
     4fc:	14 82       	std	Z+4, r1	; 0x04
     4fe:	0e c0       	rjmp	.+28     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
                    break;

                case 135:
                    orientation = EOrientation::NorthWest;
     500:	e7 e0       	ldi	r30, 0x07	; 7
     502:	d1 01       	movw	r26, r2
     504:	14 96       	adiw	r26, 0x04	; 4
     506:	ec 93       	st	X, r30
     508:	09 c0       	rjmp	.+18     	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
                    break;

                case 180:
                    orientation = EOrientation::West;
     50a:	e6 e0       	ldi	r30, 0x06	; 6
     50c:	d1 01       	movw	r26, r2
     50e:	14 96       	adiw	r26, 0x04	; 4
     510:	ec 93       	st	X, r30
     512:	04 c0       	rjmp	.+8      	; 0x51c <__LOCK_REGION_LENGTH__+0x11c>
                    break;

                case 225:
                    orientation = EOrientation::SouthWest;
     514:	e5 e0       	ldi	r30, 0x05	; 5
     516:	d1 01       	movw	r26, r2
     518:	14 96       	adiw	r26, 0x04	; 4
     51a:	ec 93       	st	X, r30
            print_long( angle );
            //delay_ms(1000);

            setDeviceOrientation( angle );

            if ( direction < 0 )
     51c:	11 23       	and	r17, r17
     51e:	ec f4       	brge	.+58     	; 0x55a <__LOCK_REGION_LENGTH__+0x15a>
        }

    protected:
        void makeTurn( short leftSpeed, short rightSpeed, short turns )
        {
            set_motors( leftSpeed, rightSpeed );
     520:	6a e2       	ldi	r22, 0x2A	; 42
     522:	70 e0       	ldi	r23, 0x00	; 0
     524:	86 ed       	ldi	r24, 0xD6	; 214
     526:	9f ef       	ldi	r25, 0xFF	; 255
     528:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <set_motors>

            delay_ms( 200 * turns );
     52c:	c8 01       	movw	r24, r16
     52e:	99 23       	and	r25, r25
     530:	24 f4       	brge	.+8      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
     532:	88 27       	eor	r24, r24
     534:	99 27       	eor	r25, r25
     536:	80 1b       	sub	r24, r16
     538:	91 0b       	sbc	r25, r17
     53a:	48 ec       	ldi	r20, 0xC8	; 200
     53c:	9c 01       	movw	r18, r24
     53e:	42 9f       	mul	r20, r18
     540:	c0 01       	movw	r24, r0
     542:	43 9f       	mul	r20, r19
     544:	90 0d       	add	r25, r0
     546:	11 24       	eor	r1, r1
     548:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>

            set_motors( 0, 0 );
     54c:	65 2d       	mov	r22, r5
     54e:	74 2d       	mov	r23, r4
     550:	85 2d       	mov	r24, r5
     552:	94 2d       	mov	r25, r4
     554:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <set_motors>
     558:	1f c0       	rjmp	.+62     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
            if ( direction < 0 )
            {
                // turn left
                turnHalfLeft( abs( direction ) );
            }
            else if ( direction > 0 )
     55a:	10 16       	cp	r1, r16
     55c:	11 06       	cpc	r1, r17
     55e:	e4 f4       	brge	.+56     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
        }

    protected:
        void makeTurn( short leftSpeed, short rightSpeed, short turns )
        {
            set_motors( leftSpeed, rightSpeed );
     560:	66 ed       	ldi	r22, 0xD6	; 214
     562:	7f ef       	ldi	r23, 0xFF	; 255
     564:	8a e2       	ldi	r24, 0x2A	; 42
     566:	90 e0       	ldi	r25, 0x00	; 0
     568:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <set_motors>

            delay_ms( 200 * turns );
     56c:	c8 01       	movw	r24, r16
     56e:	99 23       	and	r25, r25
     570:	24 f4       	brge	.+8      	; 0x57a <__LOCK_REGION_LENGTH__+0x17a>
     572:	88 27       	eor	r24, r24
     574:	99 27       	eor	r25, r25
     576:	80 1b       	sub	r24, r16
     578:	91 0b       	sbc	r25, r17
     57a:	e8 ec       	ldi	r30, 0xC8	; 200
     57c:	dc 01       	movw	r26, r24
     57e:	ea 9f       	mul	r30, r26
     580:	c0 01       	movw	r24, r0
     582:	eb 9f       	mul	r30, r27
     584:	90 0d       	add	r25, r0
     586:	11 24       	eor	r1, r1
     588:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>

            set_motors( 0, 0 );
     58c:	65 2d       	mov	r22, r5
     58e:	74 2d       	mov	r23, r4
     590:	85 2d       	mov	r24, r5
     592:	94 2d       	mov	r25, r4
     594:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <set_motors>
            {
                // turn right
                turnHalfRight( abs( direction ) );
            }

            set_motors( 0, 0 );
     598:	65 2d       	mov	r22, r5
     59a:	74 2d       	mov	r23, r4
     59c:	85 2d       	mov	r24, r5
     59e:	94 2d       	mov	r25, r4
     5a0:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <set_motors>
        }

        bool isDirectionTraversable()
        {
            unsigned int	sensors[ 5 ];
            read_line_sensors( sensors, IR_EMITTERS_ON );
     5a4:	61 e0       	ldi	r22, 0x01	; 1
     5a6:	ce 01       	movw	r24, r28
     5a8:	01 96       	adiw	r24, 0x01	; 1
     5aa:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <read_line_sensors>

            if ( sensors[ 1 ] > OBSTACLE_VALUE || sensors[ 2 ] > OBSTACLE_VALUE || sensors[ 3 ] > OBSTACLE_VALUE )
     5ae:	8b 81       	ldd	r24, Y+3	; 0x03
     5b0:	9c 81       	ldd	r25, Y+4	; 0x04
     5b2:	81 3b       	cpi	r24, 0xB1	; 177
     5b4:	94 40       	sbci	r25, 0x04	; 4
     5b6:	50 f4       	brcc	.+20     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     5b8:	8d 81       	ldd	r24, Y+5	; 0x05
     5ba:	9e 81       	ldd	r25, Y+6	; 0x06
     5bc:	81 3b       	cpi	r24, 0xB1	; 177
     5be:	94 40       	sbci	r25, 0x04	; 4
     5c0:	28 f4       	brcc	.+10     	; 0x5cc <__LOCK_REGION_LENGTH__+0x1cc>
     5c2:	8f 81       	ldd	r24, Y+7	; 0x07
     5c4:	98 85       	ldd	r25, Y+8	; 0x08
     5c6:	81 3b       	cpi	r24, 0xB1	; 177
     5c8:	94 40       	sbci	r25, 0x04	; 4
     5ca:	18 f1       	brcs	.+70     	; 0x612 <__LOCK_REGION_LENGTH__+0x212>
            {
                clear();
     5cc:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>
                print( "!OBS!" );
     5d0:	88 e5       	ldi	r24, 0x58	; 88
     5d2:	91 e0       	ldi	r25, 0x01	; 1
     5d4:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
                delay_ms( 1000 );
     5d8:	88 ee       	ldi	r24, 0xE8	; 232
     5da:	93 e0       	ldi	r25, 0x03	; 3
     5dc:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
                {
                    return nextPos;
                }
                else
                {
                    matrix[ nextPos.x ][ nextPos.y ].isObstacle = true;
     5e0:	f6 01       	movw	r30, r12
     5e2:	ee 0f       	add	r30, r30
     5e4:	ff 1f       	adc	r31, r31
     5e6:	ec 0d       	add	r30, r12
     5e8:	fd 1d       	adc	r31, r13
     5ea:	ee 0f       	add	r30, r30
     5ec:	ff 1f       	adc	r31, r31
     5ee:	2a e5       	ldi	r18, 0x5A	; 90
     5f0:	2a 9d       	mul	r18, r10
     5f2:	c0 01       	movw	r24, r0
     5f4:	2b 9d       	mul	r18, r11
     5f6:	90 0d       	add	r25, r0
     5f8:	11 24       	eor	r1, r1
     5fa:	e8 0f       	add	r30, r24
     5fc:	f9 1f       	adc	r31, r25
     5fe:	e3 53       	subi	r30, 0x33	; 51
     600:	fe 4f       	sbci	r31, 0xFE	; 254
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	84 83       	std	Z+4, r24	; 0x04
     606:	41 e0       	ldi	r20, 0x01	; 1
     608:	64 1a       	sub	r6, r20
     60a:	71 08       	sbc	r7, r1
        {
            //EOrientation	backwardDirection = GetBackwardDirection();
            Point2D	nextPos( -1, -1 );
            int		count = 0;

            while ( count < 8 )
     60c:	09 f0       	breq	.+2      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
     60e:	7d ce       	rjmp	.-774    	; 0x30a <_ZN5Robot8mainMenuEv+0x138>
     610:	0a c0       	rjmp	.+20     	; 0x626 <__LOCK_REGION_LENGTH__+0x226>
                print( "!OBS!" );
                delay_ms( 1000 );
                return false;
            }

            clear();
     612:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>
            print( "NOT OBS" );
     616:	8e e5       	ldi	r24, 0x5E	; 94
     618:	91 e0       	ldi	r25, 0x01	; 1
     61a:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
            delay_ms( 1000 );
     61e:	88 ee       	ldi	r24, 0xE8	; 232
     620:	93 e0       	ldi	r25, 0x03	; 3
     622:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>

        }

        void printPos( short x, short y )
        {
            clear();
     626:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>
            print( "(" );
     62a:	81 e3       	ldi	r24, 0x31	; 49
     62c:	91 e0       	ldi	r25, 0x01	; 1
     62e:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
            print_long( x );
     632:	b5 01       	movw	r22, r10
     634:	0b 2c       	mov	r0, r11
     636:	00 0c       	add	r0, r0
     638:	88 0b       	sbc	r24, r24
     63a:	99 0b       	sbc	r25, r25
     63c:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <print_long>
            print( ", " );
     640:	83 e3       	ldi	r24, 0x33	; 51
     642:	91 e0       	ldi	r25, 0x01	; 1
     644:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
            print_long( y );
     648:	b6 01       	movw	r22, r12
     64a:	0d 2c       	mov	r0, r13
     64c:	00 0c       	add	r0, r0
     64e:	88 0b       	sbc	r24, r24
     650:	99 0b       	sbc	r25, r25
     652:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <print_long>
            print( ")" );
     656:	86 e3       	ldi	r24, 0x36	; 54
     658:	91 e0       	ldi	r25, 0x01	; 1
     65a:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
        void stepToGoal( const Point2D& goalPos )
        {
            Point2D nextPos = nextStepToFinish( goalPos );

            printPos( nextPos.x, nextPos.y );
            delay_ms( 1000 );
     65e:	88 ee       	ldi	r24, 0xE8	; 232
     660:	93 e0       	ldi	r25, 0x03	; 3
     662:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>

            if ( !matrix[ nextPos.x ][ nextPos.y ].isVisited )
     666:	f6 01       	movw	r30, r12
     668:	ee 0f       	add	r30, r30
     66a:	ff 1f       	adc	r31, r31
     66c:	ec 0d       	add	r30, r12
     66e:	fd 1d       	adc	r31, r13
     670:	ee 0f       	add	r30, r30
     672:	ff 1f       	adc	r31, r31
     674:	2a e5       	ldi	r18, 0x5A	; 90
     676:	2a 9d       	mul	r18, r10
     678:	c0 01       	movw	r24, r0
     67a:	2b 9d       	mul	r18, r11
     67c:	90 0d       	add	r25, r0
     67e:	11 24       	eor	r1, r1
     680:	e8 0f       	add	r30, r24
     682:	f9 1f       	adc	r31, r25
     684:	e3 53       	subi	r30, 0x33	; 51
     686:	fe 4f       	sbci	r31, 0xFE	; 254
     688:	85 81       	ldd	r24, Z+5	; 0x05
     68a:	81 11       	cpse	r24, r1
     68c:	14 c0       	rjmp	.+40     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
                    minDist = currDist;
                    minPos	= currPos;
                }
            }*/

            doPrint = false;
     68e:	10 92 13 07 	sts	0x0713, r1	; 0x800713 <doPrint>
                if ( savedDist > currDist )
                {
                    matrix[ nextPos.x ][ nextPos.y ].distToStart = currDist;
                }

                matrix[nextPos.x][nextPos.y].isVisited = true;
     692:	f6 01       	movw	r30, r12
     694:	ee 0f       	add	r30, r30
     696:	ff 1f       	adc	r31, r31
     698:	ec 0d       	add	r30, r12
     69a:	fd 1d       	adc	r31, r13
     69c:	ee 0f       	add	r30, r30
     69e:	ff 1f       	adc	r31, r31
     6a0:	2a 9d       	mul	r18, r10
     6a2:	c0 01       	movw	r24, r0
     6a4:	2b 9d       	mul	r18, r11
     6a6:	90 0d       	add	r25, r0
     6a8:	11 24       	eor	r1, r1
     6aa:	e8 0f       	add	r30, r24
     6ac:	f9 1f       	adc	r31, r25
     6ae:	e3 53       	subi	r30, 0x33	; 51
     6b0:	fe 4f       	sbci	r31, 0xFE	; 254
     6b2:	81 e0       	ldi	r24, 0x01	; 1
     6b4:	85 83       	std	Z+5, r24	; 0x05
            }

            // Move until stepping on the goal position
            if ( position.x != goalPos.x || position.y != goalPos.y )
     6b6:	d1 01       	movw	r26, r2
     6b8:	2d 91       	ld	r18, X+
     6ba:	3c 91       	ld	r19, X
     6bc:	11 97       	sbiw	r26, 0x01	; 1
     6be:	15 96       	adiw	r26, 0x05	; 5
     6c0:	8d 91       	ld	r24, X+
     6c2:	9c 91       	ld	r25, X
     6c4:	16 97       	sbiw	r26, 0x06	; 6
     6c6:	28 17       	cp	r18, r24
     6c8:	39 07       	cpc	r19, r25
     6ca:	59 f4       	brne	.+22     	; 0x6e2 <__LOCK_REGION_LENGTH__+0x2e2>
     6cc:	12 96       	adiw	r26, 0x02	; 2
     6ce:	2d 91       	ld	r18, X+
     6d0:	3c 91       	ld	r19, X
     6d2:	13 97       	sbiw	r26, 0x03	; 3
     6d4:	17 96       	adiw	r26, 0x07	; 7
     6d6:	8d 91       	ld	r24, X+
     6d8:	9c 91       	ld	r25, X
     6da:	18 97       	sbiw	r26, 0x08	; 8
     6dc:	28 17       	cp	r18, r24
     6de:	39 07       	cpc	r19, r25
     6e0:	c1 f1       	breq	.+112    	; 0x752 <__LOCK_REGION_LENGTH__+0x352>
            {
                position = nextPos;
     6e2:	f1 01       	movw	r30, r2
     6e4:	b1 82       	std	Z+1, r11	; 0x01
     6e6:	a0 82       	st	Z, r10
     6e8:	d3 82       	std	Z+3, r13	; 0x03
     6ea:	c2 82       	std	Z+2, r12	; 0x02
            makeTurn( 42, -42, turns );
        }

        void moveForward()
        {
            set_motors( 19, 19 );
     6ec:	63 e1       	ldi	r22, 0x13	; 19
     6ee:	70 e0       	ldi	r23, 0x00	; 0
     6f0:	83 e1       	ldi	r24, 0x13	; 19
     6f2:	90 e0       	ldi	r25, 0x00	; 0
     6f4:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <set_motors>
            set_motors( 0, 0 );
        }

        bool isOnMarker()
        {
            read_line_sensors( sensors, IR_EMITTERS_ON );
     6f8:	61 e0       	ldi	r22, 0x01	; 1
     6fa:	8b 85       	ldd	r24, Y+11	; 0x0b
     6fc:	9c 85       	ldd	r25, Y+12	; 0x0c
     6fe:	0e 94 c2 0e 	call	0x1d84	; 0x1d84 <read_line_sensors>

            if ( sensors[1] > OBSTACLE_VALUE || sensors[2] > OBSTACLE_VALUE || sensors[3] > OBSTACLE_VALUE ) // there is obstacle
     702:	d1 01       	movw	r26, r2
     704:	1b 96       	adiw	r26, 0x0b	; 11
     706:	8d 91       	ld	r24, X+
     708:	9c 91       	ld	r25, X
     70a:	1c 97       	sbiw	r26, 0x0c	; 12
     70c:	81 3b       	cpi	r24, 0xB1	; 177
     70e:	b4 e0       	ldi	r27, 0x04	; 4
     710:	9b 07       	cpc	r25, r27
     712:	88 f4       	brcc	.+34     	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
     714:	f1 01       	movw	r30, r2
     716:	25 85       	ldd	r18, Z+13	; 0x0d
     718:	36 85       	ldd	r19, Z+14	; 0x0e
            {
                return true;
            }
            else if ( sensors[1] > MARKER_VALUE || sensors[2] > MARKER_VALUE || sensors[3] > MARKER_VALUE ) // there is marker
     71a:	8f 35       	cpi	r24, 0x5F	; 95
     71c:	91 40       	sbci	r25, 0x01	; 1
     71e:	58 f4       	brcc	.+22     	; 0x736 <__LOCK_REGION_LENGTH__+0x336>
     720:	2f 35       	cpi	r18, 0x5F	; 95
     722:	31 40       	sbci	r19, 0x01	; 1
     724:	40 f4       	brcc	.+16     	; 0x736 <__LOCK_REGION_LENGTH__+0x336>

        void moveForward()
        {
            set_motors( 19, 19 );

            while ( !isOnMarker() ) {}
     726:	d1 01       	movw	r26, r2
     728:	1f 96       	adiw	r26, 0x0f	; 15
     72a:	8d 91       	ld	r24, X+
     72c:	9c 91       	ld	r25, X
     72e:	50 97       	sbiw	r26, 0x10	; 16
     730:	8f 35       	cpi	r24, 0x5F	; 95
     732:	91 40       	sbci	r25, 0x01	; 1
     734:	08 f3       	brcs	.-62     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>

            play( ">>a32" );
     736:	82 e5       	ldi	r24, 0x52	; 82
     738:	91 e0       	ldi	r25, 0x01	; 1
     73a:	0e 94 b2 0b 	call	0x1764	; 0x1764 <play>
            delay_ms( 900 );
     73e:	84 e8       	ldi	r24, 0x84	; 132
     740:	93 e0       	ldi	r25, 0x03	; 3
     742:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
            set_motors( 0, 0 );
     746:	60 e0       	ldi	r22, 0x00	; 0
     748:	70 e0       	ldi	r23, 0x00	; 0
     74a:	80 e0       	ldi	r24, 0x00	; 0
     74c:	90 e0       	ldi	r25, 0x00	; 0
     74e:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <set_motors>

            while ( ( position.x != finishPos.x || position.y != finishPos.y ) && lap <= CNT_LAPS )
            {
                stepToGoal( finishPos );

                if ( position.x == finishPos.x && position.y == finishPos.y )
     752:	f1 01       	movw	r30, r2
     754:	20 81       	ld	r18, Z
     756:	31 81       	ldd	r19, Z+1	; 0x01
     758:	85 81       	ldd	r24, Z+5	; 0x05
     75a:	96 81       	ldd	r25, Z+6	; 0x06
     75c:	28 17       	cp	r18, r24
     75e:	39 07       	cpc	r19, r25
     760:	09 f0       	breq	.+2      	; 0x764 <__LOCK_REGION_LENGTH__+0x364>
     762:	c1 cd       	rjmp	.-1150   	; 0x2e6 <_ZN5Robot8mainMenuEv+0x114>
     764:	82 81       	ldd	r24, Z+2	; 0x02
     766:	93 81       	ldd	r25, Z+3	; 0x03
     768:	47 81       	ldd	r20, Z+7	; 0x07
     76a:	50 85       	ldd	r21, Z+8	; 0x08
     76c:	84 17       	cp	r24, r20
     76e:	95 07       	cpc	r25, r21
     770:	09 f0       	breq	.+2      	; 0x774 <__LOCK_REGION_LENGTH__+0x374>
     772:	b9 cd       	rjmp	.-1166   	; 0x2e6 <_ZN5Robot8mainMenuEv+0x114>
                {
                    matrix[ position.x ][ position.y ].distToFinish	= 0;
     774:	ac 01       	movw	r20, r24
     776:	44 0f       	add	r20, r20
     778:	55 1f       	adc	r21, r21
     77a:	84 0f       	add	r24, r20
     77c:	95 1f       	adc	r25, r21
     77e:	88 0f       	add	r24, r24
     780:	99 1f       	adc	r25, r25
     782:	6a e5       	ldi	r22, 0x5A	; 90
     784:	62 9f       	mul	r22, r18
     786:	f0 01       	movw	r30, r0
     788:	63 9f       	mul	r22, r19
     78a:	f0 0d       	add	r31, r0
     78c:	11 24       	eor	r1, r1
     78e:	8e 0f       	add	r24, r30
     790:	9f 1f       	adc	r25, r31
     792:	fc 01       	movw	r30, r24
     794:	e3 53       	subi	r30, 0x33	; 51
     796:	fe 4f       	sbci	r31, 0xFE	; 254
     798:	13 82       	std	Z+3, r1	; 0x03
     79a:	12 82       	std	Z+2, r1	; 0x02
            finishPos = startPos;
        }

        void calculateDistToFinish()
        {
            Point2D currentPos( finishPos );
     79c:	d1 01       	movw	r26, r2
     79e:	15 96       	adiw	r26, 0x05	; 5
     7a0:	ed 91       	ld	r30, X+
     7a2:	fc 91       	ld	r31, X
     7a4:	16 97       	sbiw	r26, 0x06	; 6
     7a6:	17 96       	adiw	r26, 0x07	; 7
     7a8:	8d 91       	ld	r24, X+
     7aa:	9c 91       	ld	r25, X
     7ac:	18 97       	sbiw	r26, 0x08	; 8
            short	dist = matrix[ finishPos.x ][ finishPos.y ].distToStart;
     7ae:	9c 01       	movw	r18, r24
     7b0:	22 0f       	add	r18, r18
     7b2:	33 1f       	adc	r19, r19
     7b4:	d9 01       	movw	r26, r18
     7b6:	a8 0f       	add	r26, r24
     7b8:	b9 1f       	adc	r27, r25
     7ba:	aa 0f       	add	r26, r26
     7bc:	bb 1f       	adc	r27, r27
     7be:	6e 9f       	mul	r22, r30
     7c0:	a0 01       	movw	r20, r0
     7c2:	6f 9f       	mul	r22, r31
     7c4:	50 0d       	add	r21, r0
     7c6:	11 24       	eor	r1, r1
     7c8:	a4 0f       	add	r26, r20
     7ca:	b5 1f       	adc	r27, r21
     7cc:	a3 53       	subi	r26, 0x33	; 51
     7ce:	be 4f       	sbci	r27, 0xFE	; 254
     7d0:	6d 91       	ld	r22, X+
     7d2:	7c 91       	ld	r23, X

            while ( matrix[ currentPos.x ][ currentPos.y ].distToStart != 0  )
     7d4:	61 15       	cp	r22, r1
     7d6:	71 05       	cpc	r23, r1
     7d8:	e1 f0       	breq	.+56     	; 0x812 <__LOCK_REGION_LENGTH__+0x412>
            {
                Cell& currCell( matrix[ currentPos.x ][ currentPos.y ] );

                if ( currCell.distToFinish < dist - currCell.distToStart )
     7da:	66 1b       	sub	r22, r22
     7dc:	77 0b       	sbc	r23, r23
     7de:	9c 01       	movw	r18, r24
     7e0:	22 0f       	add	r18, r18
     7e2:	33 1f       	adc	r19, r19
     7e4:	82 0f       	add	r24, r18
     7e6:	93 1f       	adc	r25, r19
     7e8:	88 0f       	add	r24, r24
     7ea:	99 1f       	adc	r25, r25
     7ec:	4a e5       	ldi	r20, 0x5A	; 90
     7ee:	4e 9f       	mul	r20, r30
     7f0:	90 01       	movw	r18, r0
     7f2:	4f 9f       	mul	r20, r31
     7f4:	30 0d       	add	r19, r0
     7f6:	11 24       	eor	r1, r1
     7f8:	82 0f       	add	r24, r18
     7fa:	93 1f       	adc	r25, r19
     7fc:	fc 01       	movw	r30, r24
     7fe:	e1 53       	subi	r30, 0x31	; 49
     800:	fe 4f       	sbci	r31, 0xFE	; 254
     802:	80 81       	ld	r24, Z
     804:	91 81       	ldd	r25, Z+1	; 0x01
     806:	86 17       	cp	r24, r22
     808:	97 07       	cpc	r25, r23
     80a:	dc f7       	brge	.-10     	; 0x802 <__LOCK_REGION_LENGTH__+0x402>
                {
                    currCell.distToFinish = dist - currCell.distToStart;
     80c:	71 83       	std	Z+1, r23	; 0x01
     80e:	60 83       	st	Z, r22
     810:	f8 cf       	rjmp	.-16     	; 0x802 <__LOCK_REGION_LENGTH__+0x402>
                currentPos = this->getNearestToStartAdjacent( currentPos );
            }

            Cell& currCell( matrix[ currentPos.x ][ currentPos.y ] );

            if ( currCell.distToFinish < dist - currCell.distToStart )
     812:	dc 01       	movw	r26, r24
     814:	aa 0f       	add	r26, r26
     816:	bb 1f       	adc	r27, r27
     818:	a8 0f       	add	r26, r24
     81a:	b9 1f       	adc	r27, r25
     81c:	aa 0f       	add	r26, r26
     81e:	bb 1f       	adc	r27, r27
     820:	4a e5       	ldi	r20, 0x5A	; 90
     822:	4e 9f       	mul	r20, r30
     824:	90 01       	movw	r18, r0
     826:	4f 9f       	mul	r20, r31
     828:	30 0d       	add	r19, r0
     82a:	11 24       	eor	r1, r1
     82c:	a2 0f       	add	r26, r18
     82e:	b3 1f       	adc	r27, r19
     830:	a3 53       	subi	r26, 0x33	; 51
     832:	be 4f       	sbci	r27, 0xFE	; 254
     834:	12 96       	adiw	r26, 0x02	; 2
     836:	2d 91       	ld	r18, X+
     838:	3c 91       	ld	r19, X
     83a:	13 97       	sbiw	r26, 0x03	; 3
     83c:	26 17       	cp	r18, r22
     83e:	37 07       	cpc	r19, r23
     840:	1c f4       	brge	.+6      	; 0x848 <__LOCK_REGION_LENGTH__+0x448>
            {
                currCell.distToFinish = dist - currCell.distToStart;
     842:	fd 01       	movw	r30, r26
     844:	73 83       	std	Z+3, r23	; 0x03
     846:	62 83       	std	Z+2, r22	; 0x02

        void reverseDirection()
        {
            this->calculateDistToFinish();
            // Swap distance to start with distance to finish and find start position
            Point2D startPos( finishPos );
     848:	f1 01       	movw	r30, r2
     84a:	b5 80       	ldd	r11, Z+5	; 0x05
     84c:	c6 80       	ldd	r12, Z+6	; 0x06
     84e:	d7 80       	ldd	r13, Z+7	; 0x07
     850:	70 85       	ldd	r23, Z+8	; 0x08
     852:	4d ec       	ldi	r20, 0xCD	; 205
     854:	51 e0       	ldi	r21, 0x01	; 1

            for ( short i = 0; i < MAX_ROWS; i++ )
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	a7 2e       	mov	r10, r23
     85c:	fa 01       	movw	r30, r20
     85e:	80 e0       	ldi	r24, 0x00	; 0
     860:	90 e0       	ldi	r25, 0x00	; 0
            {
                for ( short j = 0; j < MAX_ROWS; j++ )
                {
                    if ( matrix[ i ][ j ].isVisited )
                    {
                        if ( matrix[ i ][ j ].distToStart == 0 )
     862:	e2 2e       	mov	r14, r18
     864:	f3 2e       	mov	r15, r19
     866:	df 01       	movw	r26, r30

            for ( short i = 0; i < MAX_ROWS; i++ )
            {
                for ( short j = 0; j < MAX_ROWS; j++ )
                {
                    if ( matrix[ i ][ j ].isVisited )
     868:	65 81       	ldd	r22, Z+5	; 0x05
     86a:	66 23       	and	r22, r22
     86c:	b1 f0       	breq	.+44     	; 0x89a <__LOCK_REGION_LENGTH__+0x49a>
                    {
                        if ( matrix[ i ][ j ].distToStart == 0 )
     86e:	60 81       	ld	r22, Z
     870:	71 81       	ldd	r23, Z+1	; 0x01
     872:	61 15       	cp	r22, r1
     874:	71 05       	cpc	r23, r1
     876:	21 f4       	brne	.+8      	; 0x880 <__LOCK_REGION_LENGTH__+0x480>
     878:	d8 2e       	mov	r13, r24
     87a:	a9 2e       	mov	r10, r25
     87c:	be 2c       	mov	r11, r14
     87e:	cf 2c       	mov	r12, r15
                        {
                            // Save the start position.
                            startPos = Point2D( i, j );
                        }

                        short tmp						= matrix[ i ][ j ].distToFinish;
     880:	12 96       	adiw	r26, 0x02	; 2
     882:	0d 91       	ld	r16, X+
     884:	1c 91       	ld	r17, X
     886:	13 97       	sbiw	r26, 0x03	; 3
                        matrix[ i ][ j ].distToFinish	= matrix[ i ][ j ].distToStart;
     888:	13 96       	adiw	r26, 0x03	; 3
     88a:	7c 93       	st	X, r23
     88c:	6e 93       	st	-X, r22
     88e:	12 97       	sbiw	r26, 0x02	; 2
                        matrix[ i ][ j ].distToStart	= tmp;
     890:	11 96       	adiw	r26, 0x01	; 1
     892:	1c 93       	st	X, r17
     894:	0e 93       	st	-X, r16
                        matrix[ i ][ j ].isVisited		= false;
     896:	15 96       	adiw	r26, 0x05	; 5
     898:	1c 92       	st	X, r1
     89a:	01 96       	adiw	r24, 0x01	; 1
     89c:	36 96       	adiw	r30, 0x06	; 6
            // Swap distance to start with distance to finish and find start position
            Point2D startPos( finishPos );

            for ( short i = 0; i < MAX_ROWS; i++ )
            {
                for ( short j = 0; j < MAX_ROWS; j++ )
     89e:	8f 30       	cpi	r24, 0x0F	; 15
     8a0:	91 05       	cpc	r25, r1
     8a2:	09 f7       	brne	.-62     	; 0x866 <__LOCK_REGION_LENGTH__+0x466>
     8a4:	2f 5f       	subi	r18, 0xFF	; 255
     8a6:	3f 4f       	sbci	r19, 0xFF	; 255
     8a8:	46 5a       	subi	r20, 0xA6	; 166
     8aa:	5f 4f       	sbci	r21, 0xFF	; 255
        {
            this->calculateDistToFinish();
            // Swap distance to start with distance to finish and find start position
            Point2D startPos( finishPos );

            for ( short i = 0; i < MAX_ROWS; i++ )
     8ac:	2f 30       	cpi	r18, 0x0F	; 15
     8ae:	31 05       	cpc	r19, r1
     8b0:	a9 f6       	brne	.-86     	; 0x85c <__LOCK_REGION_LENGTH__+0x45c>
                    }
                }
            }

            // Make the start position our next finish position
            finishPos = startPos;
     8b2:	d1 01       	movw	r26, r2
     8b4:	15 96       	adiw	r26, 0x05	; 5
     8b6:	bc 92       	st	X, r11
     8b8:	15 97       	sbiw	r26, 0x05	; 5
     8ba:	16 96       	adiw	r26, 0x06	; 6
     8bc:	cc 92       	st	X, r12
     8be:	16 97       	sbiw	r26, 0x06	; 6
     8c0:	17 96       	adiw	r26, 0x07	; 7
     8c2:	dc 92       	st	X, r13
     8c4:	17 97       	sbiw	r26, 0x07	; 7
     8c6:	18 96       	adiw	r26, 0x08	; 8
     8c8:	ac 92       	st	X, r10
     8ca:	18 97       	sbiw	r26, 0x08	; 8

                if ( position.x == finishPos.x && position.y == finishPos.y )
                {
                    matrix[ position.x ][ position.y ].distToFinish	= 0;
                    this->reverseDirection();
                    doPrint = true;
     8cc:	21 e0       	ldi	r18, 0x01	; 1
     8ce:	20 93 13 07 	sts	0x0713, r18	; 0x800713 <doPrint>
                    matrix[ position.x ][ position.y ].isVisited	= true;
     8d2:	4d 91       	ld	r20, X+
     8d4:	5c 91       	ld	r21, X
     8d6:	11 97       	sbiw	r26, 0x01	; 1
     8d8:	12 96       	adiw	r26, 0x02	; 2
     8da:	8d 91       	ld	r24, X+
     8dc:	9c 91       	ld	r25, X
     8de:	13 97       	sbiw	r26, 0x03	; 3
     8e0:	bc 01       	movw	r22, r24
     8e2:	66 0f       	add	r22, r22
     8e4:	77 1f       	adc	r23, r23
     8e6:	86 0f       	add	r24, r22
     8e8:	97 1f       	adc	r25, r23
     8ea:	88 0f       	add	r24, r24
     8ec:	99 1f       	adc	r25, r25
     8ee:	3a e5       	ldi	r19, 0x5A	; 90
     8f0:	34 9f       	mul	r19, r20
     8f2:	f0 01       	movw	r30, r0
     8f4:	35 9f       	mul	r19, r21
     8f6:	f0 0d       	add	r31, r0
     8f8:	11 24       	eor	r1, r1
     8fa:	8e 0f       	add	r24, r30
     8fc:	9f 1f       	adc	r25, r31
     8fe:	fc 01       	movw	r30, r24
     900:	e3 53       	subi	r30, 0x33	; 51
     902:	fe 4f       	sbci	r31, 0xFE	; 254
     904:	25 83       	std	Z+5, r18	; 0x05

                    lap++;
     906:	53 96       	adiw	r26, 0x13	; 19
     908:	8d 91       	ld	r24, X+
     90a:	9c 91       	ld	r25, X
     90c:	54 97       	sbiw	r26, 0x14	; 20
     90e:	01 96       	adiw	r24, 0x01	; 1
     910:	54 96       	adiw	r26, 0x14	; 20
     912:	9c 93       	st	X, r25
     914:	8e 93       	st	-X, r24
     916:	53 97       	sbiw	r26, 0x13	; 19
     918:	e6 cc       	rjmp	.-1588   	; 0x2e6 <_ZN5Robot8mainMenuEv+0x114>
        void mainRobotLogic()
        {
            matrix[ position.x ][ position.y ].distToStart	= 0;
            matrix[ position.x ][ position.y ].isVisited	= true;

            while ( ( position.x != finishPos.x || position.y != finishPos.y ) && lap <= CNT_LAPS )
     91a:	f1 01       	movw	r30, r2
     91c:	83 89       	ldd	r24, Z+19	; 0x13
     91e:	94 89       	ldd	r25, Z+20	; 0x14
     920:	05 97       	sbiw	r24, 0x05	; 5
     922:	0c f0       	brlt	.+2      	; 0x926 <__stack+0x27>
     924:	74 cc       	rjmp	.-1816   	; 0x20e <_ZN5Robot8mainMenuEv+0x3c>
     926:	68 94       	set
     928:	66 24       	eor	r6, r6
     92a:	63 f8       	bld	r6, 3
     92c:	71 2c       	mov	r7, r1
     92e:	ed cc       	rjmp	.-1574   	; 0x30a <_ZN5Robot8mainMenuEv+0x138>
            // Get next pos using the lambda from above
            Point2D nextPos( this->getClosestAdjacent( position, goalPos, getNextDist ) );

            if ( nextPos == position )
            {
                clear();
     930:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>
                print( "here" );
     934:	86 e6       	ldi	r24, 0x66	; 102
     936:	91 e0       	ldi	r25, 0x01	; 1
     938:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
                delay_ms( 1000 );
     93c:	88 ee       	ldi	r24, 0xE8	; 232
     93e:	93 e0       	ldi	r25, 0x03	; 3
     940:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
                clear();
     944:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>

        Point2D getClosestAdjacent( const Point2D& from, const Point2D& to, getDistFunc getDist )
        {
            //Point2D adjPts[8]	= this->getAdjacentPts();
            short	minDist		= getDist( from, to );
            Point2D	minPos( from );
     948:	f1 01       	movw	r30, r2
     94a:	80 81       	ld	r24, Z
     94c:	91 81       	ldd	r25, Z+1	; 0x01
     94e:	a2 81       	ldd	r26, Z+2	; 0x02
     950:	b3 81       	ldd	r27, Z+3	; 0x03
                    minDist = currDist;
                    minPos	= currPos;
                }
            }*/

            doPrint = false;
     952:	10 92 13 07 	sts	0x0713, r1	; 0x800713 <doPrint>
     956:	5c 01       	movw	r10, r24
     958:	6d 01       	movw	r12, r26
     95a:	ff cc       	rjmp	.-1538   	; 0x35a <_ZN5Robot8mainMenuEv+0x188>
            return false;
        }

        int getRobotAngle()
        {
            switch ( orientation )
     95c:	d1 01       	movw	r26, r2
     95e:	14 96       	adiw	r26, 0x04	; 4
     960:	8c 91       	ld	r24, X
     962:	90 e0       	ldi	r25, 0x00	; 0
     964:	88 30       	cpi	r24, 0x08	; 8
     966:	91 05       	cpc	r25, r1
     968:	08 f0       	brcs	.+2      	; 0x96c <__stack+0x6d>
     96a:	12 cd       	rjmp	.-1500   	; 0x390 <_ZN5Robot8mainMenuEv+0x1be>
     96c:	fc 01       	movw	r30, r24
     96e:	ec 5c       	subi	r30, 0xCC	; 204
     970:	ff 4f       	sbci	r31, 0xFF	; 255
     972:	0c 94 35 12 	jmp	0x246a	; 0x246a <__tablejump2__>
            {
                case EOrientation::South:
                    return -90;

                case EOrientation::SouthEast:
                    return -45;
     976:	03 ed       	ldi	r16, 0xD3	; 211
     978:	1f ef       	ldi	r17, 0xFF	; 255
     97a:	0f cd       	rjmp	.-1506   	; 0x39a <_ZN5Robot8mainMenuEv+0x1c8>
        int getRobotAngle()
        {
            switch ( orientation )
            {
                case EOrientation::South:
                    return -90;
     97c:	06 ea       	ldi	r16, 0xA6	; 166
     97e:	1f ef       	ldi	r17, 0xFF	; 255
     980:	0c cd       	rjmp	.-1512   	; 0x39a <_ZN5Robot8mainMenuEv+0x1c8>

00000982 <main>:
            return pos.x >= 0 && pos.x < MAX_ROWS && pos.y >= 0 && pos.y < MAX_ROWS;
        }
};

int main()
{
     982:	cf 93       	push	r28
     984:	df 93       	push	r29
     986:	cd b7       	in	r28, 0x3d	; 61
     988:	de b7       	in	r29, 0x3e	; 62
     98a:	65 97       	sbiw	r28, 0x15	; 21
     98c:	0f b6       	in	r0, 0x3f	; 63
     98e:	f8 94       	cli
     990:	de bf       	out	0x3e, r29	; 62
     992:	0f be       	out	0x3f, r0	; 63
     994:	cd bf       	out	0x3d, r28	; 61
        short x;
        short y;

        Point2D( short inX, short inY )
            : x( inX )
            , y ( inY )
     996:	85 e0       	ldi	r24, 0x05	; 5
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	9a 83       	std	Y+2, r25	; 0x02
     99c:	89 83       	std	Y+1, r24	; 0x01
     99e:	1c 82       	std	Y+4, r1	; 0x04
     9a0:	1b 82       	std	Y+3, r1	; 0x03
    public:
        Robot()
            : position( 5, 0 )
            , orientation( EOrientation::North )
            , finishPos( 5, 3 )
            , lap ( 0 )
     9a2:	1d 82       	std	Y+5, r1	; 0x05
        short x;
        short y;

        Point2D( short inX, short inY )
            : x( inX )
            , y ( inY )
     9a4:	9f 83       	std	Y+7, r25	; 0x07
     9a6:	8e 83       	std	Y+6, r24	; 0x06
     9a8:	83 e0       	ldi	r24, 0x03	; 3
     9aa:	90 e0       	ldi	r25, 0x00	; 0
     9ac:	99 87       	std	Y+9, r25	; 0x09
     9ae:	88 87       	std	Y+8, r24	; 0x08
    public:
        Robot()
            : position( 5, 0 )
            , orientation( EOrientation::North )
            , finishPos( 5, 3 )
            , lap ( 0 )
     9b0:	1d 8a       	std	Y+21, r1	; 0x15
     9b2:	1c 8a       	std	Y+20, r1	; 0x14
        {}

        void initialize()
        {
            // Initialize the line reading sensors
            pololu_3pi_init( 2000 );
     9b4:	80 ed       	ldi	r24, 0xD0	; 208
     9b6:	97 e0       	ldi	r25, 0x07	; 7
     9b8:	0e 94 f7 0e 	call	0x1dee	; 0x1dee <pololu_3pi_init>

            set_motors( 0, 0 );
     9bc:	60 e0       	ldi	r22, 0x00	; 0
     9be:	70 e0       	ldi	r23, 0x00	; 0
     9c0:	80 e0       	ldi	r24, 0x00	; 0
     9c2:	90 e0       	ldi	r25, 0x00	; 0
     9c4:	0e 94 f8 0d 	call	0x1bf0	; 0x1bf0 <set_motors>
int read_temperature_c(void);

unsigned int read_battery_millivolts_3pi(void);
static inline unsigned int read_battery_millivolts(void)
{
  return read_battery_millivolts_3pi();
     9c8:	0e 94 9a 08 	call	0x1134	; 0x1134 <read_battery_millivolts_3pi>
     9cc:	8c 01       	movw	r16, r24

            // Display battery voltage and wait two seconds
            unsigned short bat = read_battery_millivolts();
            clear();
     9ce:	0e 94 bb 0c 	call	0x1976	; 0x1976 <clear>
            print_long( bat );
     9d2:	b8 01       	movw	r22, r16
     9d4:	80 e0       	ldi	r24, 0x00	; 0
     9d6:	90 e0       	ldi	r25, 0x00	; 0
     9d8:	0e 94 1f 0d 	call	0x1a3e	; 0x1a3e <print_long>
            print( "mV" );
     9dc:	8b e6       	ldi	r24, 0x6B	; 107
     9de:	91 e0       	ldi	r25, 0x01	; 1
     9e0:	0e 94 ca 0c 	call	0x1994	; 0x1994 <print>
            delay_ms( 1000 );
     9e4:	88 ee       	ldi	r24, 0xE8	; 232
     9e6:	93 e0       	ldi	r25, 0x03	; 3
     9e8:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>

            this->mainMenu();
     9ec:	ce 01       	movw	r24, r28
     9ee:	01 96       	adiw	r24, 0x01	; 1
     9f0:	0e 94 e9 00 	call	0x1d2	; 0x1d2 <_ZN5Robot8mainMenuEv>

000009f4 <_GLOBAL__sub_I_doPrint>:

    set_motors( 0, 0 );

    // Stop code execution
    while ( true ) {}
}
     9f4:	4d ec       	ldi	r20, 0xCD	; 205
     9f6:	51 e0       	ldi	r21, 0x01	; 1

        Cell()
            : distToStart( SHRT_MAX )
            , distToFinish( SHRT_MAX )
            , isObstacle( false )
            , isVisited( false )
     9f8:	8f ef       	ldi	r24, 0xFF	; 255
     9fa:	9f e7       	ldi	r25, 0x7F	; 127
     9fc:	fa 01       	movw	r30, r20
     9fe:	46 5a       	subi	r20, 0xA6	; 166
     a00:	5f 4f       	sbci	r21, 0xFF	; 255
     a02:	9a 01       	movw	r18, r20
     a04:	91 83       	std	Z+1, r25	; 0x01
     a06:	80 83       	st	Z, r24
     a08:	93 83       	std	Z+3, r25	; 0x03
     a0a:	82 83       	std	Z+2, r24	; 0x02
     a0c:	14 82       	std	Z+4, r1	; 0x04
     a0e:	15 82       	std	Z+5, r1	; 0x05
     a10:	36 96       	adiw	r30, 0x06	; 6
            isObstacle		= other.isObstacle;
        }
};

typedef short ( *getDistFunc )( const Point2D&, const Point2D& );
Cell matrix[ MAX_ROWS ][ MAX_ROWS ];
     a12:	e2 17       	cp	r30, r18
     a14:	f3 07       	cpc	r31, r19
     a16:	b1 f7       	brne	.-20     	; 0xa04 <_GLOBAL__sub_I_doPrint+0x10>
     a18:	27 e0       	ldi	r18, 0x07	; 7
     a1a:	43 31       	cpi	r20, 0x13	; 19
     a1c:	52 07       	cpc	r21, r18
     a1e:	71 f7       	brne	.-36     	; 0x9fc <_GLOBAL__sub_I_doPrint+0x8>

    set_motors( 0, 0 );

    // Stop code execution
    while ( true ) {}
}
     a20:	08 95       	ret

00000a22 <atan>:
     a22:	df 93       	push	r29
     a24:	dd 27       	eor	r29, r29
     a26:	b9 2f       	mov	r27, r25
     a28:	bf 77       	andi	r27, 0x7F	; 127
     a2a:	40 e8       	ldi	r20, 0x80	; 128
     a2c:	5f e3       	ldi	r21, 0x3F	; 63
     a2e:	16 16       	cp	r1, r22
     a30:	17 06       	cpc	r1, r23
     a32:	48 07       	cpc	r20, r24
     a34:	5b 07       	cpc	r21, r27
     a36:	18 f4       	brcc	.+6      	; 0xa3e <atan+0x1c>
     a38:	d9 2f       	mov	r29, r25
     a3a:	0e 94 9d 06 	call	0xd3a	; 0xd3a <inverse>
     a3e:	9f 93       	push	r25
     a40:	8f 93       	push	r24
     a42:	7f 93       	push	r23
     a44:	6f 93       	push	r22
     a46:	0e 94 36 07 	call	0xe6c	; 0xe6c <square>
     a4a:	e8 e7       	ldi	r30, 0x78	; 120
     a4c:	f0 e0       	ldi	r31, 0x00	; 0
     a4e:	0e 94 2e 06 	call	0xc5c	; 0xc5c <__fp_powser>
     a52:	0e 94 63 06 	call	0xcc6	; 0xcc6 <__fp_round>
     a56:	2f 91       	pop	r18
     a58:	3f 91       	pop	r19
     a5a:	4f 91       	pop	r20
     a5c:	5f 91       	pop	r21
     a5e:	0e 94 b8 06 	call	0xd70	; 0xd70 <__mulsf3x>
     a62:	dd 23       	and	r29, r29
     a64:	51 f0       	breq	.+20     	; 0xa7a <atan+0x58>
     a66:	90 58       	subi	r25, 0x80	; 128
     a68:	a2 ea       	ldi	r26, 0xA2	; 162
     a6a:	2a ed       	ldi	r18, 0xDA	; 218
     a6c:	3f e0       	ldi	r19, 0x0F	; 15
     a6e:	49 ec       	ldi	r20, 0xC9	; 201
     a70:	5f e3       	ldi	r21, 0x3F	; 63
     a72:	d0 78       	andi	r29, 0x80	; 128
     a74:	5d 27       	eor	r21, r29
     a76:	0e 94 4b 07 	call	0xe96	; 0xe96 <__addsf3x>
     a7a:	df 91       	pop	r29
     a7c:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_round>

00000a80 <__divsf3>:
     a80:	0e 94 54 05 	call	0xaa8	; 0xaa8 <__divsf3x>
     a84:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_round>
     a88:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__fp_pscB>
     a8c:	58 f0       	brcs	.+22     	; 0xaa4 <__divsf3+0x24>
     a8e:	0e 94 55 06 	call	0xcaa	; 0xcaa <__fp_pscA>
     a92:	40 f0       	brcs	.+16     	; 0xaa4 <__divsf3+0x24>
     a94:	29 f4       	brne	.+10     	; 0xaa0 <__divsf3+0x20>
     a96:	5f 3f       	cpi	r21, 0xFF	; 255
     a98:	29 f0       	breq	.+10     	; 0xaa4 <__divsf3+0x24>
     a9a:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__fp_inf>
     a9e:	51 11       	cpse	r21, r1
     aa0:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_szero>
     aa4:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__fp_nan>

00000aa8 <__divsf3x>:
     aa8:	0e 94 74 06 	call	0xce8	; 0xce8 <__fp_split3>
     aac:	68 f3       	brcs	.-38     	; 0xa88 <__divsf3+0x8>

00000aae <__divsf3_pse>:
     aae:	99 23       	and	r25, r25
     ab0:	b1 f3       	breq	.-20     	; 0xa9e <__divsf3+0x1e>
     ab2:	55 23       	and	r21, r21
     ab4:	91 f3       	breq	.-28     	; 0xa9a <__divsf3+0x1a>
     ab6:	95 1b       	sub	r25, r21
     ab8:	55 0b       	sbc	r21, r21
     aba:	bb 27       	eor	r27, r27
     abc:	aa 27       	eor	r26, r26
     abe:	62 17       	cp	r22, r18
     ac0:	73 07       	cpc	r23, r19
     ac2:	84 07       	cpc	r24, r20
     ac4:	38 f0       	brcs	.+14     	; 0xad4 <__divsf3_pse+0x26>
     ac6:	9f 5f       	subi	r25, 0xFF	; 255
     ac8:	5f 4f       	sbci	r21, 0xFF	; 255
     aca:	22 0f       	add	r18, r18
     acc:	33 1f       	adc	r19, r19
     ace:	44 1f       	adc	r20, r20
     ad0:	aa 1f       	adc	r26, r26
     ad2:	a9 f3       	breq	.-22     	; 0xabe <__divsf3_pse+0x10>
     ad4:	35 d0       	rcall	.+106    	; 0xb40 <__divsf3_pse+0x92>
     ad6:	0e 2e       	mov	r0, r30
     ad8:	3a f0       	brmi	.+14     	; 0xae8 <__divsf3_pse+0x3a>
     ada:	e0 e8       	ldi	r30, 0x80	; 128
     adc:	32 d0       	rcall	.+100    	; 0xb42 <__divsf3_pse+0x94>
     ade:	91 50       	subi	r25, 0x01	; 1
     ae0:	50 40       	sbci	r21, 0x00	; 0
     ae2:	e6 95       	lsr	r30
     ae4:	00 1c       	adc	r0, r0
     ae6:	ca f7       	brpl	.-14     	; 0xada <__divsf3_pse+0x2c>
     ae8:	2b d0       	rcall	.+86     	; 0xb40 <__divsf3_pse+0x92>
     aea:	fe 2f       	mov	r31, r30
     aec:	29 d0       	rcall	.+82     	; 0xb40 <__divsf3_pse+0x92>
     aee:	66 0f       	add	r22, r22
     af0:	77 1f       	adc	r23, r23
     af2:	88 1f       	adc	r24, r24
     af4:	bb 1f       	adc	r27, r27
     af6:	26 17       	cp	r18, r22
     af8:	37 07       	cpc	r19, r23
     afa:	48 07       	cpc	r20, r24
     afc:	ab 07       	cpc	r26, r27
     afe:	b0 e8       	ldi	r27, 0x80	; 128
     b00:	09 f0       	breq	.+2      	; 0xb04 <__divsf3_pse+0x56>
     b02:	bb 0b       	sbc	r27, r27
     b04:	80 2d       	mov	r24, r0
     b06:	bf 01       	movw	r22, r30
     b08:	ff 27       	eor	r31, r31
     b0a:	93 58       	subi	r25, 0x83	; 131
     b0c:	5f 4f       	sbci	r21, 0xFF	; 255
     b0e:	3a f0       	brmi	.+14     	; 0xb1e <__divsf3_pse+0x70>
     b10:	9e 3f       	cpi	r25, 0xFE	; 254
     b12:	51 05       	cpc	r21, r1
     b14:	78 f0       	brcs	.+30     	; 0xb34 <__divsf3_pse+0x86>
     b16:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__fp_inf>
     b1a:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_szero>
     b1e:	5f 3f       	cpi	r21, 0xFF	; 255
     b20:	e4 f3       	brlt	.-8      	; 0xb1a <__divsf3_pse+0x6c>
     b22:	98 3e       	cpi	r25, 0xE8	; 232
     b24:	d4 f3       	brlt	.-12     	; 0xb1a <__divsf3_pse+0x6c>
     b26:	86 95       	lsr	r24
     b28:	77 95       	ror	r23
     b2a:	67 95       	ror	r22
     b2c:	b7 95       	ror	r27
     b2e:	f7 95       	ror	r31
     b30:	9f 5f       	subi	r25, 0xFF	; 255
     b32:	c9 f7       	brne	.-14     	; 0xb26 <__divsf3_pse+0x78>
     b34:	88 0f       	add	r24, r24
     b36:	91 1d       	adc	r25, r1
     b38:	96 95       	lsr	r25
     b3a:	87 95       	ror	r24
     b3c:	97 f9       	bld	r25, 7
     b3e:	08 95       	ret
     b40:	e1 e0       	ldi	r30, 0x01	; 1
     b42:	66 0f       	add	r22, r22
     b44:	77 1f       	adc	r23, r23
     b46:	88 1f       	adc	r24, r24
     b48:	bb 1f       	adc	r27, r27
     b4a:	62 17       	cp	r22, r18
     b4c:	73 07       	cpc	r23, r19
     b4e:	84 07       	cpc	r24, r20
     b50:	ba 07       	cpc	r27, r26
     b52:	20 f0       	brcs	.+8      	; 0xb5c <__divsf3_pse+0xae>
     b54:	62 1b       	sub	r22, r18
     b56:	73 0b       	sbc	r23, r19
     b58:	84 0b       	sbc	r24, r20
     b5a:	ba 0b       	sbc	r27, r26
     b5c:	ee 1f       	adc	r30, r30
     b5e:	88 f7       	brcc	.-30     	; 0xb42 <__divsf3_pse+0x94>
     b60:	e0 95       	com	r30
     b62:	08 95       	ret

00000b64 <__fixsfsi>:
     b64:	0e 94 b9 05 	call	0xb72	; 0xb72 <__fixunssfsi>
     b68:	68 94       	set
     b6a:	b1 11       	cpse	r27, r1
     b6c:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_szero>
     b70:	08 95       	ret

00000b72 <__fixunssfsi>:
     b72:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__fp_splitA>
     b76:	88 f0       	brcs	.+34     	; 0xb9a <__fixunssfsi+0x28>
     b78:	9f 57       	subi	r25, 0x7F	; 127
     b7a:	98 f0       	brcs	.+38     	; 0xba2 <__fixunssfsi+0x30>
     b7c:	b9 2f       	mov	r27, r25
     b7e:	99 27       	eor	r25, r25
     b80:	b7 51       	subi	r27, 0x17	; 23
     b82:	b0 f0       	brcs	.+44     	; 0xbb0 <__fixunssfsi+0x3e>
     b84:	e1 f0       	breq	.+56     	; 0xbbe <__fixunssfsi+0x4c>
     b86:	66 0f       	add	r22, r22
     b88:	77 1f       	adc	r23, r23
     b8a:	88 1f       	adc	r24, r24
     b8c:	99 1f       	adc	r25, r25
     b8e:	1a f0       	brmi	.+6      	; 0xb96 <__fixunssfsi+0x24>
     b90:	ba 95       	dec	r27
     b92:	c9 f7       	brne	.-14     	; 0xb86 <__fixunssfsi+0x14>
     b94:	14 c0       	rjmp	.+40     	; 0xbbe <__fixunssfsi+0x4c>
     b96:	b1 30       	cpi	r27, 0x01	; 1
     b98:	91 f0       	breq	.+36     	; 0xbbe <__fixunssfsi+0x4c>
     b9a:	0e 94 96 06 	call	0xd2c	; 0xd2c <__fp_zero>
     b9e:	b1 e0       	ldi	r27, 0x01	; 1
     ba0:	08 95       	ret
     ba2:	0c 94 96 06 	jmp	0xd2c	; 0xd2c <__fp_zero>
     ba6:	67 2f       	mov	r22, r23
     ba8:	78 2f       	mov	r23, r24
     baa:	88 27       	eor	r24, r24
     bac:	b8 5f       	subi	r27, 0xF8	; 248
     bae:	39 f0       	breq	.+14     	; 0xbbe <__fixunssfsi+0x4c>
     bb0:	b9 3f       	cpi	r27, 0xF9	; 249
     bb2:	cc f3       	brlt	.-14     	; 0xba6 <__fixunssfsi+0x34>
     bb4:	86 95       	lsr	r24
     bb6:	77 95       	ror	r23
     bb8:	67 95       	ror	r22
     bba:	b3 95       	inc	r27
     bbc:	d9 f7       	brne	.-10     	; 0xbb4 <__fixunssfsi+0x42>
     bbe:	3e f4       	brtc	.+14     	; 0xbce <__fixunssfsi+0x5c>
     bc0:	90 95       	com	r25
     bc2:	80 95       	com	r24
     bc4:	70 95       	com	r23
     bc6:	61 95       	neg	r22
     bc8:	7f 4f       	sbci	r23, 0xFF	; 255
     bca:	8f 4f       	sbci	r24, 0xFF	; 255
     bcc:	9f 4f       	sbci	r25, 0xFF	; 255
     bce:	08 95       	ret

00000bd0 <__floatunsisf>:
     bd0:	e8 94       	clt
     bd2:	09 c0       	rjmp	.+18     	; 0xbe6 <__floatsisf+0x12>

00000bd4 <__floatsisf>:
     bd4:	97 fb       	bst	r25, 7
     bd6:	3e f4       	brtc	.+14     	; 0xbe6 <__floatsisf+0x12>
     bd8:	90 95       	com	r25
     bda:	80 95       	com	r24
     bdc:	70 95       	com	r23
     bde:	61 95       	neg	r22
     be0:	7f 4f       	sbci	r23, 0xFF	; 255
     be2:	8f 4f       	sbci	r24, 0xFF	; 255
     be4:	9f 4f       	sbci	r25, 0xFF	; 255
     be6:	99 23       	and	r25, r25
     be8:	a9 f0       	breq	.+42     	; 0xc14 <__floatsisf+0x40>
     bea:	f9 2f       	mov	r31, r25
     bec:	96 e9       	ldi	r25, 0x96	; 150
     bee:	bb 27       	eor	r27, r27
     bf0:	93 95       	inc	r25
     bf2:	f6 95       	lsr	r31
     bf4:	87 95       	ror	r24
     bf6:	77 95       	ror	r23
     bf8:	67 95       	ror	r22
     bfa:	b7 95       	ror	r27
     bfc:	f1 11       	cpse	r31, r1
     bfe:	f8 cf       	rjmp	.-16     	; 0xbf0 <__floatsisf+0x1c>
     c00:	fa f4       	brpl	.+62     	; 0xc40 <__floatsisf+0x6c>
     c02:	bb 0f       	add	r27, r27
     c04:	11 f4       	brne	.+4      	; 0xc0a <__floatsisf+0x36>
     c06:	60 ff       	sbrs	r22, 0
     c08:	1b c0       	rjmp	.+54     	; 0xc40 <__floatsisf+0x6c>
     c0a:	6f 5f       	subi	r22, 0xFF	; 255
     c0c:	7f 4f       	sbci	r23, 0xFF	; 255
     c0e:	8f 4f       	sbci	r24, 0xFF	; 255
     c10:	9f 4f       	sbci	r25, 0xFF	; 255
     c12:	16 c0       	rjmp	.+44     	; 0xc40 <__floatsisf+0x6c>
     c14:	88 23       	and	r24, r24
     c16:	11 f0       	breq	.+4      	; 0xc1c <__floatsisf+0x48>
     c18:	96 e9       	ldi	r25, 0x96	; 150
     c1a:	11 c0       	rjmp	.+34     	; 0xc3e <__floatsisf+0x6a>
     c1c:	77 23       	and	r23, r23
     c1e:	21 f0       	breq	.+8      	; 0xc28 <__floatsisf+0x54>
     c20:	9e e8       	ldi	r25, 0x8E	; 142
     c22:	87 2f       	mov	r24, r23
     c24:	76 2f       	mov	r23, r22
     c26:	05 c0       	rjmp	.+10     	; 0xc32 <__floatsisf+0x5e>
     c28:	66 23       	and	r22, r22
     c2a:	71 f0       	breq	.+28     	; 0xc48 <__floatsisf+0x74>
     c2c:	96 e8       	ldi	r25, 0x86	; 134
     c2e:	86 2f       	mov	r24, r22
     c30:	70 e0       	ldi	r23, 0x00	; 0
     c32:	60 e0       	ldi	r22, 0x00	; 0
     c34:	2a f0       	brmi	.+10     	; 0xc40 <__floatsisf+0x6c>
     c36:	9a 95       	dec	r25
     c38:	66 0f       	add	r22, r22
     c3a:	77 1f       	adc	r23, r23
     c3c:	88 1f       	adc	r24, r24
     c3e:	da f7       	brpl	.-10     	; 0xc36 <__floatsisf+0x62>
     c40:	88 0f       	add	r24, r24
     c42:	96 95       	lsr	r25
     c44:	87 95       	ror	r24
     c46:	97 f9       	bld	r25, 7
     c48:	08 95       	ret

00000c4a <__fp_inf>:
     c4a:	97 f9       	bld	r25, 7
     c4c:	9f 67       	ori	r25, 0x7F	; 127
     c4e:	80 e8       	ldi	r24, 0x80	; 128
     c50:	70 e0       	ldi	r23, 0x00	; 0
     c52:	60 e0       	ldi	r22, 0x00	; 0
     c54:	08 95       	ret

00000c56 <__fp_nan>:
     c56:	9f ef       	ldi	r25, 0xFF	; 255
     c58:	80 ec       	ldi	r24, 0xC0	; 192
     c5a:	08 95       	ret

00000c5c <__fp_powser>:
     c5c:	df 93       	push	r29
     c5e:	cf 93       	push	r28
     c60:	1f 93       	push	r17
     c62:	0f 93       	push	r16
     c64:	ff 92       	push	r15
     c66:	ef 92       	push	r14
     c68:	df 92       	push	r13
     c6a:	7b 01       	movw	r14, r22
     c6c:	8c 01       	movw	r16, r24
     c6e:	68 94       	set
     c70:	06 c0       	rjmp	.+12     	; 0xc7e <__fp_powser+0x22>
     c72:	da 2e       	mov	r13, r26
     c74:	ef 01       	movw	r28, r30
     c76:	0e 94 b8 06 	call	0xd70	; 0xd70 <__mulsf3x>
     c7a:	fe 01       	movw	r30, r28
     c7c:	e8 94       	clt
     c7e:	a5 91       	lpm	r26, Z+
     c80:	25 91       	lpm	r18, Z+
     c82:	35 91       	lpm	r19, Z+
     c84:	45 91       	lpm	r20, Z+
     c86:	55 91       	lpm	r21, Z+
     c88:	a6 f3       	brts	.-24     	; 0xc72 <__fp_powser+0x16>
     c8a:	ef 01       	movw	r28, r30
     c8c:	0e 94 4b 07 	call	0xe96	; 0xe96 <__addsf3x>
     c90:	fe 01       	movw	r30, r28
     c92:	97 01       	movw	r18, r14
     c94:	a8 01       	movw	r20, r16
     c96:	da 94       	dec	r13
     c98:	69 f7       	brne	.-38     	; 0xc74 <__fp_powser+0x18>
     c9a:	df 90       	pop	r13
     c9c:	ef 90       	pop	r14
     c9e:	ff 90       	pop	r15
     ca0:	0f 91       	pop	r16
     ca2:	1f 91       	pop	r17
     ca4:	cf 91       	pop	r28
     ca6:	df 91       	pop	r29
     ca8:	08 95       	ret

00000caa <__fp_pscA>:
     caa:	00 24       	eor	r0, r0
     cac:	0a 94       	dec	r0
     cae:	16 16       	cp	r1, r22
     cb0:	17 06       	cpc	r1, r23
     cb2:	18 06       	cpc	r1, r24
     cb4:	09 06       	cpc	r0, r25
     cb6:	08 95       	ret

00000cb8 <__fp_pscB>:
     cb8:	00 24       	eor	r0, r0
     cba:	0a 94       	dec	r0
     cbc:	12 16       	cp	r1, r18
     cbe:	13 06       	cpc	r1, r19
     cc0:	14 06       	cpc	r1, r20
     cc2:	05 06       	cpc	r0, r21
     cc4:	08 95       	ret

00000cc6 <__fp_round>:
     cc6:	09 2e       	mov	r0, r25
     cc8:	03 94       	inc	r0
     cca:	00 0c       	add	r0, r0
     ccc:	11 f4       	brne	.+4      	; 0xcd2 <__fp_round+0xc>
     cce:	88 23       	and	r24, r24
     cd0:	52 f0       	brmi	.+20     	; 0xce6 <__fp_round+0x20>
     cd2:	bb 0f       	add	r27, r27
     cd4:	40 f4       	brcc	.+16     	; 0xce6 <__fp_round+0x20>
     cd6:	bf 2b       	or	r27, r31
     cd8:	11 f4       	brne	.+4      	; 0xcde <__fp_round+0x18>
     cda:	60 ff       	sbrs	r22, 0
     cdc:	04 c0       	rjmp	.+8      	; 0xce6 <__fp_round+0x20>
     cde:	6f 5f       	subi	r22, 0xFF	; 255
     ce0:	7f 4f       	sbci	r23, 0xFF	; 255
     ce2:	8f 4f       	sbci	r24, 0xFF	; 255
     ce4:	9f 4f       	sbci	r25, 0xFF	; 255
     ce6:	08 95       	ret

00000ce8 <__fp_split3>:
     ce8:	57 fd       	sbrc	r21, 7
     cea:	90 58       	subi	r25, 0x80	; 128
     cec:	44 0f       	add	r20, r20
     cee:	55 1f       	adc	r21, r21
     cf0:	59 f0       	breq	.+22     	; 0xd08 <__fp_splitA+0x10>
     cf2:	5f 3f       	cpi	r21, 0xFF	; 255
     cf4:	71 f0       	breq	.+28     	; 0xd12 <__fp_splitA+0x1a>
     cf6:	47 95       	ror	r20

00000cf8 <__fp_splitA>:
     cf8:	88 0f       	add	r24, r24
     cfa:	97 fb       	bst	r25, 7
     cfc:	99 1f       	adc	r25, r25
     cfe:	61 f0       	breq	.+24     	; 0xd18 <__fp_splitA+0x20>
     d00:	9f 3f       	cpi	r25, 0xFF	; 255
     d02:	79 f0       	breq	.+30     	; 0xd22 <__fp_splitA+0x2a>
     d04:	87 95       	ror	r24
     d06:	08 95       	ret
     d08:	12 16       	cp	r1, r18
     d0a:	13 06       	cpc	r1, r19
     d0c:	14 06       	cpc	r1, r20
     d0e:	55 1f       	adc	r21, r21
     d10:	f2 cf       	rjmp	.-28     	; 0xcf6 <__fp_split3+0xe>
     d12:	46 95       	lsr	r20
     d14:	f1 df       	rcall	.-30     	; 0xcf8 <__fp_splitA>
     d16:	08 c0       	rjmp	.+16     	; 0xd28 <__fp_splitA+0x30>
     d18:	16 16       	cp	r1, r22
     d1a:	17 06       	cpc	r1, r23
     d1c:	18 06       	cpc	r1, r24
     d1e:	99 1f       	adc	r25, r25
     d20:	f1 cf       	rjmp	.-30     	; 0xd04 <__fp_splitA+0xc>
     d22:	86 95       	lsr	r24
     d24:	71 05       	cpc	r23, r1
     d26:	61 05       	cpc	r22, r1
     d28:	08 94       	sec
     d2a:	08 95       	ret

00000d2c <__fp_zero>:
     d2c:	e8 94       	clt

00000d2e <__fp_szero>:
     d2e:	bb 27       	eor	r27, r27
     d30:	66 27       	eor	r22, r22
     d32:	77 27       	eor	r23, r23
     d34:	cb 01       	movw	r24, r22
     d36:	97 f9       	bld	r25, 7
     d38:	08 95       	ret

00000d3a <inverse>:
     d3a:	9b 01       	movw	r18, r22
     d3c:	ac 01       	movw	r20, r24
     d3e:	60 e0       	ldi	r22, 0x00	; 0
     d40:	70 e0       	ldi	r23, 0x00	; 0
     d42:	80 e8       	ldi	r24, 0x80	; 128
     d44:	9f e3       	ldi	r25, 0x3F	; 63
     d46:	0c 94 40 05 	jmp	0xa80	; 0xa80 <__divsf3>

00000d4a <__mulsf3>:
     d4a:	0e 94 b8 06 	call	0xd70	; 0xd70 <__mulsf3x>
     d4e:	0c 94 63 06 	jmp	0xcc6	; 0xcc6 <__fp_round>
     d52:	0e 94 55 06 	call	0xcaa	; 0xcaa <__fp_pscA>
     d56:	38 f0       	brcs	.+14     	; 0xd66 <__mulsf3+0x1c>
     d58:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__fp_pscB>
     d5c:	20 f0       	brcs	.+8      	; 0xd66 <__mulsf3+0x1c>
     d5e:	95 23       	and	r25, r21
     d60:	11 f0       	breq	.+4      	; 0xd66 <__mulsf3+0x1c>
     d62:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__fp_inf>
     d66:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__fp_nan>
     d6a:	11 24       	eor	r1, r1
     d6c:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_szero>

00000d70 <__mulsf3x>:
     d70:	0e 94 74 06 	call	0xce8	; 0xce8 <__fp_split3>
     d74:	70 f3       	brcs	.-36     	; 0xd52 <__mulsf3+0x8>

00000d76 <__mulsf3_pse>:
     d76:	95 9f       	mul	r25, r21
     d78:	c1 f3       	breq	.-16     	; 0xd6a <__mulsf3+0x20>
     d7a:	95 0f       	add	r25, r21
     d7c:	50 e0       	ldi	r21, 0x00	; 0
     d7e:	55 1f       	adc	r21, r21
     d80:	62 9f       	mul	r22, r18
     d82:	f0 01       	movw	r30, r0
     d84:	72 9f       	mul	r23, r18
     d86:	bb 27       	eor	r27, r27
     d88:	f0 0d       	add	r31, r0
     d8a:	b1 1d       	adc	r27, r1
     d8c:	63 9f       	mul	r22, r19
     d8e:	aa 27       	eor	r26, r26
     d90:	f0 0d       	add	r31, r0
     d92:	b1 1d       	adc	r27, r1
     d94:	aa 1f       	adc	r26, r26
     d96:	64 9f       	mul	r22, r20
     d98:	66 27       	eor	r22, r22
     d9a:	b0 0d       	add	r27, r0
     d9c:	a1 1d       	adc	r26, r1
     d9e:	66 1f       	adc	r22, r22
     da0:	82 9f       	mul	r24, r18
     da2:	22 27       	eor	r18, r18
     da4:	b0 0d       	add	r27, r0
     da6:	a1 1d       	adc	r26, r1
     da8:	62 1f       	adc	r22, r18
     daa:	73 9f       	mul	r23, r19
     dac:	b0 0d       	add	r27, r0
     dae:	a1 1d       	adc	r26, r1
     db0:	62 1f       	adc	r22, r18
     db2:	83 9f       	mul	r24, r19
     db4:	a0 0d       	add	r26, r0
     db6:	61 1d       	adc	r22, r1
     db8:	22 1f       	adc	r18, r18
     dba:	74 9f       	mul	r23, r20
     dbc:	33 27       	eor	r19, r19
     dbe:	a0 0d       	add	r26, r0
     dc0:	61 1d       	adc	r22, r1
     dc2:	23 1f       	adc	r18, r19
     dc4:	84 9f       	mul	r24, r20
     dc6:	60 0d       	add	r22, r0
     dc8:	21 1d       	adc	r18, r1
     dca:	82 2f       	mov	r24, r18
     dcc:	76 2f       	mov	r23, r22
     dce:	6a 2f       	mov	r22, r26
     dd0:	11 24       	eor	r1, r1
     dd2:	9f 57       	subi	r25, 0x7F	; 127
     dd4:	50 40       	sbci	r21, 0x00	; 0
     dd6:	9a f0       	brmi	.+38     	; 0xdfe <__mulsf3_pse+0x88>
     dd8:	f1 f0       	breq	.+60     	; 0xe16 <__mulsf3_pse+0xa0>
     dda:	88 23       	and	r24, r24
     ddc:	4a f0       	brmi	.+18     	; 0xdf0 <__mulsf3_pse+0x7a>
     dde:	ee 0f       	add	r30, r30
     de0:	ff 1f       	adc	r31, r31
     de2:	bb 1f       	adc	r27, r27
     de4:	66 1f       	adc	r22, r22
     de6:	77 1f       	adc	r23, r23
     de8:	88 1f       	adc	r24, r24
     dea:	91 50       	subi	r25, 0x01	; 1
     dec:	50 40       	sbci	r21, 0x00	; 0
     dee:	a9 f7       	brne	.-22     	; 0xdda <__mulsf3_pse+0x64>
     df0:	9e 3f       	cpi	r25, 0xFE	; 254
     df2:	51 05       	cpc	r21, r1
     df4:	80 f0       	brcs	.+32     	; 0xe16 <__mulsf3_pse+0xa0>
     df6:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__fp_inf>
     dfa:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_szero>
     dfe:	5f 3f       	cpi	r21, 0xFF	; 255
     e00:	e4 f3       	brlt	.-8      	; 0xdfa <__mulsf3_pse+0x84>
     e02:	98 3e       	cpi	r25, 0xE8	; 232
     e04:	d4 f3       	brlt	.-12     	; 0xdfa <__mulsf3_pse+0x84>
     e06:	86 95       	lsr	r24
     e08:	77 95       	ror	r23
     e0a:	67 95       	ror	r22
     e0c:	b7 95       	ror	r27
     e0e:	f7 95       	ror	r31
     e10:	e7 95       	ror	r30
     e12:	9f 5f       	subi	r25, 0xFF	; 255
     e14:	c1 f7       	brne	.-16     	; 0xe06 <__mulsf3_pse+0x90>
     e16:	fe 2b       	or	r31, r30
     e18:	88 0f       	add	r24, r24
     e1a:	91 1d       	adc	r25, r1
     e1c:	96 95       	lsr	r25
     e1e:	87 95       	ror	r24
     e20:	97 f9       	bld	r25, 7
     e22:	08 95       	ret

00000e24 <round>:
     e24:	0e 94 7c 06 	call	0xcf8	; 0xcf8 <__fp_splitA>
     e28:	e8 f0       	brcs	.+58     	; 0xe64 <round+0x40>
     e2a:	9e 37       	cpi	r25, 0x7E	; 126
     e2c:	e8 f0       	brcs	.+58     	; 0xe68 <round+0x44>
     e2e:	96 39       	cpi	r25, 0x96	; 150
     e30:	b8 f4       	brcc	.+46     	; 0xe60 <round+0x3c>
     e32:	9e 38       	cpi	r25, 0x8E	; 142
     e34:	48 f4       	brcc	.+18     	; 0xe48 <round+0x24>
     e36:	67 2f       	mov	r22, r23
     e38:	78 2f       	mov	r23, r24
     e3a:	88 27       	eor	r24, r24
     e3c:	98 5f       	subi	r25, 0xF8	; 248
     e3e:	f9 cf       	rjmp	.-14     	; 0xe32 <round+0xe>
     e40:	86 95       	lsr	r24
     e42:	77 95       	ror	r23
     e44:	67 95       	ror	r22
     e46:	93 95       	inc	r25
     e48:	95 39       	cpi	r25, 0x95	; 149
     e4a:	d0 f3       	brcs	.-12     	; 0xe40 <round+0x1c>
     e4c:	b6 2f       	mov	r27, r22
     e4e:	b1 70       	andi	r27, 0x01	; 1
     e50:	6b 0f       	add	r22, r27
     e52:	71 1d       	adc	r23, r1
     e54:	81 1d       	adc	r24, r1
     e56:	20 f4       	brcc	.+8      	; 0xe60 <round+0x3c>
     e58:	87 95       	ror	r24
     e5a:	77 95       	ror	r23
     e5c:	67 95       	ror	r22
     e5e:	93 95       	inc	r25
     e60:	0c 94 a0 07 	jmp	0xf40	; 0xf40 <__fp_mintl>
     e64:	0c 94 bb 07 	jmp	0xf76	; 0xf76 <__fp_mpack>
     e68:	0c 94 97 06 	jmp	0xd2e	; 0xd2e <__fp_szero>

00000e6c <square>:
     e6c:	9b 01       	movw	r18, r22
     e6e:	ac 01       	movw	r20, r24
     e70:	0c 94 a5 06 	jmp	0xd4a	; 0xd4a <__mulsf3>
     e74:	0e 94 55 06 	call	0xcaa	; 0xcaa <__fp_pscA>
     e78:	38 f0       	brcs	.+14     	; 0xe88 <square+0x1c>
     e7a:	0e 94 5c 06 	call	0xcb8	; 0xcb8 <__fp_pscB>
     e7e:	20 f0       	brcs	.+8      	; 0xe88 <square+0x1c>
     e80:	39 f4       	brne	.+14     	; 0xe90 <square+0x24>
     e82:	9f 3f       	cpi	r25, 0xFF	; 255
     e84:	19 f4       	brne	.+6      	; 0xe8c <square+0x20>
     e86:	26 f4       	brtc	.+8      	; 0xe90 <square+0x24>
     e88:	0c 94 2b 06 	jmp	0xc56	; 0xc56 <__fp_nan>
     e8c:	0e f4       	brtc	.+2      	; 0xe90 <square+0x24>
     e8e:	e0 95       	com	r30
     e90:	e7 fb       	bst	r30, 7
     e92:	0c 94 25 06 	jmp	0xc4a	; 0xc4a <__fp_inf>

00000e96 <__addsf3x>:
     e96:	e9 2f       	mov	r30, r25
     e98:	0e 94 74 06 	call	0xce8	; 0xce8 <__fp_split3>
     e9c:	58 f3       	brcs	.-42     	; 0xe74 <square+0x8>
     e9e:	ba 17       	cp	r27, r26
     ea0:	62 07       	cpc	r22, r18
     ea2:	73 07       	cpc	r23, r19
     ea4:	84 07       	cpc	r24, r20
     ea6:	95 07       	cpc	r25, r21
     ea8:	20 f0       	brcs	.+8      	; 0xeb2 <__addsf3x+0x1c>
     eaa:	79 f4       	brne	.+30     	; 0xeca <__addsf3x+0x34>
     eac:	a6 f5       	brtc	.+104    	; 0xf16 <__addsf3x+0x80>
     eae:	0c 94 96 06 	jmp	0xd2c	; 0xd2c <__fp_zero>
     eb2:	0e f4       	brtc	.+2      	; 0xeb6 <__addsf3x+0x20>
     eb4:	e0 95       	com	r30
     eb6:	0b 2e       	mov	r0, r27
     eb8:	ba 2f       	mov	r27, r26
     eba:	a0 2d       	mov	r26, r0
     ebc:	0b 01       	movw	r0, r22
     ebe:	b9 01       	movw	r22, r18
     ec0:	90 01       	movw	r18, r0
     ec2:	0c 01       	movw	r0, r24
     ec4:	ca 01       	movw	r24, r20
     ec6:	a0 01       	movw	r20, r0
     ec8:	11 24       	eor	r1, r1
     eca:	ff 27       	eor	r31, r31
     ecc:	59 1b       	sub	r21, r25
     ece:	99 f0       	breq	.+38     	; 0xef6 <__addsf3x+0x60>
     ed0:	59 3f       	cpi	r21, 0xF9	; 249
     ed2:	50 f4       	brcc	.+20     	; 0xee8 <__addsf3x+0x52>
     ed4:	50 3e       	cpi	r21, 0xE0	; 224
     ed6:	68 f1       	brcs	.+90     	; 0xf32 <__addsf3x+0x9c>
     ed8:	1a 16       	cp	r1, r26
     eda:	f0 40       	sbci	r31, 0x00	; 0
     edc:	a2 2f       	mov	r26, r18
     ede:	23 2f       	mov	r18, r19
     ee0:	34 2f       	mov	r19, r20
     ee2:	44 27       	eor	r20, r20
     ee4:	58 5f       	subi	r21, 0xF8	; 248
     ee6:	f3 cf       	rjmp	.-26     	; 0xece <__addsf3x+0x38>
     ee8:	46 95       	lsr	r20
     eea:	37 95       	ror	r19
     eec:	27 95       	ror	r18
     eee:	a7 95       	ror	r26
     ef0:	f0 40       	sbci	r31, 0x00	; 0
     ef2:	53 95       	inc	r21
     ef4:	c9 f7       	brne	.-14     	; 0xee8 <__addsf3x+0x52>
     ef6:	7e f4       	brtc	.+30     	; 0xf16 <__addsf3x+0x80>
     ef8:	1f 16       	cp	r1, r31
     efa:	ba 0b       	sbc	r27, r26
     efc:	62 0b       	sbc	r22, r18
     efe:	73 0b       	sbc	r23, r19
     f00:	84 0b       	sbc	r24, r20
     f02:	ba f0       	brmi	.+46     	; 0xf32 <__addsf3x+0x9c>
     f04:	91 50       	subi	r25, 0x01	; 1
     f06:	a1 f0       	breq	.+40     	; 0xf30 <__addsf3x+0x9a>
     f08:	ff 0f       	add	r31, r31
     f0a:	bb 1f       	adc	r27, r27
     f0c:	66 1f       	adc	r22, r22
     f0e:	77 1f       	adc	r23, r23
     f10:	88 1f       	adc	r24, r24
     f12:	c2 f7       	brpl	.-16     	; 0xf04 <__addsf3x+0x6e>
     f14:	0e c0       	rjmp	.+28     	; 0xf32 <__addsf3x+0x9c>
     f16:	ba 0f       	add	r27, r26
     f18:	62 1f       	adc	r22, r18
     f1a:	73 1f       	adc	r23, r19
     f1c:	84 1f       	adc	r24, r20
     f1e:	48 f4       	brcc	.+18     	; 0xf32 <__addsf3x+0x9c>
     f20:	87 95       	ror	r24
     f22:	77 95       	ror	r23
     f24:	67 95       	ror	r22
     f26:	b7 95       	ror	r27
     f28:	f7 95       	ror	r31
     f2a:	9e 3f       	cpi	r25, 0xFE	; 254
     f2c:	08 f0       	brcs	.+2      	; 0xf30 <__addsf3x+0x9a>
     f2e:	b0 cf       	rjmp	.-160    	; 0xe90 <square+0x24>
     f30:	93 95       	inc	r25
     f32:	88 0f       	add	r24, r24
     f34:	08 f0       	brcs	.+2      	; 0xf38 <__addsf3x+0xa2>
     f36:	99 27       	eor	r25, r25
     f38:	ee 0f       	add	r30, r30
     f3a:	97 95       	ror	r25
     f3c:	87 95       	ror	r24
     f3e:	08 95       	ret

00000f40 <__fp_mintl>:
     f40:	88 23       	and	r24, r24
     f42:	71 f4       	brne	.+28     	; 0xf60 <__fp_mintl+0x20>
     f44:	77 23       	and	r23, r23
     f46:	21 f0       	breq	.+8      	; 0xf50 <__fp_mintl+0x10>
     f48:	98 50       	subi	r25, 0x08	; 8
     f4a:	87 2b       	or	r24, r23
     f4c:	76 2f       	mov	r23, r22
     f4e:	07 c0       	rjmp	.+14     	; 0xf5e <__fp_mintl+0x1e>
     f50:	66 23       	and	r22, r22
     f52:	11 f4       	brne	.+4      	; 0xf58 <__fp_mintl+0x18>
     f54:	99 27       	eor	r25, r25
     f56:	0d c0       	rjmp	.+26     	; 0xf72 <__fp_mintl+0x32>
     f58:	90 51       	subi	r25, 0x10	; 16
     f5a:	86 2b       	or	r24, r22
     f5c:	70 e0       	ldi	r23, 0x00	; 0
     f5e:	60 e0       	ldi	r22, 0x00	; 0
     f60:	2a f0       	brmi	.+10     	; 0xf6c <__fp_mintl+0x2c>
     f62:	9a 95       	dec	r25
     f64:	66 0f       	add	r22, r22
     f66:	77 1f       	adc	r23, r23
     f68:	88 1f       	adc	r24, r24
     f6a:	da f7       	brpl	.-10     	; 0xf62 <__fp_mintl+0x22>
     f6c:	88 0f       	add	r24, r24
     f6e:	96 95       	lsr	r25
     f70:	87 95       	ror	r24
     f72:	97 f9       	bld	r25, 7
     f74:	08 95       	ret

00000f76 <__fp_mpack>:
     f76:	9f 3f       	cpi	r25, 0xFF	; 255
     f78:	31 f0       	breq	.+12     	; 0xf86 <__fp_mpack_finite+0xc>

00000f7a <__fp_mpack_finite>:
     f7a:	91 50       	subi	r25, 0x01	; 1
     f7c:	20 f4       	brcc	.+8      	; 0xf86 <__fp_mpack_finite+0xc>
     f7e:	87 95       	ror	r24
     f80:	77 95       	ror	r23
     f82:	67 95       	ror	r22
     f84:	b7 95       	ror	r27
     f86:	88 0f       	add	r24, r24
     f88:	91 1d       	adc	r25, r1
     f8a:	96 95       	lsr	r25
     f8c:	87 95       	ror	r24
     f8e:	97 f9       	bld	r25, 7
     f90:	08 95       	ret

00000f92 <_ZN15OrangutanAnalog7setModeEh.part.0>:
     f92:	ec e7       	ldi	r30, 0x7C	; 124
     f94:	f0 e0       	ldi	r31, 0x00	; 0
     f96:	80 81       	ld	r24, Z
     f98:	8f 7d       	andi	r24, 0xDF	; 223
     f9a:	80 83       	st	Z, r24
     f9c:	08 95       	ret

00000f9e <_ZN15OrangutanAnalog7setModeEh>:
     f9e:	81 11       	cpse	r24, r1
     fa0:	03 c0       	rjmp	.+6      	; 0xfa8 <_ZN15OrangutanAnalog7setModeEh+0xa>
     fa2:	0e 94 c9 07 	call	0xf92	; 0xf92 <_ZN15OrangutanAnalog7setModeEh.part.0>
     fa6:	08 95       	ret
     fa8:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     fac:	80 62       	ori	r24, 0x20	; 32
     fae:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     fb2:	08 95       	ret

00000fb4 <_ZN15OrangutanAnalog7getModeEv>:
     fb4:	80 91 7c 00 	lds	r24, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     fb8:	85 fb       	bst	r24, 5
     fba:	88 27       	eor	r24, r24
     fbc:	80 f9       	bld	r24, 0
     fbe:	08 95       	ret

00000fc0 <_ZN15OrangutanAnalog16conversionResultEv>:
     fc0:	0e 94 da 07 	call	0xfb4	; 0xfb4 <_ZN15OrangutanAnalog7getModeEv>
     fc4:	88 23       	and	r24, r24
     fc6:	21 f0       	breq	.+8      	; 0xfd0 <_ZN15OrangutanAnalog16conversionResultEv+0x10>
     fc8:	80 91 79 00 	lds	r24, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	08 95       	ret
     fd0:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
     fd4:	90 91 79 00 	lds	r25, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
     fd8:	08 95       	ret

00000fda <_ZN15OrangutanAnalog15startConversionEhh>:
     fda:	80 32       	cpi	r24, 0x20	; 32
     fdc:	a0 f4       	brcc	.+40     	; 0x1006 <_ZN15OrangutanAnalog15startConversionEhh+0x2c>
     fde:	97 e8       	ldi	r25, 0x87	; 135
     fe0:	90 93 7a 00 	sts	0x007A, r25	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
     fe4:	90 91 7c 00 	lds	r25, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     fe8:	66 23       	and	r22, r22
     fea:	11 f0       	breq	.+4      	; 0xff0 <_ZN15OrangutanAnalog15startConversionEhh+0x16>
     fec:	90 6c       	ori	r25, 0xC0	; 192
     fee:	02 c0       	rjmp	.+4      	; 0xff4 <_ZN15OrangutanAnalog15startConversionEhh+0x1a>
     ff0:	9f 77       	andi	r25, 0x7F	; 127
     ff2:	90 64       	ori	r25, 0x40	; 64
     ff4:	90 7e       	andi	r25, 0xE0	; 224
     ff6:	98 2b       	or	r25, r24
     ff8:	90 93 7c 00 	sts	0x007C, r25	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
     ffc:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1000:	80 64       	ori	r24, 0x40	; 64
    1002:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1006:	08 95       	ret

00001008 <_ZN15OrangutanAnalog11readAverageEhj>:
    1008:	a0 e0       	ldi	r26, 0x00	; 0
    100a:	b0 e0       	ldi	r27, 0x00	; 0
    100c:	ea e0       	ldi	r30, 0x0A	; 10
    100e:	f8 e0       	ldi	r31, 0x08	; 8
    1010:	0c 94 54 12 	jmp	0x24a8	; 0x24a8 <__prologue_saves__+0x14>
    1014:	eb 01       	movw	r28, r22
    1016:	60 e0       	ldi	r22, 0x00	; 0
    1018:	0e 94 ed 07 	call	0xfda	; 0xfda <_ZN15OrangutanAnalog15startConversionEhh>
    101c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1020:	86 fd       	sbrc	r24, 6
    1022:	fc cf       	rjmp	.-8      	; 0x101c <_ZN15OrangutanAnalog11readAverageEhj+0x14>
    1024:	8e 01       	movw	r16, r28
    1026:	c1 2c       	mov	r12, r1
    1028:	d1 2c       	mov	r13, r1
    102a:	76 01       	movw	r14, r12
    102c:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1030:	80 64       	ori	r24, 0x40	; 64
    1032:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    1036:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    103a:	86 fd       	sbrc	r24, 6
    103c:	fc cf       	rjmp	.-8      	; 0x1036 <_ZN15OrangutanAnalog11readAverageEhj+0x2e>
    103e:	0e 94 e0 07 	call	0xfc0	; 0xfc0 <_ZN15OrangutanAnalog16conversionResultEv>
    1042:	c8 0e       	add	r12, r24
    1044:	d9 1e       	adc	r13, r25
    1046:	e1 1c       	adc	r14, r1
    1048:	f1 1c       	adc	r15, r1
    104a:	01 50       	subi	r16, 0x01	; 1
    104c:	11 09       	sbc	r17, r1
    104e:	01 15       	cp	r16, r1
    1050:	11 05       	cpc	r17, r1
    1052:	61 f7       	brne	.-40     	; 0x102c <_ZN15OrangutanAnalog11readAverageEhj+0x24>
    1054:	ce 01       	movw	r24, r28
    1056:	96 95       	lsr	r25
    1058:	87 95       	ror	r24
    105a:	c0 34       	cpi	r28, 0x40	; 64
    105c:	d1 05       	cpc	r29, r1
    105e:	38 f4       	brcc	.+14     	; 0x106e <_ZN15OrangutanAnalog11readAverageEhj+0x66>
    1060:	8c 0d       	add	r24, r12
    1062:	9d 1d       	adc	r25, r13
    1064:	be 01       	movw	r22, r28
    1066:	0e 94 cc 11 	call	0x2398	; 0x2398 <__udivmodhi4>
    106a:	cb 01       	movw	r24, r22
    106c:	0e c0       	rjmp	.+28     	; 0x108a <_ZN15OrangutanAnalog11readAverageEhj+0x82>
    106e:	a7 01       	movw	r20, r14
    1070:	96 01       	movw	r18, r12
    1072:	28 0f       	add	r18, r24
    1074:	39 1f       	adc	r19, r25
    1076:	41 1d       	adc	r20, r1
    1078:	51 1d       	adc	r21, r1
    107a:	ca 01       	movw	r24, r20
    107c:	b9 01       	movw	r22, r18
    107e:	9e 01       	movw	r18, r28
    1080:	40 e0       	ldi	r20, 0x00	; 0
    1082:	50 e0       	ldi	r21, 0x00	; 0
    1084:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <__udivmodsi4>
    1088:	c9 01       	movw	r24, r18
    108a:	cd b7       	in	r28, 0x3d	; 61
    108c:	de b7       	in	r29, 0x3e	; 62
    108e:	e8 e0       	ldi	r30, 0x08	; 8
    1090:	0c 94 70 12 	jmp	0x24e0	; 0x24e0 <__epilogue_restores__+0x14>

00001094 <_ZN15OrangutanAnalog12toMillivoltsEj>:
    1094:	cf 92       	push	r12
    1096:	df 92       	push	r13
    1098:	ef 92       	push	r14
    109a:	ff 92       	push	r15
    109c:	a0 91 00 01 	lds	r26, 0x0100	; 0x800100 <__data_start>
    10a0:	b0 91 01 01 	lds	r27, 0x0101	; 0x800101 <__data_start+0x1>
    10a4:	9c 01       	movw	r18, r24
    10a6:	0e 94 3b 12 	call	0x2476	; 0x2476 <__umulhisi3>
    10aa:	6b 01       	movw	r12, r22
    10ac:	7c 01       	movw	r14, r24
    10ae:	0e 94 da 07 	call	0xfb4	; 0xfb4 <_ZN15OrangutanAnalog7getModeEv>
    10b2:	88 23       	and	r24, r24
    10b4:	59 f0       	breq	.+22     	; 0x10cc <_ZN15OrangutanAnalog12toMillivoltsEj+0x38>
    10b6:	c7 01       	movw	r24, r14
    10b8:	b6 01       	movw	r22, r12
    10ba:	61 58       	subi	r22, 0x81	; 129
    10bc:	7f 4f       	sbci	r23, 0xFF	; 255
    10be:	8f 4f       	sbci	r24, 0xFF	; 255
    10c0:	9f 4f       	sbci	r25, 0xFF	; 255
    10c2:	2f ef       	ldi	r18, 0xFF	; 255
    10c4:	30 e0       	ldi	r19, 0x00	; 0
    10c6:	40 e0       	ldi	r20, 0x00	; 0
    10c8:	50 e0       	ldi	r21, 0x00	; 0
    10ca:	0a c0       	rjmp	.+20     	; 0x10e0 <_ZN15OrangutanAnalog12toMillivoltsEj+0x4c>
    10cc:	c7 01       	movw	r24, r14
    10ce:	b6 01       	movw	r22, r12
    10d0:	61 50       	subi	r22, 0x01	; 1
    10d2:	7e 4f       	sbci	r23, 0xFE	; 254
    10d4:	8f 4f       	sbci	r24, 0xFF	; 255
    10d6:	9f 4f       	sbci	r25, 0xFF	; 255
    10d8:	2f ef       	ldi	r18, 0xFF	; 255
    10da:	33 e0       	ldi	r19, 0x03	; 3
    10dc:	40 e0       	ldi	r20, 0x00	; 0
    10de:	50 e0       	ldi	r21, 0x00	; 0
    10e0:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <__udivmodsi4>
    10e4:	c9 01       	movw	r24, r18
    10e6:	ff 90       	pop	r15
    10e8:	ef 90       	pop	r14
    10ea:	df 90       	pop	r13
    10ec:	cf 90       	pop	r12
    10ee:	08 95       	ret

000010f0 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>:
    10f0:	0e 94 04 08 	call	0x1008	; 0x1008 <_ZN15OrangutanAnalog11readAverageEhj>
    10f4:	0e 94 4a 08 	call	0x1094	; 0x1094 <_ZN15OrangutanAnalog12toMillivoltsEj>
    10f8:	08 95       	ret

000010fa <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>:
    10fa:	1f 93       	push	r17
    10fc:	cf 93       	push	r28
    10fe:	df 93       	push	r29
    1100:	0e 94 da 07 	call	0xfb4	; 0xfb4 <_ZN15OrangutanAnalog7getModeEv>
    1104:	18 2f       	mov	r17, r24
    1106:	0e 94 c9 07 	call	0xf92	; 0xf92 <_ZN15OrangutanAnalog7setModeEh.part.0>
    110a:	6a e0       	ldi	r22, 0x0A	; 10
    110c:	70 e0       	ldi	r23, 0x00	; 0
    110e:	86 e0       	ldi	r24, 0x06	; 6
    1110:	0e 94 78 08 	call	0x10f0	; 0x10f0 <_ZN15OrangutanAnalog21readAverageMillivoltsEhj>
    1114:	ec 01       	movw	r28, r24
    1116:	81 2f       	mov	r24, r17
    1118:	0e 94 cf 07 	call	0xf9e	; 0xf9e <_ZN15OrangutanAnalog7setModeEh>
    111c:	ce 01       	movw	r24, r28
    111e:	88 0f       	add	r24, r24
    1120:	99 1f       	adc	r25, r25
    1122:	8c 0f       	add	r24, r28
    1124:	9d 1f       	adc	r25, r29
    1126:	01 96       	adiw	r24, 0x01	; 1
    1128:	96 95       	lsr	r25
    112a:	87 95       	ror	r24
    112c:	df 91       	pop	r29
    112e:	cf 91       	pop	r28
    1130:	1f 91       	pop	r17
    1132:	08 95       	ret

00001134 <read_battery_millivolts_3pi>:
    1134:	0e 94 7d 08 	call	0x10fa	; 0x10fa <_ZN15OrangutanAnalog25readBatteryMillivolts_3piEv>
    1138:	08 95       	ret

0000113a <_ZL16currentCharacterv>:
    113a:	90 91 73 01 	lds	r25, 0x0173	; 0x800173 <_ZL17use_program_space>
    113e:	e0 91 6e 01 	lds	r30, 0x016E	; 0x80016e <__data_end>
    1142:	f0 91 6f 01 	lds	r31, 0x016F	; 0x80016f <__data_end+0x1>
    1146:	99 23       	and	r25, r25
    1148:	11 f0       	breq	.+4      	; 0x114e <_ZL16currentCharacterv+0x14>
    114a:	84 91       	lpm	r24, Z
    114c:	01 c0       	rjmp	.+2      	; 0x1150 <_ZL16currentCharacterv+0x16>
    114e:	80 81       	ld	r24, Z
    1150:	2f eb       	ldi	r18, 0xBF	; 191
    1152:	28 0f       	add	r18, r24
    1154:	2a 31       	cpi	r18, 0x1A	; 26
    1156:	10 f4       	brcc	.+4      	; 0x115c <_ZL16currentCharacterv+0x22>
    1158:	80 5e       	subi	r24, 0xE0	; 224
    115a:	08 95       	ret
    115c:	80 32       	cpi	r24, 0x20	; 32
    115e:	49 f4       	brne	.+18     	; 0x1172 <_ZL16currentCharacterv+0x38>
    1160:	9f 01       	movw	r18, r30
    1162:	2f 5f       	subi	r18, 0xFF	; 255
    1164:	3f 4f       	sbci	r19, 0xFF	; 255
    1166:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <__data_end+0x1>
    116a:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <__data_end>
    116e:	ef 2b       	or	r30, r31
    1170:	31 f7       	brne	.-52     	; 0x113e <_ZL16currentCharacterv+0x4>
    1172:	08 95       	ret

00001174 <_ZL9getNumberv>:
    1174:	1f 93       	push	r17
    1176:	cf 93       	push	r28
    1178:	df 93       	push	r29
    117a:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZL16currentCharacterv>
    117e:	c0 e0       	ldi	r28, 0x00	; 0
    1180:	d0 e0       	ldi	r29, 0x00	; 0
    1182:	1a e0       	ldi	r17, 0x0A	; 10
    1184:	90 ed       	ldi	r25, 0xD0	; 208
    1186:	98 0f       	add	r25, r24
    1188:	9a 30       	cpi	r25, 0x0A	; 10
    118a:	b8 f4       	brcc	.+46     	; 0x11ba <_ZL9getNumberv+0x46>
    118c:	9e 01       	movw	r18, r28
    118e:	12 9f       	mul	r17, r18
    1190:	e0 01       	movw	r28, r0
    1192:	13 9f       	mul	r17, r19
    1194:	d0 0d       	add	r29, r0
    1196:	11 24       	eor	r1, r1
    1198:	c8 0f       	add	r28, r24
    119a:	d1 1d       	adc	r29, r1
    119c:	87 fd       	sbrc	r24, 7
    119e:	da 95       	dec	r29
    11a0:	e0 97       	sbiw	r28, 0x30	; 48
    11a2:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <__data_end>
    11a6:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <__data_end+0x1>
    11aa:	01 96       	adiw	r24, 0x01	; 1
    11ac:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <__data_end+0x1>
    11b0:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <__data_end>
    11b4:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZL16currentCharacterv>
    11b8:	e5 cf       	rjmp	.-54     	; 0x1184 <_ZL9getNumberv+0x10>
    11ba:	ce 01       	movw	r24, r28
    11bc:	df 91       	pop	r29
    11be:	cf 91       	pop	r28
    11c0:	1f 91       	pop	r17
    11c2:	08 95       	ret

000011c4 <_ZN15OrangutanBuzzer5init2Ev>:
    11c4:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    11c8:	83 e2       	ldi	r24, 0x23	; 35
    11ca:	80 93 80 00 	sts	0x0080, r24	; 0x800080 <__TEXT_REGION_LENGTH__+0x7e0080>
    11ce:	81 e1       	ldi	r24, 0x11	; 17
    11d0:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    11d4:	10 92 82 00 	sts	0x0082, r1	; 0x800082 <__TEXT_REGION_LENGTH__+0x7e0082>
    11d8:	80 e1       	ldi	r24, 0x10	; 16
    11da:	97 e2       	ldi	r25, 0x27	; 39
    11dc:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    11e0:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    11e4:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    11e8:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    11ec:	22 9a       	sbi	0x04, 2	; 4
    11ee:	78 94       	sei
    11f0:	08 95       	ret

000011f2 <_ZN15OrangutanBuzzer13playFrequencyEjjh>:
    11f2:	8f 92       	push	r8
    11f4:	9f 92       	push	r9
    11f6:	af 92       	push	r10
    11f8:	bf 92       	push	r11
    11fa:	df 92       	push	r13
    11fc:	ef 92       	push	r14
    11fe:	ff 92       	push	r15
    1200:	0f 93       	push	r16
    1202:	1f 93       	push	r17
    1204:	cf 93       	push	r28
    1206:	df 93       	push	r29
    1208:	5c 01       	movw	r10, r24
    120a:	8b 01       	movw	r16, r22
    120c:	d4 2e       	mov	r13, r20
    120e:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <buzzerInitialized>
    1212:	81 11       	cpse	r24, r1
    1214:	05 c0       	rjmp	.+10     	; 0x1220 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x2e>
    1216:	81 e0       	ldi	r24, 0x01	; 1
    1218:	80 93 70 01 	sts	0x0170, r24	; 0x800170 <buzzerInitialized>
    121c:	0e 94 e2 08 	call	0x11c4	; 0x11c4 <_ZN15OrangutanBuzzer5init2Ev>
    1220:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <buzzerFinished>
    1224:	b7 fe       	sbrs	r11, 7
    1226:	05 c0       	rjmp	.+10     	; 0x1232 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x40>
    1228:	e8 94       	clt
    122a:	b7 f8       	bld	r11, 7
    122c:	2a e0       	ldi	r18, 0x0A	; 10
    122e:	f2 2e       	mov	r15, r18
    1230:	02 c0       	rjmp	.+4      	; 0x1236 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x44>
    1232:	ff 24       	eor	r15, r15
    1234:	f3 94       	inc	r15
    1236:	e0 90 81 00 	lds	r14, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    123a:	2e 2d       	mov	r18, r14
    123c:	28 7f       	andi	r18, 0xF8	; 248
    123e:	e2 2e       	mov	r14, r18
    1240:	48 ec       	ldi	r20, 0xC8	; 200
    1242:	f4 9e       	mul	r15, r20
    1244:	c0 01       	movw	r24, r0
    1246:	11 24       	eor	r1, r1
    1248:	8a 15       	cp	r24, r10
    124a:	9b 05       	cpc	r25, r11
    124c:	e0 f4       	brcc	.+56     	; 0x1286 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x94>
    124e:	e5 01       	movw	r28, r10
    1250:	51 e1       	ldi	r21, 0x11	; 17
    1252:	a5 16       	cp	r10, r21
    1254:	57 e2       	ldi	r21, 0x27	; 39
    1256:	b5 06       	cpc	r11, r21
    1258:	10 f0       	brcs	.+4      	; 0x125e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x6c>
    125a:	c0 e1       	ldi	r28, 0x10	; 16
    125c:	d7 e2       	ldi	r29, 0x27	; 39
    125e:	be 01       	movw	r22, r28
    1260:	76 95       	lsr	r23
    1262:	67 95       	ror	r22
    1264:	80 e0       	ldi	r24, 0x00	; 0
    1266:	90 e0       	ldi	r25, 0x00	; 0
    1268:	60 58       	subi	r22, 0x80	; 128
    126a:	79 46       	sbci	r23, 0x69	; 105
    126c:	87 46       	sbci	r24, 0x67	; 103
    126e:	9f 4f       	sbci	r25, 0xFF	; 255
    1270:	4e 01       	movw	r8, r28
    1272:	a1 2c       	mov	r10, r1
    1274:	b1 2c       	mov	r11, r1
    1276:	a5 01       	movw	r20, r10
    1278:	94 01       	movw	r18, r8
    127a:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <__udivmodsi4>
    127e:	59 01       	movw	r10, r18
    1280:	8e 2d       	mov	r24, r14
    1282:	81 60       	ori	r24, 0x01	; 1
    1284:	24 c0       	rjmp	.+72     	; 0x12ce <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xdc>
    1286:	c8 e2       	ldi	r28, 0x28	; 40
    1288:	fc 9e       	mul	r15, r28
    128a:	c0 2d       	mov	r28, r0
    128c:	11 24       	eor	r1, r1
    128e:	d0 e0       	ldi	r29, 0x00	; 0
    1290:	ca 15       	cp	r28, r10
    1292:	db 05       	cpc	r29, r11
    1294:	08 f4       	brcc	.+2      	; 0x1298 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xa6>
    1296:	e5 01       	movw	r28, r10
    1298:	be 01       	movw	r22, r28
    129a:	76 95       	lsr	r23
    129c:	67 95       	ror	r22
    129e:	9e 01       	movw	r18, r28
    12a0:	40 e0       	ldi	r20, 0x00	; 0
    12a2:	50 e0       	ldi	r21, 0x00	; 0
    12a4:	8a e0       	ldi	r24, 0x0A	; 10
    12a6:	f8 12       	cpse	r15, r24
    12a8:	07 c0       	rjmp	.+14     	; 0x12b8 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xc6>
    12aa:	80 e0       	ldi	r24, 0x00	; 0
    12ac:	90 e0       	ldi	r25, 0x00	; 0
    12ae:	60 5e       	subi	r22, 0xE0	; 224
    12b0:	73 44       	sbci	r23, 0x43	; 67
    12b2:	81 44       	sbci	r24, 0x41	; 65
    12b4:	9f 4f       	sbci	r25, 0xFF	; 255
    12b6:	06 c0       	rjmp	.+12     	; 0x12c4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xd2>
    12b8:	80 e0       	ldi	r24, 0x00	; 0
    12ba:	90 e0       	ldi	r25, 0x00	; 0
    12bc:	60 53       	subi	r22, 0x30	; 48
    12be:	7d 4e       	sbci	r23, 0xED	; 237
    12c0:	8c 4e       	sbci	r24, 0xEC	; 236
    12c2:	9f 4f       	sbci	r25, 0xFF	; 255
    12c4:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <__udivmodsi4>
    12c8:	59 01       	movw	r10, r18
    12ca:	8e 2d       	mov	r24, r14
    12cc:	82 60       	ori	r24, 0x02	; 2
    12ce:	88 2e       	mov	r8, r24
    12d0:	2a e0       	ldi	r18, 0x0A	; 10
    12d2:	f2 12       	cpse	r15, r18
    12d4:	07 c0       	rjmp	.+14     	; 0x12e4 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0xf2>
    12d6:	ce 01       	movw	r24, r28
    12d8:	05 96       	adiw	r24, 0x05	; 5
    12da:	6a e0       	ldi	r22, 0x0A	; 10
    12dc:	70 e0       	ldi	r23, 0x00	; 0
    12de:	0e 94 cc 11 	call	0x2398	; 0x2398 <__udivmodhi4>
    12e2:	eb 01       	movw	r28, r22
    12e4:	c8 3e       	cpi	r28, 0xE8	; 232
    12e6:	43 e0       	ldi	r20, 0x03	; 3
    12e8:	d4 07       	cpc	r29, r20
    12ea:	59 f0       	breq	.+22     	; 0x1302 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x110>
    12ec:	98 01       	movw	r18, r16
    12ee:	de 01       	movw	r26, r28
    12f0:	0e 94 3b 12 	call	0x2476	; 0x2476 <__umulhisi3>
    12f4:	28 ee       	ldi	r18, 0xE8	; 232
    12f6:	33 e0       	ldi	r19, 0x03	; 3
    12f8:	40 e0       	ldi	r20, 0x00	; 0
    12fa:	50 e0       	ldi	r21, 0x00	; 0
    12fc:	0e 94 16 12 	call	0x242c	; 0x242c <__divmodsi4>
    1300:	89 01       	movw	r16, r18
    1302:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1306:	80 92 81 00 	sts	0x0081, r8	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    130a:	b0 92 89 00 	sts	0x0089, r11	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    130e:	a0 92 88 00 	sts	0x0088, r10	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1312:	20 91 88 00 	lds	r18, 0x0088	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1316:	30 91 89 00 	lds	r19, 0x0089	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    131a:	4d 2d       	mov	r20, r13
    131c:	40 31       	cpi	r20, 0x10	; 16
    131e:	08 f0       	brcs	.+2      	; 0x1322 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x130>
    1320:	4f e0       	ldi	r20, 0x0F	; 15
    1322:	80 e1       	ldi	r24, 0x10	; 16
    1324:	90 e0       	ldi	r25, 0x00	; 0
    1326:	84 1b       	sub	r24, r20
    1328:	91 09       	sbc	r25, r1
    132a:	a9 01       	movw	r20, r18
    132c:	02 c0       	rjmp	.+4      	; 0x1332 <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x140>
    132e:	56 95       	lsr	r21
    1330:	47 95       	ror	r20
    1332:	8a 95       	dec	r24
    1334:	e2 f7       	brpl	.-8      	; 0x132e <_ZN15OrangutanBuzzer13playFrequencyEjjh+0x13c>
    1336:	50 93 8b 00 	sts	0x008B, r21	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    133a:	40 93 8a 00 	sts	0x008A, r20	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    133e:	10 93 76 01 	sts	0x0176, r17	; 0x800176 <_ZL13buzzerTimeout+0x1>
    1342:	00 93 75 01 	sts	0x0175, r16	; 0x800175 <_ZL13buzzerTimeout>
    1346:	86 b3       	in	r24, 0x16	; 22
    1348:	8f ef       	ldi	r24, 0xFF	; 255
    134a:	86 bb       	out	0x16, r24	; 22
    134c:	81 e0       	ldi	r24, 0x01	; 1
    134e:	80 93 6f 00 	sts	0x006F, r24	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    1352:	df 91       	pop	r29
    1354:	cf 91       	pop	r28
    1356:	1f 91       	pop	r17
    1358:	0f 91       	pop	r16
    135a:	ff 90       	pop	r15
    135c:	ef 90       	pop	r14
    135e:	df 90       	pop	r13
    1360:	bf 90       	pop	r11
    1362:	af 90       	pop	r10
    1364:	9f 90       	pop	r9
    1366:	8f 90       	pop	r8
    1368:	08 95       	ret

0000136a <_ZN15OrangutanBuzzer8playNoteEhjh>:
    136a:	cf 93       	push	r28
    136c:	df 93       	push	r29
    136e:	eb 01       	movw	r28, r22
    1370:	8f 3f       	cpi	r24, 0xFF	; 255
    1372:	11 f0       	breq	.+4      	; 0x1378 <_ZN15OrangutanBuzzer8playNoteEhjh+0xe>
    1374:	41 11       	cpse	r20, r1
    1376:	05 c0       	rjmp	.+10     	; 0x1382 <_ZN15OrangutanBuzzer8playNoteEhjh+0x18>
    1378:	40 e0       	ldi	r20, 0x00	; 0
    137a:	be 01       	movw	r22, r28
    137c:	88 ee       	ldi	r24, 0xE8	; 232
    137e:	93 e0       	ldi	r25, 0x03	; 3
    1380:	43 c0       	rjmp	.+134    	; 0x1408 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9e>
    1382:	81 31       	cpi	r24, 0x11	; 17
    1384:	30 f0       	brcs	.+12     	; 0x1392 <_ZN15OrangutanBuzzer8playNoteEhjh+0x28>
    1386:	50 ef       	ldi	r21, 0xF0	; 240
    1388:	58 0f       	add	r21, r24
    138a:	50 36       	cpi	r21, 0x60	; 96
    138c:	18 f0       	brcs	.+6      	; 0x1394 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    138e:	5f e5       	ldi	r21, 0x5F	; 95
    1390:	01 c0       	rjmp	.+2      	; 0x1394 <_ZN15OrangutanBuzzer8playNoteEhjh+0x2a>
    1392:	50 e0       	ldi	r21, 0x00	; 0
    1394:	85 2f       	mov	r24, r21
    1396:	6c e0       	ldi	r22, 0x0C	; 12
    1398:	0e 94 c0 11 	call	0x2380	; 0x2380 <__udivmodqi4>
    139c:	68 2f       	mov	r22, r24
    139e:	74 ef       	ldi	r23, 0xF4	; 244
    13a0:	76 03       	mulsu	r23, r22
    13a2:	90 01       	movw	r18, r0
    13a4:	11 24       	eor	r1, r1
    13a6:	25 0f       	add	r18, r21
    13a8:	31 1d       	adc	r19, r1
    13aa:	2c 30       	cpi	r18, 0x0C	; 12
    13ac:	31 05       	cpc	r19, r1
    13ae:	40 f4       	brcc	.+16     	; 0x13c0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x56>
    13b0:	f9 01       	movw	r30, r18
    13b2:	ee 0f       	add	r30, r30
    13b4:	ff 1f       	adc	r31, r31
    13b6:	ec 5e       	subi	r30, 0xEC	; 236
    13b8:	fe 4f       	sbci	r31, 0xFE	; 254
    13ba:	20 81       	ld	r18, Z
    13bc:	31 81       	ldd	r19, Z+1	; 0x01
    13be:	02 c0       	rjmp	.+4      	; 0x13c4 <_ZN15OrangutanBuzzer8playNoteEhjh+0x5a>
    13c0:	20 e0       	ldi	r18, 0x00	; 0
    13c2:	30 e0       	ldi	r19, 0x00	; 0
    13c4:	87 30       	cpi	r24, 0x07	; 7
    13c6:	81 f0       	breq	.+32     	; 0x13e8 <_ZN15OrangutanBuzzer8playNoteEhjh+0x7e>
    13c8:	08 2e       	mov	r0, r24
    13ca:	02 c0       	rjmp	.+4      	; 0x13d0 <_ZN15OrangutanBuzzer8playNoteEhjh+0x66>
    13cc:	22 0f       	add	r18, r18
    13ce:	33 1f       	adc	r19, r19
    13d0:	0a 94       	dec	r0
    13d2:	e2 f7       	brpl	.-8      	; 0x13cc <_ZN15OrangutanBuzzer8playNoteEhjh+0x62>
    13d4:	82 30       	cpi	r24, 0x02	; 2
    13d6:	28 f0       	brcs	.+10     	; 0x13e2 <_ZN15OrangutanBuzzer8playNoteEhjh+0x78>
    13d8:	c9 01       	movw	r24, r18
    13da:	05 96       	adiw	r24, 0x05	; 5
    13dc:	6a e0       	ldi	r22, 0x0A	; 10
    13de:	70 e0       	ldi	r23, 0x00	; 0
    13e0:	0c c0       	rjmp	.+24     	; 0x13fa <_ZN15OrangutanBuzzer8playNoteEhjh+0x90>
    13e2:	c9 01       	movw	r24, r18
    13e4:	90 58       	subi	r25, 0x80	; 128
    13e6:	0c c0       	rjmp	.+24     	; 0x1400 <_ZN15OrangutanBuzzer8playNoteEhjh+0x96>
    13e8:	c9 01       	movw	r24, r18
    13ea:	36 e0       	ldi	r19, 0x06	; 6
    13ec:	88 0f       	add	r24, r24
    13ee:	99 1f       	adc	r25, r25
    13f0:	3a 95       	dec	r19
    13f2:	e1 f7       	brne	.-8      	; 0x13ec <_ZN15OrangutanBuzzer8playNoteEhjh+0x82>
    13f4:	02 96       	adiw	r24, 0x02	; 2
    13f6:	65 e0       	ldi	r22, 0x05	; 5
    13f8:	70 e0       	ldi	r23, 0x00	; 0
    13fa:	0e 94 cc 11 	call	0x2398	; 0x2398 <__udivmodhi4>
    13fe:	cb 01       	movw	r24, r22
    1400:	40 31       	cpi	r20, 0x10	; 16
    1402:	08 f0       	brcs	.+2      	; 0x1406 <_ZN15OrangutanBuzzer8playNoteEhjh+0x9c>
    1404:	4f e0       	ldi	r20, 0x0F	; 15
    1406:	be 01       	movw	r22, r28
    1408:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    140c:	df 91       	pop	r29
    140e:	cf 91       	pop	r28
    1410:	08 95       	ret

00001412 <_ZL8nextNotev>:
    1412:	a2 e0       	ldi	r26, 0x02	; 2
    1414:	b0 e0       	ldi	r27, 0x00	; 0
    1416:	ef e0       	ldi	r30, 0x0F	; 15
    1418:	fa e0       	ldi	r31, 0x0A	; 10
    141a:	0c 94 4c 12 	jmp	0x2498	; 0x2498 <__prologue_saves__+0x4>
    141e:	90 90 0a 01 	lds	r9, 0x010A	; 0x80010a <_ZL6octave>
    1422:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <_ZL8staccato>
    1426:	88 23       	and	r24, r24
    1428:	21 f0       	breq	.+8      	; 0x1432 <_ZL8nextNotev+0x20>
    142a:	60 91 71 01 	lds	r22, 0x0171	; 0x800171 <_ZL22staccato_rest_duration>
    142e:	61 11       	cpse	r22, r1
    1430:	17 c0       	rjmp	.+46     	; 0x1460 <_ZL8nextNotev+0x4e>
    1432:	77 24       	eor	r7, r7
    1434:	73 94       	inc	r7
    1436:	b0 ec       	ldi	r27, 0xC0	; 192
    1438:	ab 2e       	mov	r10, r27
    143a:	bd e5       	ldi	r27, 0x5D	; 93
    143c:	bb 2e       	mov	r11, r27
    143e:	1a e0       	ldi	r17, 0x0A	; 10
    1440:	61 2e       	mov	r6, r17
    1442:	04 e0       	ldi	r16, 0x04	; 4
    1444:	80 2e       	mov	r8, r16
    1446:	80 ed       	ldi	r24, 0xD0	; 208
    1448:	c8 2e       	mov	r12, r24
    144a:	87 e0       	ldi	r24, 0x07	; 7
    144c:	d8 2e       	mov	r13, r24
    144e:	94 e0       	ldi	r25, 0x04	; 4
    1450:	e9 2e       	mov	r14, r25
    1452:	f1 2c       	mov	r15, r1
    1454:	04 ef       	ldi	r16, 0xF4	; 244
    1456:	11 e0       	ldi	r17, 0x01	; 1
    1458:	2f e0       	ldi	r18, 0x0F	; 15
    145a:	42 2e       	mov	r4, r18
    145c:	51 2c       	mov	r5, r1
    145e:	15 c0       	rjmp	.+42     	; 0x148a <_ZL8nextNotev+0x78>
    1460:	70 e0       	ldi	r23, 0x00	; 0
    1462:	40 e0       	ldi	r20, 0x00	; 0
    1464:	88 ee       	ldi	r24, 0xE8	; 232
    1466:	93 e0       	ldi	r25, 0x03	; 3
    1468:	0e 94 f9 08 	call	0x11f2	; 0x11f2 <_ZN15OrangutanBuzzer13playFrequencyEjjh>
    146c:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <_ZL22staccato_rest_duration>
    1470:	17 c1       	rjmp	.+558    	; 0x16a0 <_ZL8nextNotev+0x28e>
    1472:	86 36       	cpi	r24, 0x66	; 102
    1474:	d4 f5       	brge	.+116    	; 0x14ea <_ZL8nextNotev+0xd8>
    1476:	81 36       	cpi	r24, 0x61	; 97
    1478:	09 f4       	brne	.+2      	; 0x147c <_ZL8nextNotev+0x6a>
    147a:	a9 c0       	rjmp	.+338    	; 0x15ce <_ZL8nextNotev+0x1bc>
    147c:	7c f5       	brge	.+94     	; 0x14dc <_ZL8nextNotev+0xca>
    147e:	8c 33       	cpi	r24, 0x3C	; 60
    1480:	09 f4       	brne	.+2      	; 0x1484 <_ZL8nextNotev+0x72>
    1482:	60 c0       	rjmp	.+192    	; 0x1544 <_ZL8nextNotev+0x132>
    1484:	8e 33       	cpi	r24, 0x3E	; 62
    1486:	81 f4       	brne	.+32     	; 0x14a8 <_ZL8nextNotev+0x96>
    1488:	93 94       	inc	r9
    148a:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZL16currentCharacterv>
    148e:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <__data_end>
    1492:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <__data_end+0x1>
    1496:	2f 5f       	subi	r18, 0xFF	; 255
    1498:	3f 4f       	sbci	r19, 0xFF	; 255
    149a:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <__data_end+0x1>
    149e:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <__data_end>
    14a2:	85 36       	cpi	r24, 0x65	; 101
    14a4:	31 f7       	brne	.-52     	; 0x1472 <_ZL8nextNotev+0x60>
    14a6:	52 c0       	rjmp	.+164    	; 0x154c <_ZL8nextNotev+0x13a>
    14a8:	81 32       	cpi	r24, 0x21	; 33
    14aa:	09 f0       	breq	.+2      	; 0x14ae <_ZL8nextNotev+0x9c>
    14ac:	8b c0       	rjmp	.+278    	; 0x15c4 <_ZL8nextNotev+0x1b2>
    14ae:	80 92 0a 01 	sts	0x010A, r8	; 0x80010a <_ZL6octave>
    14b2:	d0 92 09 01 	sts	0x0109, r13	; 0x800109 <_ZL19whole_note_duration+0x1>
    14b6:	c0 92 08 01 	sts	0x0108, r12	; 0x800108 <_ZL19whole_note_duration>
    14ba:	f0 92 07 01 	sts	0x0107, r15	; 0x800107 <_ZL9note_type+0x1>
    14be:	e0 92 06 01 	sts	0x0106, r14	; 0x800106 <_ZL9note_type>
    14c2:	10 93 05 01 	sts	0x0105, r17	; 0x800105 <_ZL8duration+0x1>
    14c6:	00 93 04 01 	sts	0x0104, r16	; 0x800104 <_ZL8duration>
    14ca:	50 92 03 01 	sts	0x0103, r5	; 0x800103 <_ZL6volume+0x1>
    14ce:	40 92 02 01 	sts	0x0102, r4	; 0x800102 <_ZL6volume>
    14d2:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <_ZL8staccato>
    14d6:	a4 e0       	ldi	r26, 0x04	; 4
    14d8:	9a 2e       	mov	r9, r26
    14da:	d7 cf       	rjmp	.-82     	; 0x148a <_ZL8nextNotev+0x78>
    14dc:	83 36       	cpi	r24, 0x63	; 99
    14de:	a1 f1       	breq	.+104    	; 0x1548 <_ZL8nextNotev+0x136>
    14e0:	0c f4       	brge	.+2      	; 0x14e4 <_ZL8nextNotev+0xd2>
    14e2:	78 c0       	rjmp	.+240    	; 0x15d4 <_ZL8nextNotev+0x1c2>
    14e4:	10 e0       	ldi	r17, 0x00	; 0
    14e6:	82 e0       	ldi	r24, 0x02	; 2
    14e8:	77 c0       	rjmp	.+238    	; 0x15d8 <_ZL8nextNotev+0x1c6>
    14ea:	8d 36       	cpi	r24, 0x6D	; 109
    14ec:	c1 f1       	breq	.+112    	; 0x155e <_ZL8nextNotev+0x14c>
    14ee:	94 f4       	brge	.+36     	; 0x1514 <_ZL8nextNotev+0x102>
    14f0:	87 36       	cpi	r24, 0x67	; 103
    14f2:	91 f1       	breq	.+100    	; 0x1558 <_ZL8nextNotev+0x146>
    14f4:	74 f1       	brlt	.+92     	; 0x1552 <_ZL8nextNotev+0x140>
    14f6:	8c 36       	cpi	r24, 0x6C	; 108
    14f8:	09 f0       	breq	.+2      	; 0x14fc <_ZL8nextNotev+0xea>
    14fa:	64 c0       	rjmp	.+200    	; 0x15c4 <_ZL8nextNotev+0x1b2>
    14fc:	0e 94 ba 08 	call	0x1174	; 0x1174 <_ZL9getNumberv>
    1500:	bc 01       	movw	r22, r24
    1502:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <_ZL9note_type+0x1>
    1506:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <_ZL9note_type>
    150a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    150e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    1512:	51 c0       	rjmp	.+162    	; 0x15b6 <_ZL8nextNotev+0x1a4>
    1514:	82 37       	cpi	r24, 0x72	; 114
    1516:	c9 f1       	breq	.+114    	; 0x158a <_ZL8nextNotev+0x178>
    1518:	4c f4       	brge	.+18     	; 0x152c <_ZL8nextNotev+0x11a>
    151a:	8f 36       	cpi	r24, 0x6F	; 111
    151c:	09 f0       	breq	.+2      	; 0x1520 <_ZL8nextNotev+0x10e>
    151e:	52 c0       	rjmp	.+164    	; 0x15c4 <_ZL8nextNotev+0x1b2>
    1520:	0e 94 ba 08 	call	0x1174	; 0x1174 <_ZL9getNumberv>
    1524:	98 2e       	mov	r9, r24
    1526:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <_ZL6octave>
    152a:	af cf       	rjmp	.-162    	; 0x148a <_ZL8nextNotev+0x78>
    152c:	84 37       	cpi	r24, 0x74	; 116
    152e:	81 f1       	breq	.+96     	; 0x1590 <_ZL8nextNotev+0x17e>
    1530:	86 37       	cpi	r24, 0x76	; 118
    1532:	09 f0       	breq	.+2      	; 0x1536 <_ZL8nextNotev+0x124>
    1534:	47 c0       	rjmp	.+142    	; 0x15c4 <_ZL8nextNotev+0x1b2>
    1536:	0e 94 ba 08 	call	0x1174	; 0x1174 <_ZL9getNumberv>
    153a:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <_ZL6volume+0x1>
    153e:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <_ZL6volume>
    1542:	a3 cf       	rjmp	.-186    	; 0x148a <_ZL8nextNotev+0x78>
    1544:	9a 94       	dec	r9
    1546:	a1 cf       	rjmp	.-190    	; 0x148a <_ZL8nextNotev+0x78>
    1548:	10 e0       	ldi	r17, 0x00	; 0
    154a:	20 c0       	rjmp	.+64     	; 0x158c <_ZL8nextNotev+0x17a>
    154c:	10 e0       	ldi	r17, 0x00	; 0
    154e:	84 e0       	ldi	r24, 0x04	; 4
    1550:	43 c0       	rjmp	.+134    	; 0x15d8 <_ZL8nextNotev+0x1c6>
    1552:	10 e0       	ldi	r17, 0x00	; 0
    1554:	85 e0       	ldi	r24, 0x05	; 5
    1556:	40 c0       	rjmp	.+128    	; 0x15d8 <_ZL8nextNotev+0x1c6>
    1558:	10 e0       	ldi	r17, 0x00	; 0
    155a:	87 e0       	ldi	r24, 0x07	; 7
    155c:	3d c0       	rjmp	.+122    	; 0x15d8 <_ZL8nextNotev+0x1c6>
    155e:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZL16currentCharacterv>
    1562:	8c 36       	cpi	r24, 0x6C	; 108
    1564:	19 f4       	brne	.+6      	; 0x156c <_ZL8nextNotev+0x15a>
    1566:	10 92 72 01 	sts	0x0172, r1	; 0x800172 <_ZL8staccato>
    156a:	04 c0       	rjmp	.+8      	; 0x1574 <_ZL8nextNotev+0x162>
    156c:	70 92 72 01 	sts	0x0172, r7	; 0x800172 <_ZL8staccato>
    1570:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <_ZL22staccato_rest_duration>
    1574:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <__data_end>
    1578:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <__data_end+0x1>
    157c:	2f 5f       	subi	r18, 0xFF	; 255
    157e:	3f 4f       	sbci	r19, 0xFF	; 255
    1580:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <__data_end+0x1>
    1584:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <__data_end>
    1588:	80 cf       	rjmp	.-256    	; 0x148a <_ZL8nextNotev+0x78>
    158a:	11 e0       	ldi	r17, 0x01	; 1
    158c:	80 e0       	ldi	r24, 0x00	; 0
    158e:	24 c0       	rjmp	.+72     	; 0x15d8 <_ZL8nextNotev+0x1c6>
    1590:	0e 94 ba 08 	call	0x1174	; 0x1174 <_ZL9getNumberv>
    1594:	bc 01       	movw	r22, r24
    1596:	c5 01       	movw	r24, r10
    1598:	0e 94 cc 11 	call	0x2398	; 0x2398 <__udivmodhi4>
    159c:	66 9e       	mul	r6, r22
    159e:	c0 01       	movw	r24, r0
    15a0:	67 9e       	mul	r6, r23
    15a2:	90 0d       	add	r25, r0
    15a4:	11 24       	eor	r1, r1
    15a6:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <_ZL19whole_note_duration+0x1>
    15aa:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <_ZL19whole_note_duration>
    15ae:	60 91 06 01 	lds	r22, 0x0106	; 0x800106 <_ZL9note_type>
    15b2:	70 91 07 01 	lds	r23, 0x0107	; 0x800107 <_ZL9note_type+0x1>
    15b6:	0e 94 cc 11 	call	0x2398	; 0x2398 <__udivmodhi4>
    15ba:	70 93 05 01 	sts	0x0105, r23	; 0x800105 <_ZL8duration+0x1>
    15be:	60 93 04 01 	sts	0x0104, r22	; 0x800104 <_ZL8duration>
    15c2:	63 cf       	rjmp	.-314    	; 0x148a <_ZL8nextNotev+0x78>
    15c4:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <__data_end+0x1>
    15c8:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <__data_end>
    15cc:	69 c0       	rjmp	.+210    	; 0x16a0 <_ZL8nextNotev+0x28e>
    15ce:	10 e0       	ldi	r17, 0x00	; 0
    15d0:	89 e0       	ldi	r24, 0x09	; 9
    15d2:	02 c0       	rjmp	.+4      	; 0x15d8 <_ZL8nextNotev+0x1c6>
    15d4:	10 e0       	ldi	r17, 0x00	; 0
    15d6:	8b e0       	ldi	r24, 0x0B	; 11
    15d8:	08 2f       	mov	r16, r24
    15da:	9c e0       	ldi	r25, 0x0C	; 12
    15dc:	99 9e       	mul	r9, r25
    15de:	00 0d       	add	r16, r0
    15e0:	11 24       	eor	r1, r1
    15e2:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZL16currentCharacterv>
    15e6:	98 2f       	mov	r25, r24
    15e8:	97 7f       	andi	r25, 0xF7	; 247
    15ea:	93 32       	cpi	r25, 0x23	; 35
    15ec:	61 f4       	brne	.+24     	; 0x1606 <_ZL8nextNotev+0x1f4>
    15ee:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <__data_end>
    15f2:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <__data_end+0x1>
    15f6:	2f 5f       	subi	r18, 0xFF	; 255
    15f8:	3f 4f       	sbci	r19, 0xFF	; 255
    15fa:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <__data_end+0x1>
    15fe:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <__data_end>
    1602:	0f 5f       	subi	r16, 0xFF	; 255
    1604:	ee cf       	rjmp	.-36     	; 0x15e2 <_ZL8nextNotev+0x1d0>
    1606:	8d 32       	cpi	r24, 0x2D	; 45
    1608:	71 f4       	brne	.+28     	; 0x1626 <_ZL8nextNotev+0x214>
    160a:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <__data_end>
    160e:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <__data_end+0x1>
    1612:	2f 5f       	subi	r18, 0xFF	; 255
    1614:	3f 4f       	sbci	r19, 0xFF	; 255
    1616:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <__data_end+0x1>
    161a:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <__data_end>
    161e:	01 50       	subi	r16, 0x01	; 1
    1620:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZL16currentCharacterv>
    1624:	f0 cf       	rjmp	.-32     	; 0x1606 <_ZL8nextNotev+0x1f4>
    1626:	60 91 04 01 	lds	r22, 0x0104	; 0x800104 <_ZL8duration>
    162a:	70 91 05 01 	lds	r23, 0x0105	; 0x800105 <_ZL8duration+0x1>
    162e:	81 53       	subi	r24, 0x31	; 49
    1630:	88 30       	cpi	r24, 0x08	; 8
    1632:	50 f4       	brcc	.+20     	; 0x1648 <_ZL8nextNotev+0x236>
    1634:	e0 90 08 01 	lds	r14, 0x0108	; 0x800108 <_ZL19whole_note_duration>
    1638:	f0 90 09 01 	lds	r15, 0x0109	; 0x800109 <_ZL19whole_note_duration+0x1>
    163c:	0e 94 ba 08 	call	0x1174	; 0x1174 <_ZL9getNumberv>
    1640:	bc 01       	movw	r22, r24
    1642:	c7 01       	movw	r24, r14
    1644:	0e 94 cc 11 	call	0x2398	; 0x2398 <__udivmodhi4>
    1648:	7b 01       	movw	r14, r22
    164a:	f6 94       	lsr	r15
    164c:	e7 94       	ror	r14
    164e:	69 83       	std	Y+1, r22	; 0x01
    1650:	7a 83       	std	Y+2, r23	; 0x02
    1652:	0e 94 9d 08 	call	0x113a	; 0x113a <_ZL16currentCharacterv>
    1656:	69 81       	ldd	r22, Y+1	; 0x01
    1658:	7a 81       	ldd	r23, Y+2	; 0x02
    165a:	8e 32       	cpi	r24, 0x2E	; 46
    165c:	69 f4       	brne	.+26     	; 0x1678 <_ZL8nextNotev+0x266>
    165e:	20 91 6e 01 	lds	r18, 0x016E	; 0x80016e <__data_end>
    1662:	30 91 6f 01 	lds	r19, 0x016F	; 0x80016f <__data_end+0x1>
    1666:	2f 5f       	subi	r18, 0xFF	; 255
    1668:	3f 4f       	sbci	r19, 0xFF	; 255
    166a:	30 93 6f 01 	sts	0x016F, r19	; 0x80016f <__data_end+0x1>
    166e:	20 93 6e 01 	sts	0x016E, r18	; 0x80016e <__data_end>
    1672:	6e 0d       	add	r22, r14
    1674:	7f 1d       	adc	r23, r15
    1676:	e9 cf       	rjmp	.-46     	; 0x164a <_ZL8nextNotev+0x238>
    1678:	80 91 72 01 	lds	r24, 0x0172	; 0x800172 <_ZL8staccato>
    167c:	88 23       	and	r24, r24
    167e:	39 f0       	breq	.+14     	; 0x168e <_ZL8nextNotev+0x27c>
    1680:	9b 01       	movw	r18, r22
    1682:	36 95       	lsr	r19
    1684:	27 95       	ror	r18
    1686:	20 93 71 01 	sts	0x0171, r18	; 0x800171 <_ZL22staccato_rest_duration>
    168a:	62 1b       	sub	r22, r18
    168c:	71 09       	sbc	r23, r1
    168e:	40 91 02 01 	lds	r20, 0x0102	; 0x800102 <_ZL6volume>
    1692:	11 23       	and	r17, r17
    1694:	11 f0       	breq	.+4      	; 0x169a <_ZL8nextNotev+0x288>
    1696:	8f ef       	ldi	r24, 0xFF	; 255
    1698:	01 c0       	rjmp	.+2      	; 0x169c <_ZL8nextNotev+0x28a>
    169a:	80 2f       	mov	r24, r16
    169c:	0e 94 b5 09 	call	0x136a	; 0x136a <_ZN15OrangutanBuzzer8playNoteEhjh>
    16a0:	22 96       	adiw	r28, 0x02	; 2
    16a2:	e0 e1       	ldi	r30, 0x10	; 16
    16a4:	0c 94 68 12 	jmp	0x24d0	; 0x24d0 <__epilogue_restores__+0x4>

000016a8 <__vector_13>:
    16a8:	1f 92       	push	r1
    16aa:	0f 92       	push	r0
    16ac:	0f b6       	in	r0, 0x3f	; 63
    16ae:	0f 92       	push	r0
    16b0:	11 24       	eor	r1, r1
    16b2:	2f 93       	push	r18
    16b4:	3f 93       	push	r19
    16b6:	4f 93       	push	r20
    16b8:	5f 93       	push	r21
    16ba:	6f 93       	push	r22
    16bc:	7f 93       	push	r23
    16be:	8f 93       	push	r24
    16c0:	9f 93       	push	r25
    16c2:	af 93       	push	r26
    16c4:	bf 93       	push	r27
    16c6:	ef 93       	push	r30
    16c8:	ff 93       	push	r31
    16ca:	80 91 75 01 	lds	r24, 0x0175	; 0x800175 <_ZL13buzzerTimeout>
    16ce:	90 91 76 01 	lds	r25, 0x0176	; 0x800176 <_ZL13buzzerTimeout+0x1>
    16d2:	9c 01       	movw	r18, r24
    16d4:	21 50       	subi	r18, 0x01	; 1
    16d6:	31 09       	sbc	r19, r1
    16d8:	30 93 76 01 	sts	0x0176, r19	; 0x800176 <_ZL13buzzerTimeout+0x1>
    16dc:	20 93 75 01 	sts	0x0175, r18	; 0x800175 <_ZL13buzzerTimeout>
    16e0:	89 2b       	or	r24, r25
    16e2:	11 f5       	brne	.+68     	; 0x1728 <__vector_13+0x80>
    16e4:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    16e8:	78 94       	sei
    16ea:	80 91 81 00 	lds	r24, 0x0081	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    16ee:	88 7f       	andi	r24, 0xF8	; 248
    16f0:	81 60       	ori	r24, 0x01	; 1
    16f2:	80 93 81 00 	sts	0x0081, r24	; 0x800081 <__TEXT_REGION_LENGTH__+0x7e0081>
    16f6:	80 e1       	ldi	r24, 0x10	; 16
    16f8:	97 e2       	ldi	r25, 0x27	; 39
    16fa:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7e0089>
    16fe:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7e0088>
    1702:	10 92 8b 00 	sts	0x008B, r1	; 0x80008b <__TEXT_REGION_LENGTH__+0x7e008b>
    1706:	10 92 8a 00 	sts	0x008A, r1	; 0x80008a <__TEXT_REGION_LENGTH__+0x7e008a>
    170a:	81 e0       	ldi	r24, 0x01	; 1
    170c:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <buzzerFinished>
    1710:	80 91 6e 01 	lds	r24, 0x016E	; 0x80016e <__data_end>
    1714:	90 91 6f 01 	lds	r25, 0x016F	; 0x80016f <__data_end+0x1>
    1718:	89 2b       	or	r24, r25
    171a:	31 f0       	breq	.+12     	; 0x1728 <__vector_13+0x80>
    171c:	80 91 74 01 	lds	r24, 0x0174	; 0x800174 <_ZL17play_mode_setting>
    1720:	81 11       	cpse	r24, r1
    1722:	02 c0       	rjmp	.+4      	; 0x1728 <__vector_13+0x80>
    1724:	0e 94 09 0a 	call	0x1412	; 0x1412 <_ZL8nextNotev>
    1728:	ff 91       	pop	r31
    172a:	ef 91       	pop	r30
    172c:	bf 91       	pop	r27
    172e:	af 91       	pop	r26
    1730:	9f 91       	pop	r25
    1732:	8f 91       	pop	r24
    1734:	7f 91       	pop	r23
    1736:	6f 91       	pop	r22
    1738:	5f 91       	pop	r21
    173a:	4f 91       	pop	r20
    173c:	3f 91       	pop	r19
    173e:	2f 91       	pop	r18
    1740:	0f 90       	pop	r0
    1742:	0f be       	out	0x3f, r0	; 63
    1744:	0f 90       	pop	r0
    1746:	1f 90       	pop	r1
    1748:	18 95       	reti

0000174a <_ZN15OrangutanBuzzer4playEPKc>:
    174a:	10 92 6f 00 	sts	0x006F, r1	; 0x80006f <__TEXT_REGION_LENGTH__+0x7e006f>
    174e:	90 93 6f 01 	sts	0x016F, r25	; 0x80016f <__data_end+0x1>
    1752:	80 93 6e 01 	sts	0x016E, r24	; 0x80016e <__data_end>
    1756:	10 92 73 01 	sts	0x0173, r1	; 0x800173 <_ZL17use_program_space>
    175a:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <_ZL22staccato_rest_duration>
    175e:	0e 94 09 0a 	call	0x1412	; 0x1412 <_ZL8nextNotev>
    1762:	08 95       	ret

00001764 <play>:
    1764:	0e 94 a5 0b 	call	0x174a	; 0x174a <_ZN15OrangutanBuzzer4playEPKc>
    1768:	08 95       	ret

0000176a <delay_us.constprop.0>:
    176a:	81 e0       	ldi	r24, 0x01	; 1
    176c:	90 e0       	ldi	r25, 0x00	; 0
    176e:	6f 93       	push	r22
    1770:	64 e0       	ldi	r22, 0x04	; 4
    1772:	6a 95       	dec	r22
    1774:	f1 f7       	brne	.-4      	; 0x1772 <delay_us.constprop.0+0x8>
    1776:	6f 91       	pop	r22
    1778:	01 97       	sbiw	r24, 0x01	; 1
    177a:	c9 f7       	brne	.-14     	; 0x176e <delay_us.constprop.0+0x4>
    177c:	08 95       	ret

0000177e <_ZN12OrangutanLCD8busyWaitEv>:
    177e:	0f 93       	push	r16
    1780:	1f 93       	push	r17
    1782:	cf 93       	push	r28
    1784:	df 93       	push	r29
    1786:	1a b1       	in	r17, 0x0a	; 10
    1788:	57 98       	cbi	0x0a, 7	; 10
    178a:	5a 98       	cbi	0x0b, 2	; 11
    178c:	28 9a       	sbi	0x05, 0	; 5
    178e:	c0 e0       	ldi	r28, 0x00	; 0
    1790:	d0 e0       	ldi	r29, 0x00	; 0
    1792:	0e 94 b5 0b 	call	0x176a	; 0x176a <delay_us.constprop.0>
    1796:	5c 9a       	sbi	0x0b, 4	; 11
    1798:	0e 94 b5 0b 	call	0x176a	; 0x176a <delay_us.constprop.0>
    179c:	09 b1       	in	r16, 0x09	; 9
    179e:	5c 98       	cbi	0x0b, 4	; 11
    17a0:	0e 94 b5 0b 	call	0x176a	; 0x176a <delay_us.constprop.0>
    17a4:	5c 9a       	sbi	0x0b, 4	; 11
    17a6:	0e 94 b5 0b 	call	0x176a	; 0x176a <delay_us.constprop.0>
    17aa:	5c 98       	cbi	0x0b, 4	; 11
    17ac:	24 96       	adiw	r28, 0x04	; 4
    17ae:	07 ff       	sbrs	r16, 7
    17b0:	10 c0       	rjmp	.+32     	; 0x17d2 <_ZN12OrangutanLCD8busyWaitEv+0x54>
    17b2:	ae 01       	movw	r20, r28
    17b4:	60 e0       	ldi	r22, 0x00	; 0
    17b6:	70 e0       	ldi	r23, 0x00	; 0
    17b8:	80 91 77 01 	lds	r24, 0x0177	; 0x800177 <lcdTimeout>
    17bc:	90 91 78 01 	lds	r25, 0x0178	; 0x800178 <lcdTimeout+0x1>
    17c0:	a0 91 79 01 	lds	r26, 0x0179	; 0x800179 <lcdTimeout+0x2>
    17c4:	b0 91 7a 01 	lds	r27, 0x017A	; 0x80017a <lcdTimeout+0x3>
    17c8:	48 17       	cp	r20, r24
    17ca:	59 07       	cpc	r21, r25
    17cc:	6a 07       	cpc	r22, r26
    17ce:	7b 07       	cpc	r23, r27
    17d0:	00 f3       	brcs	.-64     	; 0x1792 <_ZN12OrangutanLCD8busyWaitEv+0x14>
    17d2:	1a b9       	out	0x0a, r17	; 10
    17d4:	df 91       	pop	r29
    17d6:	cf 91       	pop	r28
    17d8:	1f 91       	pop	r17
    17da:	0f 91       	pop	r16
    17dc:	08 95       	ret

000017de <_ZN12OrangutanLCD8sendDataEh>:
    17de:	95 b1       	in	r25, 0x05	; 5
    17e0:	28 2f       	mov	r18, r24
    17e2:	21 70       	andi	r18, 0x01	; 1
    17e4:	30 e0       	ldi	r19, 0x00	; 0
    17e6:	22 0f       	add	r18, r18
    17e8:	33 1f       	adc	r19, r19
    17ea:	48 2f       	mov	r20, r24
    17ec:	46 70       	andi	r20, 0x06	; 6
    17ee:	68 e0       	ldi	r22, 0x08	; 8
    17f0:	46 9f       	mul	r20, r22
    17f2:	a0 01       	movw	r20, r0
    17f4:	11 24       	eor	r1, r1
    17f6:	24 2b       	or	r18, r20
    17f8:	9d 7c       	andi	r25, 0xCD	; 205
    17fa:	29 2b       	or	r18, r25
    17fc:	25 b9       	out	0x05, r18	; 5
    17fe:	9b b1       	in	r25, 0x0b	; 11
    1800:	88 70       	andi	r24, 0x08	; 8
    1802:	82 95       	swap	r24
    1804:	80 7f       	andi	r24, 0xF0	; 240
    1806:	9f 77       	andi	r25, 0x7F	; 127
    1808:	89 2b       	or	r24, r25
    180a:	8b b9       	out	0x0b, r24	; 11
    180c:	5c 9a       	sbi	0x0b, 4	; 11
    180e:	0e 94 b5 0b 	call	0x176a	; 0x176a <delay_us.constprop.0>
    1812:	5c 98       	cbi	0x0b, 4	; 11
    1814:	0e 94 b5 0b 	call	0x176a	; 0x176a <delay_us.constprop.0>
    1818:	08 95       	ret

0000181a <_ZN12OrangutanLCD4sendEhhh>:
    181a:	a0 e0       	ldi	r26, 0x00	; 0
    181c:	b0 e0       	ldi	r27, 0x00	; 0
    181e:	e3 e1       	ldi	r30, 0x13	; 19
    1820:	fc e0       	ldi	r31, 0x0C	; 12
    1822:	0c 94 55 12 	jmp	0x24aa	; 0x24aa <__prologue_saves__+0x16>
    1826:	c8 2f       	mov	r28, r24
    1828:	d6 2e       	mov	r13, r22
    182a:	e4 2e       	mov	r14, r20
    182c:	80 91 14 07 	lds	r24, 0x0714	; 0x800714 <_ZZN12OrangutanLCD4initEvE11initialized>
    1830:	81 11       	cpse	r24, r1
    1832:	05 c0       	rjmp	.+10     	; 0x183e <_ZN12OrangutanLCD4sendEhhh+0x24>
    1834:	81 e0       	ldi	r24, 0x01	; 1
    1836:	80 93 14 07 	sts	0x0714, r24	; 0x800714 <_ZZN12OrangutanLCD4initEvE11initialized>
    183a:	0e 94 53 0c 	call	0x18a6	; 0x18a6 <_ZN12OrangutanLCD5init2Ev>
    183e:	0e 94 bf 0b 	call	0x177e	; 0x177e <_ZN12OrangutanLCD8busyWaitEv>
    1842:	14 b1       	in	r17, 0x04	; 4
    1844:	d5 b1       	in	r29, 0x05	; 5
    1846:	fa b0       	in	r15, 0x0a	; 10
    1848:	0b b1       	in	r16, 0x0b	; 11
    184a:	28 98       	cbi	0x05, 0	; 5
    184c:	dd 20       	and	r13, r13
    184e:	11 f0       	breq	.+4      	; 0x1854 <_ZN12OrangutanLCD4sendEhhh+0x3a>
    1850:	5a 9a       	sbi	0x0b, 2	; 11
    1852:	01 c0       	rjmp	.+2      	; 0x1856 <_ZN12OrangutanLCD4sendEhhh+0x3c>
    1854:	5a 98       	cbi	0x0b, 2	; 11
    1856:	94 b1       	in	r25, 0x04	; 4
    1858:	92 63       	ori	r25, 0x32	; 50
    185a:	94 b9       	out	0x04, r25	; 4
    185c:	57 9a       	sbi	0x0a, 7	; 10
    185e:	81 e0       	ldi	r24, 0x01	; 1
    1860:	e8 16       	cp	r14, r24
    1862:	29 f0       	breq	.+10     	; 0x186e <_ZN12OrangutanLCD4sendEhhh+0x54>
    1864:	8c 2f       	mov	r24, r28
    1866:	82 95       	swap	r24
    1868:	8f 70       	andi	r24, 0x0F	; 15
    186a:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN12OrangutanLCD8sendDataEh>
    186e:	8c 2f       	mov	r24, r28
    1870:	8f 70       	andi	r24, 0x0F	; 15
    1872:	0e 94 ef 0b 	call	0x17de	; 0x17de <_ZN12OrangutanLCD8sendDataEh>
    1876:	fa b8       	out	0x0a, r15	; 10
    1878:	0b b9       	out	0x0b, r16	; 11
    187a:	14 b9       	out	0x04, r17	; 4
    187c:	d5 b9       	out	0x05, r29	; 5
    187e:	cd b7       	in	r28, 0x3d	; 61
    1880:	de b7       	in	r29, 0x3e	; 62
    1882:	e7 e0       	ldi	r30, 0x07	; 7
    1884:	0c 94 71 12 	jmp	0x24e2	; 0x24e2 <__epilogue_restores__+0x16>

00001888 <_ZN12OrangutanLCD8send_cmdEh>:
    1888:	42 e0       	ldi	r20, 0x02	; 2
    188a:	60 e0       	ldi	r22, 0x00	; 0
    188c:	0e 94 0d 0c 	call	0x181a	; 0x181a <_ZN12OrangutanLCD4sendEhhh>
    1890:	08 95       	ret

00001892 <_ZN12OrangutanLCD9send_dataEh>:
    1892:	42 e0       	ldi	r20, 0x02	; 2
    1894:	61 e0       	ldi	r22, 0x01	; 1
    1896:	0e 94 0d 0c 	call	0x181a	; 0x181a <_ZN12OrangutanLCD4sendEhhh>
    189a:	08 95       	ret

0000189c <_ZN12OrangutanLCD13send_4bit_cmdEh>:
    189c:	41 e0       	ldi	r20, 0x01	; 1
    189e:	60 e0       	ldi	r22, 0x00	; 0
    18a0:	0e 94 0d 0c 	call	0x181a	; 0x181a <_ZN12OrangutanLCD4sendEhhh>
    18a4:	08 95       	ret

000018a6 <_ZN12OrangutanLCD5init2Ev>:
    18a6:	80 e1       	ldi	r24, 0x10	; 16
    18a8:	97 e2       	ldi	r25, 0x27	; 39
    18aa:	a0 e0       	ldi	r26, 0x00	; 0
    18ac:	b0 e0       	ldi	r27, 0x00	; 0
    18ae:	80 93 77 01 	sts	0x0177, r24	; 0x800177 <lcdTimeout>
    18b2:	90 93 78 01 	sts	0x0178, r25	; 0x800178 <lcdTimeout+0x1>
    18b6:	a0 93 79 01 	sts	0x0179, r26	; 0x800179 <lcdTimeout+0x2>
    18ba:	b0 93 7a 01 	sts	0x017A, r27	; 0x80017a <lcdTimeout+0x3>
    18be:	52 9a       	sbi	0x0a, 2	; 10
    18c0:	20 9a       	sbi	0x04, 0	; 4
    18c2:	54 9a       	sbi	0x0a, 4	; 10
    18c4:	8e e1       	ldi	r24, 0x1E	; 30
    18c6:	90 e0       	ldi	r25, 0x00	; 0
    18c8:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
    18cc:	83 e0       	ldi	r24, 0x03	; 3
    18ce:	0e 94 4e 0c 	call	0x189c	; 0x189c <_ZN12OrangutanLCD13send_4bit_cmdEh>
    18d2:	86 e0       	ldi	r24, 0x06	; 6
    18d4:	90 e0       	ldi	r25, 0x00	; 0
    18d6:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
    18da:	83 e0       	ldi	r24, 0x03	; 3
    18dc:	0e 94 4e 0c 	call	0x189c	; 0x189c <_ZN12OrangutanLCD13send_4bit_cmdEh>
    18e0:	82 e0       	ldi	r24, 0x02	; 2
    18e2:	90 e0       	ldi	r25, 0x00	; 0
    18e4:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
    18e8:	83 e0       	ldi	r24, 0x03	; 3
    18ea:	0e 94 4e 0c 	call	0x189c	; 0x189c <_ZN12OrangutanLCD13send_4bit_cmdEh>
    18ee:	82 e0       	ldi	r24, 0x02	; 2
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
    18f6:	82 e0       	ldi	r24, 0x02	; 2
    18f8:	0e 94 4e 0c 	call	0x189c	; 0x189c <_ZN12OrangutanLCD13send_4bit_cmdEh>
    18fc:	82 e0       	ldi	r24, 0x02	; 2
    18fe:	90 e0       	ldi	r25, 0x00	; 0
    1900:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
    1904:	88 e2       	ldi	r24, 0x28	; 40
    1906:	0e 94 44 0c 	call	0x1888	; 0x1888 <_ZN12OrangutanLCD8send_cmdEh>
    190a:	88 e0       	ldi	r24, 0x08	; 8
    190c:	0e 94 44 0c 	call	0x1888	; 0x1888 <_ZN12OrangutanLCD8send_cmdEh>
    1910:	81 e0       	ldi	r24, 0x01	; 1
    1912:	0e 94 44 0c 	call	0x1888	; 0x1888 <_ZN12OrangutanLCD8send_cmdEh>
    1916:	86 e0       	ldi	r24, 0x06	; 6
    1918:	0e 94 44 0c 	call	0x1888	; 0x1888 <_ZN12OrangutanLCD8send_cmdEh>
    191c:	8c e0       	ldi	r24, 0x0C	; 12
    191e:	0e 94 44 0c 	call	0x1888	; 0x1888 <_ZN12OrangutanLCD8send_cmdEh>
    1922:	08 95       	ret

00001924 <_ZN12OrangutanLCD5clearEv>:
    1924:	81 e0       	ldi	r24, 0x01	; 1
    1926:	0e 94 44 0c 	call	0x1888	; 0x1888 <_ZN12OrangutanLCD8send_cmdEh>
    192a:	80 91 7d 01 	lds	r24, 0x017D	; 0x80017d <printf_chars>
    192e:	90 91 7e 01 	lds	r25, 0x017E	; 0x80017e <printf_chars+0x1>
    1932:	89 2b       	or	r24, r25
    1934:	f9 f0       	breq	.+62     	; 0x1974 <_ZN12OrangutanLCD5clearEv+0x50>
    1936:	60 e0       	ldi	r22, 0x00	; 0
    1938:	a0 e2       	ldi	r26, 0x20	; 32
    193a:	26 2f       	mov	r18, r22
    193c:	30 e0       	ldi	r19, 0x00	; 0
    193e:	70 91 0c 01 	lds	r23, 0x010C	; 0x80010c <numLCDCols>
    1942:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <numLCDRows>
    1946:	90 e0       	ldi	r25, 0x00	; 0
    1948:	01 97       	sbiw	r24, 0x01	; 1
    194a:	78 9f       	mul	r23, r24
    194c:	a0 01       	movw	r20, r0
    194e:	79 9f       	mul	r23, r25
    1950:	50 0d       	add	r21, r0
    1952:	11 24       	eor	r1, r1
    1954:	24 17       	cp	r18, r20
    1956:	35 07       	cpc	r19, r21
    1958:	4c f4       	brge	.+18     	; 0x196c <_ZN12OrangutanLCD5clearEv+0x48>
    195a:	e0 91 7d 01 	lds	r30, 0x017D	; 0x80017d <printf_chars>
    195e:	f0 91 7e 01 	lds	r31, 0x017E	; 0x80017e <printf_chars+0x1>
    1962:	e2 0f       	add	r30, r18
    1964:	f3 1f       	adc	r31, r19
    1966:	a0 83       	st	Z, r26
    1968:	6f 5f       	subi	r22, 0xFF	; 255
    196a:	e7 cf       	rjmp	.-50     	; 0x193a <_ZN12OrangutanLCD5clearEv+0x16>
    196c:	10 92 7b 01 	sts	0x017B, r1	; 0x80017b <col>
    1970:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <row>
    1974:	08 95       	ret

00001976 <clear>:
    1976:	0e 94 92 0c 	call	0x1924	; 0x1924 <_ZN12OrangutanLCD5clearEv>
    197a:	08 95       	ret

0000197c <_ZN12OrangutanLCD5printEPKc>:
    197c:	cf 93       	push	r28
    197e:	df 93       	push	r29
    1980:	ec 01       	movw	r28, r24
    1982:	89 91       	ld	r24, Y+
    1984:	88 23       	and	r24, r24
    1986:	19 f0       	breq	.+6      	; 0x198e <_ZN12OrangutanLCD5printEPKc+0x12>
    1988:	0e 94 49 0c 	call	0x1892	; 0x1892 <_ZN12OrangutanLCD9send_dataEh>
    198c:	fa cf       	rjmp	.-12     	; 0x1982 <_ZN12OrangutanLCD5printEPKc+0x6>
    198e:	df 91       	pop	r29
    1990:	cf 91       	pop	r28
    1992:	08 95       	ret

00001994 <print>:
    1994:	0e 94 be 0c 	call	0x197c	; 0x197c <_ZN12OrangutanLCD5printEPKc>
    1998:	08 95       	ret

0000199a <_ZN12OrangutanLCD5printEm>:
    199a:	aa e0       	ldi	r26, 0x0A	; 10
    199c:	b0 e0       	ldi	r27, 0x00	; 0
    199e:	e3 ed       	ldi	r30, 0xD3	; 211
    19a0:	fc e0       	ldi	r31, 0x0C	; 12
    19a2:	0c 94 54 12 	jmp	0x24a8	; 0x24a8 <__prologue_saves__+0x14>
    19a6:	1a e0       	ldi	r17, 0x0A	; 10
    19a8:	5a e0       	ldi	r21, 0x0A	; 10
    19aa:	c5 2e       	mov	r12, r21
    19ac:	d1 2c       	mov	r13, r1
    19ae:	e1 2c       	mov	r14, r1
    19b0:	f1 2c       	mov	r15, r1
    19b2:	06 2f       	mov	r16, r22
    19b4:	a7 01       	movw	r20, r14
    19b6:	96 01       	movw	r18, r12
    19b8:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <__udivmodsi4>
    19bc:	ca 01       	movw	r24, r20
    19be:	b9 01       	movw	r22, r18
    19c0:	11 50       	subi	r17, 0x01	; 1
    19c2:	e1 e0       	ldi	r30, 0x01	; 1
    19c4:	f0 e0       	ldi	r31, 0x00	; 0
    19c6:	ec 0f       	add	r30, r28
    19c8:	fd 1f       	adc	r31, r29
    19ca:	e1 0f       	add	r30, r17
    19cc:	f1 1d       	adc	r31, r1
    19ce:	00 5d       	subi	r16, 0xD0	; 208
    19d0:	2a e0       	ldi	r18, 0x0A	; 10
    19d2:	62 9f       	mul	r22, r18
    19d4:	00 19       	sub	r16, r0
    19d6:	11 24       	eor	r1, r1
    19d8:	00 83       	st	Z, r16
    19da:	61 15       	cp	r22, r1
    19dc:	71 05       	cpc	r23, r1
    19de:	81 05       	cpc	r24, r1
    19e0:	91 05       	cpc	r25, r1
    19e2:	39 f7       	brne	.-50     	; 0x19b2 <_ZN12OrangutanLCD5printEm+0x18>
    19e4:	1a 30       	cpi	r17, 0x0A	; 10
    19e6:	58 f4       	brcc	.+22     	; 0x19fe <_ZN12OrangutanLCD5printEm+0x64>
    19e8:	e1 e0       	ldi	r30, 0x01	; 1
    19ea:	f0 e0       	ldi	r31, 0x00	; 0
    19ec:	ec 0f       	add	r30, r28
    19ee:	fd 1f       	adc	r31, r29
    19f0:	e1 0f       	add	r30, r17
    19f2:	f1 1d       	adc	r31, r1
    19f4:	80 81       	ld	r24, Z
    19f6:	0e 94 49 0c 	call	0x1892	; 0x1892 <_ZN12OrangutanLCD9send_dataEh>
    19fa:	1f 5f       	subi	r17, 0xFF	; 255
    19fc:	f3 cf       	rjmp	.-26     	; 0x19e4 <_ZN12OrangutanLCD5printEm+0x4a>
    19fe:	2a 96       	adiw	r28, 0x0a	; 10
    1a00:	e8 e0       	ldi	r30, 0x08	; 8
    1a02:	0c 94 70 12 	jmp	0x24e0	; 0x24e0 <__epilogue_restores__+0x14>

00001a06 <_ZN12OrangutanLCD5printEl>:
    1a06:	cf 92       	push	r12
    1a08:	df 92       	push	r13
    1a0a:	ef 92       	push	r14
    1a0c:	ff 92       	push	r15
    1a0e:	6b 01       	movw	r12, r22
    1a10:	7c 01       	movw	r14, r24
    1a12:	97 ff       	sbrs	r25, 7
    1a14:	0b c0       	rjmp	.+22     	; 0x1a2c <_ZN12OrangutanLCD5printEl+0x26>
    1a16:	f0 94       	com	r15
    1a18:	e0 94       	com	r14
    1a1a:	d0 94       	com	r13
    1a1c:	c0 94       	com	r12
    1a1e:	c1 1c       	adc	r12, r1
    1a20:	d1 1c       	adc	r13, r1
    1a22:	e1 1c       	adc	r14, r1
    1a24:	f1 1c       	adc	r15, r1
    1a26:	8d e2       	ldi	r24, 0x2D	; 45
    1a28:	0e 94 49 0c 	call	0x1892	; 0x1892 <_ZN12OrangutanLCD9send_dataEh>
    1a2c:	c7 01       	movw	r24, r14
    1a2e:	b6 01       	movw	r22, r12
    1a30:	0e 94 cd 0c 	call	0x199a	; 0x199a <_ZN12OrangutanLCD5printEm>
    1a34:	ff 90       	pop	r15
    1a36:	ef 90       	pop	r14
    1a38:	df 90       	pop	r13
    1a3a:	cf 90       	pop	r12
    1a3c:	08 95       	ret

00001a3e <print_long>:
    1a3e:	0e 94 03 0d 	call	0x1a06	; 0x1a06 <_ZN12OrangutanLCD5printEl>
    1a42:	08 95       	ret

00001a44 <_ZN12OrangutanLCD6gotoXYEhh>:
    1a44:	a5 e0       	ldi	r26, 0x05	; 5
    1a46:	b0 e0       	ldi	r27, 0x00	; 0
    1a48:	e8 e2       	ldi	r30, 0x28	; 40
    1a4a:	fd e0       	ldi	r31, 0x0D	; 13
    1a4c:	0c 94 59 12 	jmp	0x24b2	; 0x24b2 <__prologue_saves__+0x1e>
    1a50:	18 2f       	mov	r17, r24
    1a52:	80 e8       	ldi	r24, 0x80	; 128
    1a54:	89 83       	std	Y+1, r24	; 0x01
    1a56:	80 ec       	ldi	r24, 0xC0	; 192
    1a58:	8a 83       	std	Y+2, r24	; 0x02
    1a5a:	84 e9       	ldi	r24, 0x94	; 148
    1a5c:	8b 83       	std	Y+3, r24	; 0x03
    1a5e:	84 ed       	ldi	r24, 0xD4	; 212
    1a60:	8c 83       	std	Y+4, r24	; 0x04
    1a62:	fe 01       	movw	r30, r28
    1a64:	e6 0f       	add	r30, r22
    1a66:	f1 1d       	adc	r31, r1
    1a68:	81 81       	ldd	r24, Z+1	; 0x01
    1a6a:	81 0f       	add	r24, r17
    1a6c:	6d 83       	std	Y+5, r22	; 0x05
    1a6e:	0e 94 44 0c 	call	0x1888	; 0x1888 <_ZN12OrangutanLCD8send_cmdEh>
    1a72:	10 93 7b 01 	sts	0x017B, r17	; 0x80017b <col>
    1a76:	6d 81       	ldd	r22, Y+5	; 0x05
    1a78:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <row>
    1a7c:	25 96       	adiw	r28, 0x05	; 5
    1a7e:	e3 e0       	ldi	r30, 0x03	; 3
    1a80:	0c 94 75 12 	jmp	0x24ea	; 0x24ea <__epilogue_restores__+0x1e>

00001a84 <lcd_goto_xy>:
    1a84:	0e 94 22 0d 	call	0x1a44	; 0x1a44 <_ZN12OrangutanLCD6gotoXYEhh>
    1a88:	08 95       	ret

00001a8a <_ZN16OrangutanDigital9setOutputEhh>:
    1a8a:	88 30       	cpi	r24, 0x08	; 8
    1a8c:	58 f4       	brcc	.+22     	; 0x1aa4 <_ZN16OrangutanDigital9setOutputEhh+0x1a>
    1a8e:	91 e0       	ldi	r25, 0x01	; 1
    1a90:	01 c0       	rjmp	.+2      	; 0x1a94 <_ZN16OrangutanDigital9setOutputEhh+0xa>
    1a92:	99 0f       	add	r25, r25
    1a94:	8a 95       	dec	r24
    1a96:	ea f7       	brpl	.-6      	; 0x1a92 <_ZN16OrangutanDigital9setOutputEhh+0x8>
    1a98:	89 2f       	mov	r24, r25
    1a9a:	aa e2       	ldi	r26, 0x2A	; 42
    1a9c:	b0 e0       	ldi	r27, 0x00	; 0
    1a9e:	eb e2       	ldi	r30, 0x2B	; 43
    1aa0:	f0 e0       	ldi	r31, 0x00	; 0
    1aa2:	21 c0       	rjmp	.+66     	; 0x1ae6 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1aa4:	8e 30       	cpi	r24, 0x0E	; 14
    1aa6:	60 f4       	brcc	.+24     	; 0x1ac0 <_ZN16OrangutanDigital9setOutputEhh+0x36>
    1aa8:	98 ef       	ldi	r25, 0xF8	; 248
    1aaa:	98 0f       	add	r25, r24
    1aac:	81 e0       	ldi	r24, 0x01	; 1
    1aae:	01 c0       	rjmp	.+2      	; 0x1ab2 <_ZN16OrangutanDigital9setOutputEhh+0x28>
    1ab0:	88 0f       	add	r24, r24
    1ab2:	9a 95       	dec	r25
    1ab4:	ea f7       	brpl	.-6      	; 0x1ab0 <_ZN16OrangutanDigital9setOutputEhh+0x26>
    1ab6:	a4 e2       	ldi	r26, 0x24	; 36
    1ab8:	b0 e0       	ldi	r27, 0x00	; 0
    1aba:	e5 e2       	ldi	r30, 0x25	; 37
    1abc:	f0 e0       	ldi	r31, 0x00	; 0
    1abe:	13 c0       	rjmp	.+38     	; 0x1ae6 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1ac0:	85 31       	cpi	r24, 0x15	; 21
    1ac2:	60 f4       	brcc	.+24     	; 0x1adc <_ZN16OrangutanDigital9setOutputEhh+0x52>
    1ac4:	92 ef       	ldi	r25, 0xF2	; 242
    1ac6:	98 0f       	add	r25, r24
    1ac8:	81 e0       	ldi	r24, 0x01	; 1
    1aca:	01 c0       	rjmp	.+2      	; 0x1ace <_ZN16OrangutanDigital9setOutputEhh+0x44>
    1acc:	88 0f       	add	r24, r24
    1ace:	9a 95       	dec	r25
    1ad0:	ea f7       	brpl	.-6      	; 0x1acc <_ZN16OrangutanDigital9setOutputEhh+0x42>
    1ad2:	a7 e2       	ldi	r26, 0x27	; 39
    1ad4:	b0 e0       	ldi	r27, 0x00	; 0
    1ad6:	e8 e2       	ldi	r30, 0x28	; 40
    1ad8:	f0 e0       	ldi	r31, 0x00	; 0
    1ada:	05 c0       	rjmp	.+10     	; 0x1ae6 <_ZN16OrangutanDigital9setOutputEhh+0x5c>
    1adc:	80 e0       	ldi	r24, 0x00	; 0
    1ade:	a0 e0       	ldi	r26, 0x00	; 0
    1ae0:	b0 e0       	ldi	r27, 0x00	; 0
    1ae2:	e0 e0       	ldi	r30, 0x00	; 0
    1ae4:	f0 e0       	ldi	r31, 0x00	; 0
    1ae6:	6f 3f       	cpi	r22, 0xFF	; 255
    1ae8:	19 f4       	brne	.+6      	; 0x1af0 <_ZN16OrangutanDigital9setOutputEhh+0x66>
    1aea:	90 81       	ld	r25, Z
    1aec:	98 27       	eor	r25, r24
    1aee:	09 c0       	rjmp	.+18     	; 0x1b02 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1af0:	66 23       	and	r22, r22
    1af2:	19 f0       	breq	.+6      	; 0x1afa <_ZN16OrangutanDigital9setOutputEhh+0x70>
    1af4:	90 81       	ld	r25, Z
    1af6:	98 2b       	or	r25, r24
    1af8:	04 c0       	rjmp	.+8      	; 0x1b02 <_ZN16OrangutanDigital9setOutputEhh+0x78>
    1afa:	20 81       	ld	r18, Z
    1afc:	98 2f       	mov	r25, r24
    1afe:	90 95       	com	r25
    1b00:	92 23       	and	r25, r18
    1b02:	90 83       	st	Z, r25
    1b04:	9c 91       	ld	r25, X
    1b06:	98 2b       	or	r25, r24
    1b08:	9c 93       	st	X, r25
    1b0a:	08 95       	ret

00001b0c <_ZN15OrangutanMotors5init2Ev>:
    1b0c:	83 ef       	ldi	r24, 0xF3	; 243
    1b0e:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    1b12:	84 bd       	out	0x24, r24	; 36
    1b14:	82 e0       	ldi	r24, 0x02	; 2
    1b16:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    1b1a:	85 bd       	out	0x25, r24	; 37
    1b1c:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1b20:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    1b24:	18 bc       	out	0x28, r1	; 40
    1b26:	17 bc       	out	0x27, r1	; 39
    1b28:	60 e0       	ldi	r22, 0x00	; 0
    1b2a:	86 e0       	ldi	r24, 0x06	; 6
    1b2c:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <_ZN16OrangutanDigital9setOutputEhh>
    1b30:	60 e0       	ldi	r22, 0x00	; 0
    1b32:	85 e0       	ldi	r24, 0x05	; 5
    1b34:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <_ZN16OrangutanDigital9setOutputEhh>
    1b38:	60 e0       	ldi	r22, 0x00	; 0
    1b3a:	8b e0       	ldi	r24, 0x0B	; 11
    1b3c:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <_ZN16OrangutanDigital9setOutputEhh>
    1b40:	60 e0       	ldi	r22, 0x00	; 0
    1b42:	83 e0       	ldi	r24, 0x03	; 3
    1b44:	0e 94 45 0d 	call	0x1a8a	; 0x1a8a <_ZN16OrangutanDigital9setOutputEhh>
    1b48:	08 95       	ret

00001b4a <_ZN15OrangutanMotors4initEv>:
    1b4a:	80 91 15 07 	lds	r24, 0x0715	; 0x800715 <_ZZN15OrangutanMotors4initEvE11initialized>
    1b4e:	81 11       	cpse	r24, r1
    1b50:	05 c0       	rjmp	.+10     	; 0x1b5c <_ZN15OrangutanMotors4initEv+0x12>
    1b52:	81 e0       	ldi	r24, 0x01	; 1
    1b54:	80 93 15 07 	sts	0x0715, r24	; 0x800715 <_ZZN15OrangutanMotors4initEvE11initialized>
    1b58:	0e 94 86 0d 	call	0x1b0c	; 0x1b0c <_ZN15OrangutanMotors5init2Ev>
    1b5c:	08 95       	ret

00001b5e <_ZN15OrangutanMotors10setM1SpeedEi>:
    1b5e:	cf 93       	push	r28
    1b60:	df 93       	push	r29
    1b62:	ec 01       	movw	r28, r24
    1b64:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <_ZN15OrangutanMotors4initEv>
    1b68:	d7 ff       	sbrs	r29, 7
    1b6a:	05 c0       	rjmp	.+10     	; 0x1b76 <_ZN15OrangutanMotors10setM1SpeedEi+0x18>
    1b6c:	d1 95       	neg	r29
    1b6e:	c1 95       	neg	r28
    1b70:	d1 09       	sbc	r29, r1
    1b72:	81 e0       	ldi	r24, 0x01	; 1
    1b74:	01 c0       	rjmp	.+2      	; 0x1b78 <_ZN15OrangutanMotors10setM1SpeedEi+0x1a>
    1b76:	80 e0       	ldi	r24, 0x00	; 0
    1b78:	cf 3f       	cpi	r28, 0xFF	; 255
    1b7a:	d1 05       	cpc	r29, r1
    1b7c:	19 f0       	breq	.+6      	; 0x1b84 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1b7e:	14 f0       	brlt	.+4      	; 0x1b84 <_ZN15OrangutanMotors10setM1SpeedEi+0x26>
    1b80:	cf ef       	ldi	r28, 0xFF	; 255
    1b82:	d0 e0       	ldi	r29, 0x00	; 0
    1b84:	88 23       	and	r24, r24
    1b86:	19 f0       	breq	.+6      	; 0x1b8e <_ZN15OrangutanMotors10setM1SpeedEi+0x30>
    1b88:	18 bc       	out	0x28, r1	; 40
    1b8a:	c7 bd       	out	0x27, r28	; 39
    1b8c:	02 c0       	rjmp	.+4      	; 0x1b92 <_ZN15OrangutanMotors10setM1SpeedEi+0x34>
    1b8e:	c8 bd       	out	0x28, r28	; 40
    1b90:	17 bc       	out	0x27, r1	; 39
    1b92:	df 91       	pop	r29
    1b94:	cf 91       	pop	r28
    1b96:	08 95       	ret

00001b98 <_ZN15OrangutanMotors10setM2SpeedEi>:
    1b98:	cf 93       	push	r28
    1b9a:	df 93       	push	r29
    1b9c:	ec 01       	movw	r28, r24
    1b9e:	0e 94 a5 0d 	call	0x1b4a	; 0x1b4a <_ZN15OrangutanMotors4initEv>
    1ba2:	d7 ff       	sbrs	r29, 7
    1ba4:	05 c0       	rjmp	.+10     	; 0x1bb0 <_ZN15OrangutanMotors10setM2SpeedEi+0x18>
    1ba6:	d1 95       	neg	r29
    1ba8:	c1 95       	neg	r28
    1baa:	d1 09       	sbc	r29, r1
    1bac:	81 e0       	ldi	r24, 0x01	; 1
    1bae:	01 c0       	rjmp	.+2      	; 0x1bb2 <_ZN15OrangutanMotors10setM2SpeedEi+0x1a>
    1bb0:	80 e0       	ldi	r24, 0x00	; 0
    1bb2:	cf 3f       	cpi	r28, 0xFF	; 255
    1bb4:	d1 05       	cpc	r29, r1
    1bb6:	19 f0       	breq	.+6      	; 0x1bbe <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1bb8:	14 f0       	brlt	.+4      	; 0x1bbe <_ZN15OrangutanMotors10setM2SpeedEi+0x26>
    1bba:	cf ef       	ldi	r28, 0xFF	; 255
    1bbc:	d0 e0       	ldi	r29, 0x00	; 0
    1bbe:	88 23       	and	r24, r24
    1bc0:	29 f0       	breq	.+10     	; 0x1bcc <_ZN15OrangutanMotors10setM2SpeedEi+0x34>
    1bc2:	10 92 b4 00 	sts	0x00B4, r1	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1bc6:	c0 93 b3 00 	sts	0x00B3, r28	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    1bca:	04 c0       	rjmp	.+8      	; 0x1bd4 <_ZN15OrangutanMotors10setM2SpeedEi+0x3c>
    1bcc:	c0 93 b4 00 	sts	0x00B4, r28	; 0x8000b4 <__TEXT_REGION_LENGTH__+0x7e00b4>
    1bd0:	10 92 b3 00 	sts	0x00B3, r1	; 0x8000b3 <__TEXT_REGION_LENGTH__+0x7e00b3>
    1bd4:	df 91       	pop	r29
    1bd6:	cf 91       	pop	r28
    1bd8:	08 95       	ret

00001bda <_ZN15OrangutanMotors9setSpeedsEii>:
    1bda:	cf 93       	push	r28
    1bdc:	df 93       	push	r29
    1bde:	eb 01       	movw	r28, r22
    1be0:	0e 94 af 0d 	call	0x1b5e	; 0x1b5e <_ZN15OrangutanMotors10setM1SpeedEi>
    1be4:	ce 01       	movw	r24, r28
    1be6:	0e 94 cc 0d 	call	0x1b98	; 0x1b98 <_ZN15OrangutanMotors10setM2SpeedEi>
    1bea:	df 91       	pop	r29
    1bec:	cf 91       	pop	r28
    1bee:	08 95       	ret

00001bf0 <set_motors>:
    1bf0:	0e 94 ed 0d 	call	0x1bda	; 0x1bda <_ZN15OrangutanMotors9setSpeedsEii>
    1bf4:	08 95       	ret

00001bf6 <_ZN20OrangutanPushbuttons5init2Ev>:
    1bf6:	84 b1       	in	r24, 0x04	; 4
    1bf8:	8d 7c       	andi	r24, 0xCD	; 205
    1bfa:	84 b9       	out	0x04, r24	; 4
    1bfc:	85 b1       	in	r24, 0x05	; 5
    1bfe:	82 63       	ori	r24, 0x32	; 50
    1c00:	85 b9       	out	0x05, r24	; 5
    1c02:	85 e0       	ldi	r24, 0x05	; 5
    1c04:	90 e0       	ldi	r25, 0x00	; 0
    1c06:	6f 93       	push	r22
    1c08:	64 e0       	ldi	r22, 0x04	; 4
    1c0a:	6a 95       	dec	r22
    1c0c:	f1 f7       	brne	.-4      	; 0x1c0a <_ZN20OrangutanPushbuttons5init2Ev+0x14>
    1c0e:	6f 91       	pop	r22
    1c10:	01 97       	sbiw	r24, 0x01	; 1
    1c12:	c9 f7       	brne	.-14     	; 0x1c06 <_ZN20OrangutanPushbuttons5init2Ev+0x10>
    1c14:	08 95       	ret

00001c16 <_ZN20OrangutanPushbuttons4initEv>:
    1c16:	80 91 16 07 	lds	r24, 0x0716	; 0x800716 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1c1a:	81 11       	cpse	r24, r1
    1c1c:	05 c0       	rjmp	.+10     	; 0x1c28 <_ZN20OrangutanPushbuttons4initEv+0x12>
    1c1e:	81 e0       	ldi	r24, 0x01	; 1
    1c20:	80 93 16 07 	sts	0x0716, r24	; 0x800716 <_ZZN20OrangutanPushbuttons4initEvE11initialized>
    1c24:	0e 94 fb 0d 	call	0x1bf6	; 0x1bf6 <_ZN20OrangutanPushbuttons5init2Ev>
    1c28:	08 95       	ret

00001c2a <_ZN20OrangutanPushbuttons14waitForReleaseEh>:
    1c2a:	cf 93       	push	r28
    1c2c:	c8 2f       	mov	r28, r24
    1c2e:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <_ZN20OrangutanPushbuttons4initEv>
    1c32:	83 b1       	in	r24, 0x03	; 3
    1c34:	8c 23       	and	r24, r28
    1c36:	e9 f3       	breq	.-6      	; 0x1c32 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1c38:	8a e0       	ldi	r24, 0x0A	; 10
    1c3a:	90 e0       	ldi	r25, 0x00	; 0
    1c3c:	0e 94 86 0e 	call	0x1d0c	; 0x1d0c <delay_ms>
    1c40:	83 b1       	in	r24, 0x03	; 3
    1c42:	8c 23       	and	r24, r28
    1c44:	b1 f3       	breq	.-20     	; 0x1c32 <_ZN20OrangutanPushbuttons14waitForReleaseEh+0x8>
    1c46:	83 b1       	in	r24, 0x03	; 3
    1c48:	8c 23       	and	r24, r28
    1c4a:	cf 91       	pop	r28
    1c4c:	08 95       	ret

00001c4e <wait_for_button_release>:
    1c4e:	0e 94 15 0e 	call	0x1c2a	; 0x1c2a <_ZN20OrangutanPushbuttons14waitForReleaseEh>
    1c52:	08 95       	ret

00001c54 <_ZN20OrangutanPushbuttons9isPressedEh>:
    1c54:	a1 e0       	ldi	r26, 0x01	; 1
    1c56:	b0 e0       	ldi	r27, 0x00	; 0
    1c58:	e0 e3       	ldi	r30, 0x30	; 48
    1c5a:	fe e0       	ldi	r31, 0x0E	; 14
    1c5c:	0c 94 5a 12 	jmp	0x24b4	; 0x24b4 <__prologue_saves__+0x20>
    1c60:	89 83       	std	Y+1, r24	; 0x01
    1c62:	0e 94 0b 0e 	call	0x1c16	; 0x1c16 <_ZN20OrangutanPushbuttons4initEv>
    1c66:	93 b1       	in	r25, 0x03	; 3
    1c68:	90 95       	com	r25
    1c6a:	89 81       	ldd	r24, Y+1	; 0x01
    1c6c:	89 23       	and	r24, r25
    1c6e:	21 96       	adiw	r28, 0x01	; 1
    1c70:	e2 e0       	ldi	r30, 0x02	; 2
    1c72:	0c 94 76 12 	jmp	0x24ec	; 0x24ec <__epilogue_restores__+0x20>

00001c76 <button_is_pressed>:
    1c76:	0e 94 2a 0e 	call	0x1c54	; 0x1c54 <_ZN20OrangutanPushbuttons9isPressedEh>
    1c7a:	08 95       	ret

00001c7c <__vector_9>:
    1c7c:	2f 92       	push	r2
    1c7e:	8f 93       	push	r24
    1c80:	9f 93       	push	r25
    1c82:	2f b6       	in	r2, 0x3f	; 63
    1c84:	80 91 86 01 	lds	r24, 0x0186	; 0x800186 <tickCount+0x1>
    1c88:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <tickCount+0x2>
    1c8c:	01 96       	adiw	r24, 0x01	; 1
    1c8e:	80 93 86 01 	sts	0x0186, r24	; 0x800186 <tickCount+0x1>
    1c92:	90 93 87 01 	sts	0x0187, r25	; 0x800187 <tickCount+0x2>
    1c96:	90 e0       	ldi	r25, 0x00	; 0
    1c98:	80 91 88 01 	lds	r24, 0x0188	; 0x800188 <tickCount+0x3>
    1c9c:	89 1f       	adc	r24, r25
    1c9e:	80 93 88 01 	sts	0x0188, r24	; 0x800188 <tickCount+0x3>
    1ca2:	90 91 80 01 	lds	r25, 0x0180	; 0x800180 <us_over_10+0x1>
    1ca6:	9c 5f       	subi	r25, 0xFC	; 252
    1ca8:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <us_over_10+0x1>
    1cac:	80 91 7f 01 	lds	r24, 0x017F	; 0x80017f <us_over_10>
    1cb0:	80 51       	subi	r24, 0x10	; 16
    1cb2:	97 42       	sbci	r25, 0x27	; 39
    1cb4:	c0 f0       	brcs	.+48     	; 0x1ce6 <end>
    1cb6:	90 93 80 01 	sts	0x0180, r25	; 0x800180 <us_over_10+0x1>
    1cba:	80 93 7f 01 	sts	0x017F, r24	; 0x80017f <us_over_10>
    1cbe:	80 91 81 01 	lds	r24, 0x0181	; 0x800181 <msCounter>
    1cc2:	90 91 82 01 	lds	r25, 0x0182	; 0x800182 <msCounter+0x1>
    1cc6:	01 96       	adiw	r24, 0x01	; 1
    1cc8:	80 93 81 01 	sts	0x0181, r24	; 0x800181 <msCounter>
    1ccc:	90 93 82 01 	sts	0x0182, r25	; 0x800182 <msCounter+0x1>
    1cd0:	90 e0       	ldi	r25, 0x00	; 0
    1cd2:	80 91 83 01 	lds	r24, 0x0183	; 0x800183 <msCounter+0x2>
    1cd6:	89 1f       	adc	r24, r25
    1cd8:	80 93 83 01 	sts	0x0183, r24	; 0x800183 <msCounter+0x2>
    1cdc:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <msCounter+0x3>
    1ce0:	89 1f       	adc	r24, r25
    1ce2:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <msCounter+0x3>

00001ce6 <end>:
    1ce6:	2f be       	out	0x3f, r2	; 63
    1ce8:	9f 91       	pop	r25
    1cea:	8f 91       	pop	r24
    1cec:	2f 90       	pop	r2
    1cee:	18 95       	reti

00001cf0 <_ZN13OrangutanTime17delayMillisecondsEj>:
    1cf0:	28 ee       	ldi	r18, 0xE8	; 232
    1cf2:	33 e0       	ldi	r19, 0x03	; 3
    1cf4:	01 97       	sbiw	r24, 0x01	; 1
    1cf6:	48 f0       	brcs	.+18     	; 0x1d0a <_ZN13OrangutanTime17delayMillisecondsEj+0x1a>
    1cf8:	f9 01       	movw	r30, r18
    1cfa:	6f 93       	push	r22
    1cfc:	64 e0       	ldi	r22, 0x04	; 4
    1cfe:	6a 95       	dec	r22
    1d00:	f1 f7       	brne	.-4      	; 0x1cfe <_ZN13OrangutanTime17delayMillisecondsEj+0xe>
    1d02:	6f 91       	pop	r22
    1d04:	31 97       	sbiw	r30, 0x01	; 1
    1d06:	c9 f7       	brne	.-14     	; 0x1cfa <_ZN13OrangutanTime17delayMillisecondsEj+0xa>
    1d08:	f5 cf       	rjmp	.-22     	; 0x1cf4 <_ZN13OrangutanTime17delayMillisecondsEj+0x4>
    1d0a:	08 95       	ret

00001d0c <delay_ms>:
    1d0c:	0e 94 78 0e 	call	0x1cf0	; 0x1cf0 <_ZN13OrangutanTime17delayMillisecondsEj>
    1d10:	08 95       	ret

00001d12 <_ZN13OrangutanTime5init2Ev>:
    1d12:	e0 e7       	ldi	r30, 0x70	; 112
    1d14:	f0 e0       	ldi	r31, 0x00	; 0
    1d16:	80 81       	ld	r24, Z
    1d18:	8e 7f       	andi	r24, 0xFE	; 254
    1d1a:	80 83       	st	Z, r24
    1d1c:	a0 eb       	ldi	r26, 0xB0	; 176
    1d1e:	b0 e0       	ldi	r27, 0x00	; 0
    1d20:	8c 91       	ld	r24, X
    1d22:	83 60       	ori	r24, 0x03	; 3
    1d24:	8c 93       	st	X, r24
    1d26:	a1 eb       	ldi	r26, 0xB1	; 177
    1d28:	b0 e0       	ldi	r27, 0x00	; 0
    1d2a:	8c 91       	ld	r24, X
    1d2c:	80 7f       	andi	r24, 0xF0	; 240
    1d2e:	8c 93       	st	X, r24
    1d30:	8c 91       	ld	r24, X
    1d32:	82 60       	ori	r24, 0x02	; 2
    1d34:	8c 93       	st	X, r24
    1d36:	b8 9a       	sbi	0x17, 0	; 23
    1d38:	80 81       	ld	r24, Z
    1d3a:	81 60       	ori	r24, 0x01	; 1
    1d3c:	80 83       	st	Z, r24
    1d3e:	78 94       	sei
    1d40:	08 95       	ret

00001d42 <_ZN13OrangutanTime4initEv>:
    1d42:	80 91 17 07 	lds	r24, 0x0717	; 0x800717 <_ZZN13OrangutanTime4initEvE11initialized>
    1d46:	81 11       	cpse	r24, r1
    1d48:	05 c0       	rjmp	.+10     	; 0x1d54 <_ZN13OrangutanTime4initEv+0x12>
    1d4a:	81 e0       	ldi	r24, 0x01	; 1
    1d4c:	80 93 17 07 	sts	0x0717, r24	; 0x800717 <_ZZN13OrangutanTime4initEvE11initialized>
    1d50:	0e 94 89 0e 	call	0x1d12	; 0x1d12 <_ZN13OrangutanTime5init2Ev>
    1d54:	08 95       	ret

00001d56 <_ZN13OrangutanTime5resetEv>:
    1d56:	0e 94 a1 0e 	call	0x1d42	; 0x1d42 <_ZN13OrangutanTime4initEv>
    1d5a:	e0 e7       	ldi	r30, 0x70	; 112
    1d5c:	f0 e0       	ldi	r31, 0x00	; 0
    1d5e:	80 81       	ld	r24, Z
    1d60:	8e 7f       	andi	r24, 0xFE	; 254
    1d62:	80 83       	st	Z, r24
    1d64:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <msCounter>
    1d68:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <msCounter+0x1>
    1d6c:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <msCounter+0x2>
    1d70:	10 92 84 01 	sts	0x0184, r1	; 0x800184 <msCounter+0x3>
    1d74:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <us_over_10+0x1>
    1d78:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <us_over_10>
    1d7c:	80 81       	ld	r24, Z
    1d7e:	81 60       	ori	r24, 0x01	; 1
    1d80:	80 83       	st	Z, r24
    1d82:	08 95       	ret

00001d84 <read_line_sensors>:
    1d84:	46 2f       	mov	r20, r22
    1d86:	bc 01       	movw	r22, r24
    1d88:	89 e8       	ldi	r24, 0x89	; 137
    1d8a:	91 e0       	ldi	r25, 0x01	; 1
    1d8c:	0e 94 45 11 	call	0x228a	; 0x228a <_ZN16PololuQTRSensors4readEPjh>
    1d90:	08 95       	ret

00001d92 <_ZN9Pololu3pi4initEjh>:
    1d92:	0f 93       	push	r16
    1d94:	cf 93       	push	r28
    1d96:	df 93       	push	r29
    1d98:	00 d0       	rcall	.+0      	; 0x1d9a <_ZN9Pololu3pi4initEjh+0x8>
    1d9a:	00 d0       	rcall	.+0      	; 0x1d9c <_ZN9Pololu3pi4initEjh+0xa>
    1d9c:	1f 92       	push	r1
    1d9e:	cd b7       	in	r28, 0x3d	; 61
    1da0:	de b7       	in	r29, 0x3e	; 62
    1da2:	9c 01       	movw	r18, r24
    1da4:	85 e0       	ldi	r24, 0x05	; 5
    1da6:	ec e2       	ldi	r30, 0x2C	; 44
    1da8:	f1 e0       	ldi	r31, 0x01	; 1
    1daa:	de 01       	movw	r26, r28
    1dac:	11 96       	adiw	r26, 0x01	; 1
    1dae:	01 90       	ld	r0, Z+
    1db0:	0d 92       	st	X+, r0
    1db2:	8a 95       	dec	r24
    1db4:	e1 f7       	brne	.-8      	; 0x1dae <_ZN9Pololu3pi4initEjh+0x1c>
    1db6:	66 23       	and	r22, r22
    1db8:	11 f0       	breq	.+4      	; 0x1dbe <_ZN9Pololu3pi4initEjh+0x2c>
    1dba:	0f ef       	ldi	r16, 0xFF	; 255
    1dbc:	01 c0       	rjmp	.+2      	; 0x1dc0 <_ZN9Pololu3pi4initEjh+0x2e>
    1dbe:	03 e1       	ldi	r16, 0x13	; 19
    1dc0:	45 e0       	ldi	r20, 0x05	; 5
    1dc2:	be 01       	movw	r22, r28
    1dc4:	6f 5f       	subi	r22, 0xFF	; 255
    1dc6:	7f 4f       	sbci	r23, 0xFF	; 255
    1dc8:	89 e8       	ldi	r24, 0x89	; 137
    1dca:	91 e0       	ldi	r25, 0x01	; 1
    1dcc:	0e 94 9b 0f 	call	0x1f36	; 0x1f36 <_ZN18PololuQTRSensorsRC4initEPhhjh>
    1dd0:	89 e8       	ldi	r24, 0x89	; 137
    1dd2:	91 e0       	ldi	r25, 0x01	; 1
    1dd4:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <_ZN16PololuQTRSensors11emittersOffEv>
    1dd8:	0e 94 ab 0e 	call	0x1d56	; 0x1d56 <_ZN13OrangutanTime5resetEv>
    1ddc:	0f 90       	pop	r0
    1dde:	0f 90       	pop	r0
    1de0:	0f 90       	pop	r0
    1de2:	0f 90       	pop	r0
    1de4:	0f 90       	pop	r0
    1de6:	df 91       	pop	r29
    1de8:	cf 91       	pop	r28
    1dea:	0f 91       	pop	r16
    1dec:	08 95       	ret

00001dee <pololu_3pi_init>:
    1dee:	60 e0       	ldi	r22, 0x00	; 0
    1df0:	0e 94 c9 0e 	call	0x1d92	; 0x1d92 <_ZN9Pololu3pi4initEjh>
    1df4:	08 95       	ret

00001df6 <_GLOBAL__sub_D_pololu_3pi_init>:
    1df6:	89 e8       	ldi	r24, 0x89	; 137
    1df8:	91 e0       	ldi	r25, 0x01	; 1
    1dfa:	0e 94 a2 11 	call	0x2344	; 0x2344 <_ZN16PololuQTRSensorsD1Ev>
    1dfe:	08 95       	ret

00001e00 <delay_us>:
    1e00:	6f 93       	push	r22
    1e02:	64 e0       	ldi	r22, 0x04	; 4
    1e04:	6a 95       	dec	r22
    1e06:	f1 f7       	brne	.-4      	; 0x1e04 <delay_us+0x4>
    1e08:	6f 91       	pop	r22
    1e0a:	01 97       	sbiw	r24, 0x01	; 1
    1e0c:	c9 f7       	brne	.-14     	; 0x1e00 <delay_us>
    1e0e:	08 95       	ret

00001e10 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>:
    1e10:	fc 01       	movw	r30, r24
    1e12:	11 82       	std	Z+1, r1	; 0x01
    1e14:	10 82       	st	Z, r1
    1e16:	13 82       	std	Z+3, r1	; 0x03
    1e18:	12 82       	std	Z+2, r1	; 0x02
    1e1a:	15 82       	std	Z+5, r1	; 0x05
    1e1c:	14 82       	std	Z+4, r1	; 0x04
    1e1e:	16 82       	std	Z+6, r1	; 0x06
    1e20:	68 30       	cpi	r22, 0x08	; 8
    1e22:	68 f4       	brcc	.+26     	; 0x1e3e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x2e>
    1e24:	89 e2       	ldi	r24, 0x29	; 41
    1e26:	90 e0       	ldi	r25, 0x00	; 0
    1e28:	91 83       	std	Z+1, r25	; 0x01
    1e2a:	80 83       	st	Z, r24
    1e2c:	8b e2       	ldi	r24, 0x2B	; 43
    1e2e:	90 e0       	ldi	r25, 0x00	; 0
    1e30:	93 83       	std	Z+3, r25	; 0x03
    1e32:	82 83       	std	Z+2, r24	; 0x02
    1e34:	8a e2       	ldi	r24, 0x2A	; 42
    1e36:	90 e0       	ldi	r25, 0x00	; 0
    1e38:	95 83       	std	Z+5, r25	; 0x05
    1e3a:	84 83       	std	Z+4, r24	; 0x04
    1e3c:	1f c0       	rjmp	.+62     	; 0x1e7c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1e3e:	6e 30       	cpi	r22, 0x0E	; 14
    1e40:	70 f4       	brcc	.+28     	; 0x1e5e <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x4e>
    1e42:	83 e2       	ldi	r24, 0x23	; 35
    1e44:	90 e0       	ldi	r25, 0x00	; 0
    1e46:	91 83       	std	Z+1, r25	; 0x01
    1e48:	80 83       	st	Z, r24
    1e4a:	85 e2       	ldi	r24, 0x25	; 37
    1e4c:	90 e0       	ldi	r25, 0x00	; 0
    1e4e:	93 83       	std	Z+3, r25	; 0x03
    1e50:	82 83       	std	Z+2, r24	; 0x02
    1e52:	84 e2       	ldi	r24, 0x24	; 36
    1e54:	90 e0       	ldi	r25, 0x00	; 0
    1e56:	95 83       	std	Z+5, r25	; 0x05
    1e58:	84 83       	std	Z+4, r24	; 0x04
    1e5a:	68 50       	subi	r22, 0x08	; 8
    1e5c:	0f c0       	rjmp	.+30     	; 0x1e7c <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x6c>
    1e5e:	65 31       	cpi	r22, 0x15	; 21
    1e60:	98 f4       	brcc	.+38     	; 0x1e88 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x78>
    1e62:	86 e2       	ldi	r24, 0x26	; 38
    1e64:	90 e0       	ldi	r25, 0x00	; 0
    1e66:	91 83       	std	Z+1, r25	; 0x01
    1e68:	80 83       	st	Z, r24
    1e6a:	88 e2       	ldi	r24, 0x28	; 40
    1e6c:	90 e0       	ldi	r25, 0x00	; 0
    1e6e:	93 83       	std	Z+3, r25	; 0x03
    1e70:	82 83       	std	Z+2, r24	; 0x02
    1e72:	87 e2       	ldi	r24, 0x27	; 39
    1e74:	90 e0       	ldi	r25, 0x00	; 0
    1e76:	95 83       	std	Z+5, r25	; 0x05
    1e78:	84 83       	std	Z+4, r24	; 0x04
    1e7a:	6e 50       	subi	r22, 0x0E	; 14
    1e7c:	81 e0       	ldi	r24, 0x01	; 1
    1e7e:	01 c0       	rjmp	.+2      	; 0x1e82 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x72>
    1e80:	88 0f       	add	r24, r24
    1e82:	6a 95       	dec	r22
    1e84:	ea f7       	brpl	.-6      	; 0x1e80 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh+0x70>
    1e86:	86 83       	std	Z+6, r24	; 0x06
    1e88:	08 95       	ret

00001e8a <_ZN16PololuQTRSensors4initEhhh>:
    1e8a:	a7 e0       	ldi	r26, 0x07	; 7
    1e8c:	b0 e0       	ldi	r27, 0x00	; 0
    1e8e:	eb e4       	ldi	r30, 0x4B	; 75
    1e90:	ff e0       	ldi	r31, 0x0F	; 15
    1e92:	0c 94 58 12 	jmp	0x24b0	; 0x24b0 <__prologue_saves__+0x1c>
    1e96:	8c 01       	movw	r16, r24
    1e98:	fc 01       	movw	r30, r24
    1e9a:	11 82       	std	Z+1, r1	; 0x01
    1e9c:	10 82       	st	Z, r1
    1e9e:	13 82       	std	Z+3, r1	; 0x03
    1ea0:	12 82       	std	Z+2, r1	; 0x02
    1ea2:	15 82       	std	Z+5, r1	; 0x05
    1ea4:	14 82       	std	Z+4, r1	; 0x04
    1ea6:	17 82       	std	Z+7, r1	; 0x07
    1ea8:	16 82       	std	Z+6, r1	; 0x06
    1eaa:	61 31       	cpi	r22, 0x11	; 17
    1eac:	18 f0       	brcs	.+6      	; 0x1eb4 <_ZN16PololuQTRSensors4initEhhh+0x2a>
    1eae:	80 e1       	ldi	r24, 0x10	; 16
    1eb0:	80 87       	std	Z+8, r24	; 0x08
    1eb2:	02 c0       	rjmp	.+4      	; 0x1eb8 <_ZN16PololuQTRSensors4initEhhh+0x2e>
    1eb4:	fc 01       	movw	r30, r24
    1eb6:	60 87       	std	Z+8, r22	; 0x08
    1eb8:	f8 01       	movw	r30, r16
    1eba:	20 8b       	std	Z+16, r18	; 0x10
    1ebc:	64 2f       	mov	r22, r20
    1ebe:	ce 01       	movw	r24, r28
    1ec0:	01 96       	adiw	r24, 0x01	; 1
    1ec2:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1ec6:	8f 81       	ldd	r24, Y+7	; 0x07
    1ec8:	f8 01       	movw	r30, r16
    1eca:	81 87       	std	Z+9, r24	; 0x09
    1ecc:	8b 81       	ldd	r24, Y+3	; 0x03
    1ece:	9c 81       	ldd	r25, Y+4	; 0x04
    1ed0:	93 87       	std	Z+11, r25	; 0x0b
    1ed2:	82 87       	std	Z+10, r24	; 0x0a
    1ed4:	8d 81       	ldd	r24, Y+5	; 0x05
    1ed6:	9e 81       	ldd	r25, Y+6	; 0x06
    1ed8:	95 87       	std	Z+13, r25	; 0x0d
    1eda:	84 87       	std	Z+12, r24	; 0x0c
    1edc:	27 96       	adiw	r28, 0x07	; 7
    1ede:	e4 e0       	ldi	r30, 0x04	; 4
    1ee0:	0c 94 74 12 	jmp	0x24e8	; 0x24e8 <__epilogue_restores__+0x1c>

00001ee4 <_ZN16PololuQTRSensors11emittersOffEv>:
    1ee4:	fc 01       	movw	r30, r24
    1ee6:	a4 85       	ldd	r26, Z+12	; 0x0c
    1ee8:	b5 85       	ldd	r27, Z+13	; 0x0d
    1eea:	10 97       	sbiw	r26, 0x00	; 0
    1eec:	79 f0       	breq	.+30     	; 0x1f0c <_ZN16PololuQTRSensors11emittersOffEv+0x28>
    1eee:	8c 91       	ld	r24, X
    1ef0:	91 85       	ldd	r25, Z+9	; 0x09
    1ef2:	89 2b       	or	r24, r25
    1ef4:	8c 93       	st	X, r24
    1ef6:	a2 85       	ldd	r26, Z+10	; 0x0a
    1ef8:	b3 85       	ldd	r27, Z+11	; 0x0b
    1efa:	9c 91       	ld	r25, X
    1efc:	81 85       	ldd	r24, Z+9	; 0x09
    1efe:	80 95       	com	r24
    1f00:	89 23       	and	r24, r25
    1f02:	8c 93       	st	X, r24
    1f04:	88 ec       	ldi	r24, 0xC8	; 200
    1f06:	90 e0       	ldi	r25, 0x00	; 0
    1f08:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <delay_us>
    1f0c:	08 95       	ret

00001f0e <_ZN16PololuQTRSensors10emittersOnEv>:
    1f0e:	fc 01       	movw	r30, r24
    1f10:	a4 85       	ldd	r26, Z+12	; 0x0c
    1f12:	b5 85       	ldd	r27, Z+13	; 0x0d
    1f14:	10 97       	sbiw	r26, 0x00	; 0
    1f16:	71 f0       	breq	.+28     	; 0x1f34 <_ZN16PololuQTRSensors10emittersOnEv+0x26>
    1f18:	8c 91       	ld	r24, X
    1f1a:	91 85       	ldd	r25, Z+9	; 0x09
    1f1c:	89 2b       	or	r24, r25
    1f1e:	8c 93       	st	X, r24
    1f20:	a2 85       	ldd	r26, Z+10	; 0x0a
    1f22:	b3 85       	ldd	r27, Z+11	; 0x0b
    1f24:	8c 91       	ld	r24, X
    1f26:	91 85       	ldd	r25, Z+9	; 0x09
    1f28:	89 2b       	or	r24, r25
    1f2a:	8c 93       	st	X, r24
    1f2c:	88 ec       	ldi	r24, 0xC8	; 200
    1f2e:	90 e0       	ldi	r25, 0x00	; 0
    1f30:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <delay_us>
    1f34:	08 95       	ret

00001f36 <_ZN18PololuQTRSensorsRC4initEPhhjh>:
    1f36:	a7 e0       	ldi	r26, 0x07	; 7
    1f38:	b0 e0       	ldi	r27, 0x00	; 0
    1f3a:	e1 ea       	ldi	r30, 0xA1	; 161
    1f3c:	ff e0       	ldi	r31, 0x0F	; 15
    1f3e:	0c 94 4d 12 	jmp	0x249a	; 0x249a <__prologue_saves__+0x6>
    1f42:	7c 01       	movw	r14, r24
    1f44:	4b 01       	movw	r8, r22
    1f46:	64 2f       	mov	r22, r20
    1f48:	39 01       	movw	r6, r18
    1f4a:	40 2f       	mov	r20, r16
    1f4c:	20 e0       	ldi	r18, 0x00	; 0
    1f4e:	0e 94 45 0f 	call	0x1e8a	; 0x1e8a <_ZN16PololuQTRSensors4initEhhh>
    1f52:	87 01       	movw	r16, r14
    1f54:	0f 5b       	subi	r16, 0xBF	; 191
    1f56:	1f 4f       	sbci	r17, 0xFF	; 255
    1f58:	f8 01       	movw	r30, r16
    1f5a:	10 82       	st	Z, r1
    1f5c:	67 01       	movw	r12, r14
    1f5e:	f2 e4       	ldi	r31, 0x42	; 66
    1f60:	cf 0e       	add	r12, r31
    1f62:	d1 1c       	adc	r13, r1
    1f64:	f6 01       	movw	r30, r12
    1f66:	10 82       	st	Z, r1
    1f68:	57 01       	movw	r10, r14
    1f6a:	f3 e4       	ldi	r31, 0x43	; 67
    1f6c:	af 0e       	add	r10, r31
    1f6e:	b1 1c       	adc	r11, r1
    1f70:	f5 01       	movw	r30, r10
    1f72:	10 82       	st	Z, r1
    1f74:	f7 01       	movw	r30, r14
    1f76:	77 86       	std	Z+15, r7	; 0x0f
    1f78:	66 86       	std	Z+14, r6	; 0x0e
    1f7a:	51 2c       	mov	r5, r1
    1f7c:	f7 01       	movw	r30, r14
    1f7e:	80 85       	ldd	r24, Z+8	; 0x08
    1f80:	58 16       	cp	r5, r24
    1f82:	50 f5       	brcc	.+84     	; 0x1fd8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0xa2>
    1f84:	65 2c       	mov	r6, r5
    1f86:	71 2c       	mov	r7, r1
    1f88:	f4 01       	movw	r30, r8
    1f8a:	e6 0d       	add	r30, r6
    1f8c:	f7 1d       	adc	r31, r7
    1f8e:	60 81       	ld	r22, Z
    1f90:	ce 01       	movw	r24, r28
    1f92:	01 96       	adiw	r24, 0x01	; 1
    1f94:	0e 94 08 0f 	call	0x1e10	; 0x1e10 <_ZN16OrangutanDigital14getIORegistersEP8IOStructh>
    1f98:	2f 81       	ldd	r18, Y+7	; 0x07
    1f9a:	f7 01       	movw	r30, r14
    1f9c:	e6 0d       	add	r30, r6
    1f9e:	f7 1d       	adc	r31, r7
    1fa0:	21 8b       	std	Z+17, r18	; 0x11
    1fa2:	89 81       	ldd	r24, Y+1	; 0x01
    1fa4:	9a 81       	ldd	r25, Y+2	; 0x02
    1fa6:	f3 01       	movw	r30, r6
    1fa8:	ee 0f       	add	r30, r30
    1faa:	ff 1f       	adc	r31, r31
    1fac:	ee 0d       	add	r30, r14
    1fae:	ff 1d       	adc	r31, r15
    1fb0:	92 a3       	std	Z+34, r25	; 0x22
    1fb2:	81 a3       	std	Z+33, r24	; 0x21
    1fb4:	83 32       	cpi	r24, 0x23	; 35
    1fb6:	91 05       	cpc	r25, r1
    1fb8:	11 f4       	brne	.+4      	; 0x1fbe <_ZN18PololuQTRSensorsRC4initEPhhjh+0x88>
    1fba:	f8 01       	movw	r30, r16
    1fbc:	08 c0       	rjmp	.+16     	; 0x1fce <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1fbe:	86 32       	cpi	r24, 0x26	; 38
    1fc0:	91 05       	cpc	r25, r1
    1fc2:	11 f4       	brne	.+4      	; 0x1fc8 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x92>
    1fc4:	f6 01       	movw	r30, r12
    1fc6:	03 c0       	rjmp	.+6      	; 0x1fce <_ZN18PololuQTRSensorsRC4initEPhhjh+0x98>
    1fc8:	89 97       	sbiw	r24, 0x29	; 41
    1fca:	21 f4       	brne	.+8      	; 0x1fd4 <_ZN18PololuQTRSensorsRC4initEPhhjh+0x9e>
    1fcc:	f5 01       	movw	r30, r10
    1fce:	80 81       	ld	r24, Z
    1fd0:	82 2b       	or	r24, r18
    1fd2:	80 83       	st	Z, r24
    1fd4:	53 94       	inc	r5
    1fd6:	d2 cf       	rjmp	.-92     	; 0x1f7c <_ZN18PololuQTRSensorsRC4initEPhhjh+0x46>
    1fd8:	27 96       	adiw	r28, 0x07	; 7
    1fda:	ef e0       	ldi	r30, 0x0F	; 15
    1fdc:	0c 94 69 12 	jmp	0x24d2	; 0x24d2 <__epilogue_restores__+0x6>

00001fe0 <_ZN18PololuQTRSensorsRC11readPrivateEPj>:
    1fe0:	a0 e0       	ldi	r26, 0x00	; 0
    1fe2:	b0 e0       	ldi	r27, 0x00	; 0
    1fe4:	e6 ef       	ldi	r30, 0xF6	; 246
    1fe6:	ff e0       	ldi	r31, 0x0F	; 15
    1fe8:	0c 94 4f 12 	jmp	0x249e	; 0x249e <__prologue_saves__+0xa>
    1fec:	ec 01       	movw	r28, r24
    1fee:	5b 01       	movw	r10, r22
    1ff0:	6c 01       	movw	r12, r24
    1ff2:	81 e4       	ldi	r24, 0x41	; 65
    1ff4:	c8 0e       	add	r12, r24
    1ff6:	d1 1c       	adc	r13, r1
    1ff8:	f6 01       	movw	r30, r12
    1ffa:	80 80       	ld	r8, Z
    1ffc:	7e 01       	movw	r14, r28
    1ffe:	f2 e4       	ldi	r31, 0x42	; 66
    2000:	ef 0e       	add	r14, r31
    2002:	f1 1c       	adc	r15, r1
    2004:	f7 01       	movw	r30, r14
    2006:	70 80       	ld	r7, Z
    2008:	8e 01       	movw	r16, r28
    200a:	0d 5b       	subi	r16, 0xBD	; 189
    200c:	1f 4f       	sbci	r17, 0xFF	; 255
    200e:	f8 01       	movw	r30, r16
    2010:	90 80       	ld	r9, Z
    2012:	80 e0       	ldi	r24, 0x00	; 0
    2014:	98 85       	ldd	r25, Y+8	; 0x08
    2016:	89 17       	cp	r24, r25
    2018:	48 f4       	brcc	.+18     	; 0x202c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x4c>
    201a:	f5 01       	movw	r30, r10
    201c:	e8 0f       	add	r30, r24
    201e:	f1 1d       	adc	r31, r1
    2020:	e8 0f       	add	r30, r24
    2022:	f1 1d       	adc	r31, r1
    2024:	11 82       	std	Z+1, r1	; 0x01
    2026:	10 82       	st	Z, r1
    2028:	8f 5f       	subi	r24, 0xFF	; 255
    202a:	f4 cf       	rjmp	.-24     	; 0x2014 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x34>
    202c:	84 b1       	in	r24, 0x04	; 4
    202e:	f6 01       	movw	r30, r12
    2030:	90 81       	ld	r25, Z
    2032:	89 2b       	or	r24, r25
    2034:	84 b9       	out	0x04, r24	; 4
    2036:	87 b1       	in	r24, 0x07	; 7
    2038:	f7 01       	movw	r30, r14
    203a:	90 81       	ld	r25, Z
    203c:	89 2b       	or	r24, r25
    203e:	87 b9       	out	0x07, r24	; 7
    2040:	8a b1       	in	r24, 0x0a	; 10
    2042:	f8 01       	movw	r30, r16
    2044:	90 81       	ld	r25, Z
    2046:	89 2b       	or	r24, r25
    2048:	8a b9       	out	0x0a, r24	; 10
    204a:	85 b1       	in	r24, 0x05	; 5
    204c:	f6 01       	movw	r30, r12
    204e:	90 81       	ld	r25, Z
    2050:	89 2b       	or	r24, r25
    2052:	85 b9       	out	0x05, r24	; 5
    2054:	88 b1       	in	r24, 0x08	; 8
    2056:	f7 01       	movw	r30, r14
    2058:	90 81       	ld	r25, Z
    205a:	89 2b       	or	r24, r25
    205c:	88 b9       	out	0x08, r24	; 8
    205e:	8b b1       	in	r24, 0x0b	; 11
    2060:	f8 01       	movw	r30, r16
    2062:	90 81       	ld	r25, Z
    2064:	89 2b       	or	r24, r25
    2066:	8b b9       	out	0x0b, r24	; 11
    2068:	8a e0       	ldi	r24, 0x0A	; 10
    206a:	90 e0       	ldi	r25, 0x00	; 0
    206c:	0e 94 00 0f 	call	0x1e00	; 0x1e00 <delay_us>
    2070:	94 b1       	in	r25, 0x04	; 4
    2072:	f6 01       	movw	r30, r12
    2074:	80 81       	ld	r24, Z
    2076:	80 95       	com	r24
    2078:	89 23       	and	r24, r25
    207a:	84 b9       	out	0x04, r24	; 4
    207c:	97 b1       	in	r25, 0x07	; 7
    207e:	f7 01       	movw	r30, r14
    2080:	80 81       	ld	r24, Z
    2082:	80 95       	com	r24
    2084:	89 23       	and	r24, r25
    2086:	87 b9       	out	0x07, r24	; 7
    2088:	9a b1       	in	r25, 0x0a	; 10
    208a:	f8 01       	movw	r30, r16
    208c:	80 81       	ld	r24, Z
    208e:	80 95       	com	r24
    2090:	89 23       	and	r24, r25
    2092:	8a b9       	out	0x0a, r24	; 10
    2094:	95 b1       	in	r25, 0x05	; 5
    2096:	f6 01       	movw	r30, r12
    2098:	80 81       	ld	r24, Z
    209a:	80 95       	com	r24
    209c:	89 23       	and	r24, r25
    209e:	85 b9       	out	0x05, r24	; 5
    20a0:	98 b1       	in	r25, 0x08	; 8
    20a2:	f7 01       	movw	r30, r14
    20a4:	80 81       	ld	r24, Z
    20a6:	80 95       	com	r24
    20a8:	89 23       	and	r24, r25
    20aa:	88 b9       	out	0x08, r24	; 8
    20ac:	9b b1       	in	r25, 0x0b	; 11
    20ae:	f8 01       	movw	r30, r16
    20b0:	80 81       	ld	r24, Z
    20b2:	80 95       	com	r24
    20b4:	89 23       	and	r24, r25
    20b6:	8b b9       	out	0x0b, r24	; 11
    20b8:	e0 90 b0 00 	lds	r14, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    20bc:	d0 90 b1 00 	lds	r13, 0x00B1	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    20c0:	80 91 b0 00 	lds	r24, 0x00B0	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    20c4:	83 60       	ori	r24, 0x03	; 3
    20c6:	80 93 b0 00 	sts	0x00B0, r24	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    20ca:	82 e0       	ldi	r24, 0x02	; 2
    20cc:	80 93 b1 00 	sts	0x00B1, r24	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    20d0:	40 91 b2 00 	lds	r20, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    20d4:	80 e0       	ldi	r24, 0x00	; 0
    20d6:	90 e0       	ldi	r25, 0x00	; 0
    20d8:	2e 85       	ldd	r18, Y+14	; 0x0e
    20da:	3f 85       	ldd	r19, Y+15	; 0x0f
    20dc:	82 17       	cp	r24, r18
    20de:	93 07       	cpc	r25, r19
    20e0:	20 f5       	brcc	.+72     	; 0x212a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x14a>
    20e2:	c0 90 b2 00 	lds	r12, 0x00B2	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7e00b2>
    20e6:	2c 2d       	mov	r18, r12
    20e8:	24 1b       	sub	r18, r20
    20ea:	82 0f       	add	r24, r18
    20ec:	91 1d       	adc	r25, r1
    20ee:	03 b1       	in	r16, 0x03	; 3
    20f0:	08 11       	cpse	r16, r8
    20f2:	32 c0       	rjmp	.+100    	; 0x2158 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    20f4:	f6 b0       	in	r15, 0x06	; 6
    20f6:	f7 10       	cpse	r15, r7
    20f8:	2f c0       	rjmp	.+94     	; 0x2158 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    20fa:	29 b1       	in	r18, 0x09	; 9
    20fc:	29 11       	cpse	r18, r9
    20fe:	2c c0       	rjmp	.+88     	; 0x2158 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x178>
    2100:	10 c0       	rjmp	.+32     	; 0x2122 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x142>
    2102:	21 2f       	mov	r18, r17
    2104:	30 e0       	ldi	r19, 0x00	; 0
    2106:	a9 01       	movw	r20, r18
    2108:	44 0f       	add	r20, r20
    210a:	55 1f       	adc	r21, r21
    210c:	f5 01       	movw	r30, r10
    210e:	e4 0f       	add	r30, r20
    2110:	f5 1f       	adc	r31, r21
    2112:	60 81       	ld	r22, Z
    2114:	71 81       	ldd	r23, Z+1	; 0x01
    2116:	67 2b       	or	r22, r23
    2118:	21 f1       	breq	.+72     	; 0x2162 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x182>
    211a:	1f 5f       	subi	r17, 0xFF	; 255
    211c:	28 85       	ldd	r18, Y+8	; 0x08
    211e:	12 17       	cp	r17, r18
    2120:	80 f3       	brcs	.-32     	; 0x2102 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x122>
    2122:	7f 2c       	mov	r7, r15
    2124:	80 2e       	mov	r8, r16
    2126:	4c 2d       	mov	r20, r12
    2128:	d7 cf       	rjmp	.-82     	; 0x20d8 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0xf8>
    212a:	e0 92 b0 00 	sts	0x00B0, r14	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7e00b0>
    212e:	d0 92 b1 00 	sts	0x00B1, r13	; 0x8000b1 <__TEXT_REGION_LENGTH__+0x7e00b1>
    2132:	20 e0       	ldi	r18, 0x00	; 0
    2134:	88 85       	ldd	r24, Y+8	; 0x08
    2136:	28 17       	cp	r18, r24
    2138:	30 f5       	brcc	.+76     	; 0x2186 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x1a6>
    213a:	f5 01       	movw	r30, r10
    213c:	e2 0f       	add	r30, r18
    213e:	f1 1d       	adc	r31, r1
    2140:	e2 0f       	add	r30, r18
    2142:	f1 1d       	adc	r31, r1
    2144:	80 81       	ld	r24, Z
    2146:	91 81       	ldd	r25, Z+1	; 0x01
    2148:	89 2b       	or	r24, r25
    214a:	21 f4       	brne	.+8      	; 0x2154 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x174>
    214c:	8e 85       	ldd	r24, Y+14	; 0x0e
    214e:	9f 85       	ldd	r25, Y+15	; 0x0f
    2150:	91 83       	std	Z+1, r25	; 0x01
    2152:	80 83       	st	Z, r24
    2154:	2f 5f       	subi	r18, 0xFF	; 255
    2156:	ee cf       	rjmp	.-36     	; 0x2134 <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x154>
    2158:	03 b1       	in	r16, 0x03	; 3
    215a:	f6 b0       	in	r15, 0x06	; 6
    215c:	99 b0       	in	r9, 0x09	; 9
    215e:	10 e0       	ldi	r17, 0x00	; 0
    2160:	dd cf       	rjmp	.-70     	; 0x211c <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13c>
    2162:	de 01       	movw	r26, r28
    2164:	a4 0f       	add	r26, r20
    2166:	b5 1f       	adc	r27, r21
    2168:	91 96       	adiw	r26, 0x21	; 33
    216a:	0d 90       	ld	r0, X+
    216c:	bc 91       	ld	r27, X
    216e:	a0 2d       	mov	r26, r0
    2170:	4c 91       	ld	r20, X
    2172:	de 01       	movw	r26, r28
    2174:	a2 0f       	add	r26, r18
    2176:	b3 1f       	adc	r27, r19
    2178:	51 96       	adiw	r26, 0x11	; 17
    217a:	2c 91       	ld	r18, X
    217c:	42 23       	and	r20, r18
    217e:	69 f6       	brne	.-102    	; 0x211a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    2180:	91 83       	std	Z+1, r25	; 0x01
    2182:	80 83       	st	Z, r24
    2184:	ca cf       	rjmp	.-108    	; 0x211a <_ZN18PololuQTRSensorsRC11readPrivateEPj+0x13a>
    2186:	cd b7       	in	r28, 0x3d	; 61
    2188:	de b7       	in	r29, 0x3e	; 62
    218a:	ed e0       	ldi	r30, 0x0D	; 13
    218c:	0c 94 6b 12 	jmp	0x24d6	; 0x24d6 <__epilogue_restores__+0xa>

00002190 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>:
    2190:	ef 92       	push	r14
    2192:	ff 92       	push	r15
    2194:	0f 93       	push	r16
    2196:	1f 93       	push	r17
    2198:	cf 93       	push	r28
    219a:	df 93       	push	r29
    219c:	fc 01       	movw	r30, r24
    219e:	9b 01       	movw	r18, r22
    21a0:	f0 90 7c 00 	lds	r15, 0x007C	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    21a4:	00 91 7a 00 	lds	r16, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    21a8:	47 b1       	in	r20, 0x07	; 7
    21aa:	18 b1       	in	r17, 0x08	; 8
    21ac:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    21b0:	86 fd       	sbrc	r24, 6
    21b2:	fc cf       	rjmp	.-8      	; 0x21ac <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x1c>
    21b4:	80 e0       	ldi	r24, 0x00	; 0
    21b6:	90 85       	ldd	r25, Z+8	; 0x08
    21b8:	89 17       	cp	r24, r25
    21ba:	48 f4       	brcc	.+18     	; 0x21ce <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x3e>
    21bc:	d9 01       	movw	r26, r18
    21be:	a8 0f       	add	r26, r24
    21c0:	b1 1d       	adc	r27, r1
    21c2:	a8 0f       	add	r26, r24
    21c4:	b1 1d       	adc	r27, r1
    21c6:	1d 92       	st	X+, r1
    21c8:	1c 92       	st	X, r1
    21ca:	8f 5f       	subi	r24, 0xFF	; 255
    21cc:	f4 cf       	rjmp	.-24     	; 0x21b6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x26>
    21ce:	97 b1       	in	r25, 0x07	; 7
    21d0:	82 a1       	ldd	r24, Z+34	; 0x22
    21d2:	80 95       	com	r24
    21d4:	89 23       	and	r24, r25
    21d6:	87 b9       	out	0x07, r24	; 7
    21d8:	98 b1       	in	r25, 0x08	; 8
    21da:	82 a1       	ldd	r24, Z+34	; 0x22
    21dc:	80 95       	com	r24
    21de:	89 23       	and	r24, r25
    21e0:	88 b9       	out	0x08, r24	; 8
    21e2:	87 e8       	ldi	r24, 0x87	; 135
    21e4:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    21e8:	e1 2c       	mov	r14, r1
    21ea:	81 a1       	ldd	r24, Z+33	; 0x21
    21ec:	e8 16       	cp	r14, r24
    21ee:	10 f0       	brcs	.+4      	; 0x21f4 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x64>
    21f0:	e1 2c       	mov	r14, r1
    21f2:	29 c0       	rjmp	.+82     	; 0x2246 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    21f4:	50 e0       	ldi	r21, 0x00	; 0
    21f6:	80 85       	ldd	r24, Z+8	; 0x08
    21f8:	58 17       	cp	r21, r24
    21fa:	18 f5       	brcc	.+70     	; 0x2242 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb2>
    21fc:	a5 2f       	mov	r26, r21
    21fe:	b0 e0       	ldi	r27, 0x00	; 0
    2200:	ef 01       	movw	r28, r30
    2202:	ca 0f       	add	r28, r26
    2204:	db 1f       	adc	r29, r27
    2206:	89 89       	ldd	r24, Y+17	; 0x11
    2208:	80 64       	ori	r24, 0x40	; 64
    220a:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    220e:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    2212:	80 64       	ori	r24, 0x40	; 64
    2214:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    2218:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    221c:	86 fd       	sbrc	r24, 6
    221e:	fc cf       	rjmp	.-8      	; 0x2218 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x88>
    2220:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
    2224:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
    2228:	aa 0f       	add	r26, r26
    222a:	bb 1f       	adc	r27, r27
    222c:	a2 0f       	add	r26, r18
    222e:	b3 1f       	adc	r27, r19
    2230:	8d 91       	ld	r24, X+
    2232:	9c 91       	ld	r25, X
    2234:	11 97       	sbiw	r26, 0x01	; 1
    2236:	86 0f       	add	r24, r22
    2238:	97 1f       	adc	r25, r23
    223a:	8d 93       	st	X+, r24
    223c:	9c 93       	st	X, r25
    223e:	5f 5f       	subi	r21, 0xFF	; 255
    2240:	da cf       	rjmp	.-76     	; 0x21f6 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x66>
    2242:	e3 94       	inc	r14
    2244:	d2 cf       	rjmp	.-92     	; 0x21ea <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0x5a>
    2246:	80 85       	ldd	r24, Z+8	; 0x08
    2248:	e8 16       	cp	r14, r24
    224a:	a0 f4       	brcc	.+40     	; 0x2274 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xe4>
    224c:	e9 01       	movw	r28, r18
    224e:	ce 0d       	add	r28, r14
    2250:	d1 1d       	adc	r29, r1
    2252:	ce 0d       	add	r28, r14
    2254:	d1 1d       	adc	r29, r1
    2256:	61 a1       	ldd	r22, Z+33	; 0x21
    2258:	70 e0       	ldi	r23, 0x00	; 0
    225a:	cb 01       	movw	r24, r22
    225c:	95 95       	asr	r25
    225e:	87 95       	ror	r24
    2260:	a8 81       	ld	r26, Y
    2262:	b9 81       	ldd	r27, Y+1	; 0x01
    2264:	8a 0f       	add	r24, r26
    2266:	9b 1f       	adc	r25, r27
    2268:	0e 94 cc 11 	call	0x2398	; 0x2398 <__udivmodhi4>
    226c:	79 83       	std	Y+1, r23	; 0x01
    226e:	68 83       	st	Y, r22
    2270:	e3 94       	inc	r14
    2272:	e9 cf       	rjmp	.-46     	; 0x2246 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj+0xb6>
    2274:	f0 92 7c 00 	sts	0x007C, r15	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
    2278:	00 93 7a 00 	sts	0x007A, r16	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
    227c:	18 b9       	out	0x08, r17	; 8
    227e:	47 b9       	out	0x07, r20	; 7
    2280:	cd b7       	in	r28, 0x3d	; 61
    2282:	de b7       	in	r29, 0x3e	; 62
    2284:	e6 e0       	ldi	r30, 0x06	; 6
    2286:	0c 94 72 12 	jmp	0x24e4	; 0x24e4 <__epilogue_restores__+0x18>

0000228a <_ZN16PololuQTRSensors4readEPjh>:
    228a:	a0 e2       	ldi	r26, 0x20	; 32
    228c:	b0 e0       	ldi	r27, 0x00	; 0
    228e:	eb e4       	ldi	r30, 0x4B	; 75
    2290:	f1 e1       	ldi	r31, 0x11	; 17
    2292:	0c 94 55 12 	jmp	0x24aa	; 0x24aa <__prologue_saves__+0x16>
    2296:	8c 01       	movw	r16, r24
    2298:	7b 01       	movw	r14, r22
    229a:	d4 2e       	mov	r13, r20
    229c:	8f ef       	ldi	r24, 0xFF	; 255
    229e:	84 0f       	add	r24, r20
    22a0:	82 30       	cpi	r24, 0x02	; 2
    22a2:	18 f4       	brcc	.+6      	; 0x22aa <_ZN16PololuQTRSensors4readEPjh+0x20>
    22a4:	c8 01       	movw	r24, r16
    22a6:	0e 94 87 0f 	call	0x1f0e	; 0x1f0e <_ZN16PololuQTRSensors10emittersOnEv>
    22aa:	d8 01       	movw	r26, r16
    22ac:	50 96       	adiw	r26, 0x10	; 16
    22ae:	8c 91       	ld	r24, X
    22b0:	b7 01       	movw	r22, r14
    22b2:	81 11       	cpse	r24, r1
    22b4:	10 c0       	rjmp	.+32     	; 0x22d6 <_ZN16PololuQTRSensors4readEPjh+0x4c>
    22b6:	c8 01       	movw	r24, r16
    22b8:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    22bc:	c8 01       	movw	r24, r16
    22be:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <_ZN16PololuQTRSensors11emittersOffEv>
    22c2:	b2 e0       	ldi	r27, 0x02	; 2
    22c4:	db 12       	cpse	r13, r27
    22c6:	3a c0       	rjmp	.+116    	; 0x233c <_ZN16PololuQTRSensors4readEPjh+0xb2>
    22c8:	be 01       	movw	r22, r28
    22ca:	6f 5f       	subi	r22, 0xFF	; 255
    22cc:	7f 4f       	sbci	r23, 0xFF	; 255
    22ce:	c8 01       	movw	r24, r16
    22d0:	0e 94 f0 0f 	call	0x1fe0	; 0x1fe0 <_ZN18PololuQTRSensorsRC11readPrivateEPj>
    22d4:	0f c0       	rjmp	.+30     	; 0x22f4 <_ZN16PololuQTRSensors4readEPjh+0x6a>
    22d6:	c8 01       	movw	r24, r16
    22d8:	0e 94 c8 10 	call	0x2190	; 0x2190 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    22dc:	c8 01       	movw	r24, r16
    22de:	0e 94 72 0f 	call	0x1ee4	; 0x1ee4 <_ZN16PololuQTRSensors11emittersOffEv>
    22e2:	e2 e0       	ldi	r30, 0x02	; 2
    22e4:	de 12       	cpse	r13, r30
    22e6:	2a c0       	rjmp	.+84     	; 0x233c <_ZN16PololuQTRSensors4readEPjh+0xb2>
    22e8:	be 01       	movw	r22, r28
    22ea:	6f 5f       	subi	r22, 0xFF	; 255
    22ec:	7f 4f       	sbci	r23, 0xFF	; 255
    22ee:	c8 01       	movw	r24, r16
    22f0:	0e 94 c8 10 	call	0x2190	; 0x2190 <_ZN22PololuQTRSensorsAnalog11readPrivateEPj>
    22f4:	40 e0       	ldi	r20, 0x00	; 0
    22f6:	f8 01       	movw	r30, r16
    22f8:	80 85       	ldd	r24, Z+8	; 0x08
    22fa:	48 17       	cp	r20, r24
    22fc:	f8 f4       	brcc	.+62     	; 0x233c <_ZN16PololuQTRSensors4readEPjh+0xb2>
    22fe:	84 2f       	mov	r24, r20
    2300:	90 e0       	ldi	r25, 0x00	; 0
    2302:	88 0f       	add	r24, r24
    2304:	99 1f       	adc	r25, r25
    2306:	f7 01       	movw	r30, r14
    2308:	e8 0f       	add	r30, r24
    230a:	f9 1f       	adc	r31, r25
    230c:	21 e0       	ldi	r18, 0x01	; 1
    230e:	30 e0       	ldi	r19, 0x00	; 0
    2310:	2c 0f       	add	r18, r28
    2312:	3d 1f       	adc	r19, r29
    2314:	82 0f       	add	r24, r18
    2316:	93 1f       	adc	r25, r19
    2318:	d8 01       	movw	r26, r16
    231a:	1e 96       	adiw	r26, 0x0e	; 14
    231c:	2d 91       	ld	r18, X+
    231e:	3c 91       	ld	r19, X
    2320:	1f 97       	sbiw	r26, 0x0f	; 15
    2322:	dc 01       	movw	r26, r24
    2324:	8d 91       	ld	r24, X+
    2326:	9c 91       	ld	r25, X
    2328:	28 1b       	sub	r18, r24
    232a:	39 0b       	sbc	r19, r25
    232c:	80 81       	ld	r24, Z
    232e:	91 81       	ldd	r25, Z+1	; 0x01
    2330:	82 0f       	add	r24, r18
    2332:	93 1f       	adc	r25, r19
    2334:	91 83       	std	Z+1, r25	; 0x01
    2336:	80 83       	st	Z, r24
    2338:	4f 5f       	subi	r20, 0xFF	; 255
    233a:	dd cf       	rjmp	.-70     	; 0x22f6 <_ZN16PololuQTRSensors4readEPjh+0x6c>
    233c:	a0 96       	adiw	r28, 0x20	; 32
    233e:	e7 e0       	ldi	r30, 0x07	; 7
    2340:	0c 94 71 12 	jmp	0x24e2	; 0x24e2 <__epilogue_restores__+0x16>

00002344 <_ZN16PololuQTRSensorsD1Ev>:
    2344:	cf 93       	push	r28
    2346:	df 93       	push	r29
    2348:	ec 01       	movw	r28, r24
    234a:	8a 81       	ldd	r24, Y+2	; 0x02
    234c:	9b 81       	ldd	r25, Y+3	; 0x03
    234e:	00 97       	sbiw	r24, 0x00	; 0
    2350:	11 f0       	breq	.+4      	; 0x2356 <_ZN16PololuQTRSensorsD1Ev+0x12>
    2352:	0e 94 19 13 	call	0x2632	; 0x2632 <free>
    2356:	8e 81       	ldd	r24, Y+6	; 0x06
    2358:	9f 81       	ldd	r25, Y+7	; 0x07
    235a:	00 97       	sbiw	r24, 0x00	; 0
    235c:	11 f0       	breq	.+4      	; 0x2362 <_ZN16PololuQTRSensorsD1Ev+0x1e>
    235e:	0e 94 19 13 	call	0x2632	; 0x2632 <free>
    2362:	88 81       	ld	r24, Y
    2364:	99 81       	ldd	r25, Y+1	; 0x01
    2366:	00 97       	sbiw	r24, 0x00	; 0
    2368:	11 f0       	breq	.+4      	; 0x236e <_ZN16PololuQTRSensorsD1Ev+0x2a>
    236a:	0e 94 19 13 	call	0x2632	; 0x2632 <free>
    236e:	8c 81       	ldd	r24, Y+4	; 0x04
    2370:	9d 81       	ldd	r25, Y+5	; 0x05
    2372:	00 97       	sbiw	r24, 0x00	; 0
    2374:	11 f0       	breq	.+4      	; 0x237a <_ZN16PololuQTRSensorsD1Ev+0x36>
    2376:	0e 94 19 13 	call	0x2632	; 0x2632 <free>
    237a:	df 91       	pop	r29
    237c:	cf 91       	pop	r28
    237e:	08 95       	ret

00002380 <__udivmodqi4>:
    2380:	99 1b       	sub	r25, r25
    2382:	79 e0       	ldi	r23, 0x09	; 9
    2384:	04 c0       	rjmp	.+8      	; 0x238e <__udivmodqi4_ep>

00002386 <__udivmodqi4_loop>:
    2386:	99 1f       	adc	r25, r25
    2388:	96 17       	cp	r25, r22
    238a:	08 f0       	brcs	.+2      	; 0x238e <__udivmodqi4_ep>
    238c:	96 1b       	sub	r25, r22

0000238e <__udivmodqi4_ep>:
    238e:	88 1f       	adc	r24, r24
    2390:	7a 95       	dec	r23
    2392:	c9 f7       	brne	.-14     	; 0x2386 <__udivmodqi4_loop>
    2394:	80 95       	com	r24
    2396:	08 95       	ret

00002398 <__udivmodhi4>:
    2398:	aa 1b       	sub	r26, r26
    239a:	bb 1b       	sub	r27, r27
    239c:	51 e1       	ldi	r21, 0x11	; 17
    239e:	07 c0       	rjmp	.+14     	; 0x23ae <__udivmodhi4_ep>

000023a0 <__udivmodhi4_loop>:
    23a0:	aa 1f       	adc	r26, r26
    23a2:	bb 1f       	adc	r27, r27
    23a4:	a6 17       	cp	r26, r22
    23a6:	b7 07       	cpc	r27, r23
    23a8:	10 f0       	brcs	.+4      	; 0x23ae <__udivmodhi4_ep>
    23aa:	a6 1b       	sub	r26, r22
    23ac:	b7 0b       	sbc	r27, r23

000023ae <__udivmodhi4_ep>:
    23ae:	88 1f       	adc	r24, r24
    23b0:	99 1f       	adc	r25, r25
    23b2:	5a 95       	dec	r21
    23b4:	a9 f7       	brne	.-22     	; 0x23a0 <__udivmodhi4_loop>
    23b6:	80 95       	com	r24
    23b8:	90 95       	com	r25
    23ba:	bc 01       	movw	r22, r24
    23bc:	cd 01       	movw	r24, r26
    23be:	08 95       	ret

000023c0 <__divmodhi4>:
    23c0:	97 fb       	bst	r25, 7
    23c2:	07 2e       	mov	r0, r23
    23c4:	16 f4       	brtc	.+4      	; 0x23ca <__divmodhi4+0xa>
    23c6:	00 94       	com	r0
    23c8:	07 d0       	rcall	.+14     	; 0x23d8 <__divmodhi4_neg1>
    23ca:	77 fd       	sbrc	r23, 7
    23cc:	09 d0       	rcall	.+18     	; 0x23e0 <__divmodhi4_neg2>
    23ce:	0e 94 cc 11 	call	0x2398	; 0x2398 <__udivmodhi4>
    23d2:	07 fc       	sbrc	r0, 7
    23d4:	05 d0       	rcall	.+10     	; 0x23e0 <__divmodhi4_neg2>
    23d6:	3e f4       	brtc	.+14     	; 0x23e6 <__divmodhi4_exit>

000023d8 <__divmodhi4_neg1>:
    23d8:	90 95       	com	r25
    23da:	81 95       	neg	r24
    23dc:	9f 4f       	sbci	r25, 0xFF	; 255
    23de:	08 95       	ret

000023e0 <__divmodhi4_neg2>:
    23e0:	70 95       	com	r23
    23e2:	61 95       	neg	r22
    23e4:	7f 4f       	sbci	r23, 0xFF	; 255

000023e6 <__divmodhi4_exit>:
    23e6:	08 95       	ret

000023e8 <__udivmodsi4>:
    23e8:	a1 e2       	ldi	r26, 0x21	; 33
    23ea:	1a 2e       	mov	r1, r26
    23ec:	aa 1b       	sub	r26, r26
    23ee:	bb 1b       	sub	r27, r27
    23f0:	fd 01       	movw	r30, r26
    23f2:	0d c0       	rjmp	.+26     	; 0x240e <__udivmodsi4_ep>

000023f4 <__udivmodsi4_loop>:
    23f4:	aa 1f       	adc	r26, r26
    23f6:	bb 1f       	adc	r27, r27
    23f8:	ee 1f       	adc	r30, r30
    23fa:	ff 1f       	adc	r31, r31
    23fc:	a2 17       	cp	r26, r18
    23fe:	b3 07       	cpc	r27, r19
    2400:	e4 07       	cpc	r30, r20
    2402:	f5 07       	cpc	r31, r21
    2404:	20 f0       	brcs	.+8      	; 0x240e <__udivmodsi4_ep>
    2406:	a2 1b       	sub	r26, r18
    2408:	b3 0b       	sbc	r27, r19
    240a:	e4 0b       	sbc	r30, r20
    240c:	f5 0b       	sbc	r31, r21

0000240e <__udivmodsi4_ep>:
    240e:	66 1f       	adc	r22, r22
    2410:	77 1f       	adc	r23, r23
    2412:	88 1f       	adc	r24, r24
    2414:	99 1f       	adc	r25, r25
    2416:	1a 94       	dec	r1
    2418:	69 f7       	brne	.-38     	; 0x23f4 <__udivmodsi4_loop>
    241a:	60 95       	com	r22
    241c:	70 95       	com	r23
    241e:	80 95       	com	r24
    2420:	90 95       	com	r25
    2422:	9b 01       	movw	r18, r22
    2424:	ac 01       	movw	r20, r24
    2426:	bd 01       	movw	r22, r26
    2428:	cf 01       	movw	r24, r30
    242a:	08 95       	ret

0000242c <__divmodsi4>:
    242c:	05 2e       	mov	r0, r21
    242e:	97 fb       	bst	r25, 7
    2430:	1e f4       	brtc	.+6      	; 0x2438 <__divmodsi4+0xc>
    2432:	00 94       	com	r0
    2434:	0e 94 2d 12 	call	0x245a	; 0x245a <__negsi2>
    2438:	57 fd       	sbrc	r21, 7
    243a:	07 d0       	rcall	.+14     	; 0x244a <__divmodsi4_neg2>
    243c:	0e 94 f4 11 	call	0x23e8	; 0x23e8 <__udivmodsi4>
    2440:	07 fc       	sbrc	r0, 7
    2442:	03 d0       	rcall	.+6      	; 0x244a <__divmodsi4_neg2>
    2444:	4e f4       	brtc	.+18     	; 0x2458 <__divmodsi4_exit>
    2446:	0c 94 2d 12 	jmp	0x245a	; 0x245a <__negsi2>

0000244a <__divmodsi4_neg2>:
    244a:	50 95       	com	r21
    244c:	40 95       	com	r20
    244e:	30 95       	com	r19
    2450:	21 95       	neg	r18
    2452:	3f 4f       	sbci	r19, 0xFF	; 255
    2454:	4f 4f       	sbci	r20, 0xFF	; 255
    2456:	5f 4f       	sbci	r21, 0xFF	; 255

00002458 <__divmodsi4_exit>:
    2458:	08 95       	ret

0000245a <__negsi2>:
    245a:	90 95       	com	r25
    245c:	80 95       	com	r24
    245e:	70 95       	com	r23
    2460:	61 95       	neg	r22
    2462:	7f 4f       	sbci	r23, 0xFF	; 255
    2464:	8f 4f       	sbci	r24, 0xFF	; 255
    2466:	9f 4f       	sbci	r25, 0xFF	; 255
    2468:	08 95       	ret

0000246a <__tablejump2__>:
    246a:	ee 0f       	add	r30, r30
    246c:	ff 1f       	adc	r31, r31
    246e:	05 90       	lpm	r0, Z+
    2470:	f4 91       	lpm	r31, Z
    2472:	e0 2d       	mov	r30, r0
    2474:	09 94       	ijmp

00002476 <__umulhisi3>:
    2476:	a2 9f       	mul	r26, r18
    2478:	b0 01       	movw	r22, r0
    247a:	b3 9f       	mul	r27, r19
    247c:	c0 01       	movw	r24, r0
    247e:	a3 9f       	mul	r26, r19
    2480:	70 0d       	add	r23, r0
    2482:	81 1d       	adc	r24, r1
    2484:	11 24       	eor	r1, r1
    2486:	91 1d       	adc	r25, r1
    2488:	b2 9f       	mul	r27, r18
    248a:	70 0d       	add	r23, r0
    248c:	81 1d       	adc	r24, r1
    248e:	11 24       	eor	r1, r1
    2490:	91 1d       	adc	r25, r1
    2492:	08 95       	ret

00002494 <__prologue_saves__>:
    2494:	2f 92       	push	r2
    2496:	3f 92       	push	r3
    2498:	4f 92       	push	r4
    249a:	5f 92       	push	r5
    249c:	6f 92       	push	r6
    249e:	7f 92       	push	r7
    24a0:	8f 92       	push	r8
    24a2:	9f 92       	push	r9
    24a4:	af 92       	push	r10
    24a6:	bf 92       	push	r11
    24a8:	cf 92       	push	r12
    24aa:	df 92       	push	r13
    24ac:	ef 92       	push	r14
    24ae:	ff 92       	push	r15
    24b0:	0f 93       	push	r16
    24b2:	1f 93       	push	r17
    24b4:	cf 93       	push	r28
    24b6:	df 93       	push	r29
    24b8:	cd b7       	in	r28, 0x3d	; 61
    24ba:	de b7       	in	r29, 0x3e	; 62
    24bc:	ca 1b       	sub	r28, r26
    24be:	db 0b       	sbc	r29, r27
    24c0:	0f b6       	in	r0, 0x3f	; 63
    24c2:	f8 94       	cli
    24c4:	de bf       	out	0x3e, r29	; 62
    24c6:	0f be       	out	0x3f, r0	; 63
    24c8:	cd bf       	out	0x3d, r28	; 61
    24ca:	09 94       	ijmp

000024cc <__epilogue_restores__>:
    24cc:	2a 88       	ldd	r2, Y+18	; 0x12
    24ce:	39 88       	ldd	r3, Y+17	; 0x11
    24d0:	48 88       	ldd	r4, Y+16	; 0x10
    24d2:	5f 84       	ldd	r5, Y+15	; 0x0f
    24d4:	6e 84       	ldd	r6, Y+14	; 0x0e
    24d6:	7d 84       	ldd	r7, Y+13	; 0x0d
    24d8:	8c 84       	ldd	r8, Y+12	; 0x0c
    24da:	9b 84       	ldd	r9, Y+11	; 0x0b
    24dc:	aa 84       	ldd	r10, Y+10	; 0x0a
    24de:	b9 84       	ldd	r11, Y+9	; 0x09
    24e0:	c8 84       	ldd	r12, Y+8	; 0x08
    24e2:	df 80       	ldd	r13, Y+7	; 0x07
    24e4:	ee 80       	ldd	r14, Y+6	; 0x06
    24e6:	fd 80       	ldd	r15, Y+5	; 0x05
    24e8:	0c 81       	ldd	r16, Y+4	; 0x04
    24ea:	1b 81       	ldd	r17, Y+3	; 0x03
    24ec:	aa 81       	ldd	r26, Y+2	; 0x02
    24ee:	b9 81       	ldd	r27, Y+1	; 0x01
    24f0:	ce 0f       	add	r28, r30
    24f2:	d1 1d       	adc	r29, r1
    24f4:	0f b6       	in	r0, 0x3f	; 63
    24f6:	f8 94       	cli
    24f8:	de bf       	out	0x3e, r29	; 62
    24fa:	0f be       	out	0x3f, r0	; 63
    24fc:	cd bf       	out	0x3d, r28	; 61
    24fe:	ed 01       	movw	r28, r26
    2500:	08 95       	ret

00002502 <malloc>:
    2502:	0f 93       	push	r16
    2504:	1f 93       	push	r17
    2506:	cf 93       	push	r28
    2508:	df 93       	push	r29
    250a:	82 30       	cpi	r24, 0x02	; 2
    250c:	91 05       	cpc	r25, r1
    250e:	10 f4       	brcc	.+4      	; 0x2514 <malloc+0x12>
    2510:	82 e0       	ldi	r24, 0x02	; 2
    2512:	90 e0       	ldi	r25, 0x00	; 0
    2514:	e0 91 1a 07 	lds	r30, 0x071A	; 0x80071a <__flp>
    2518:	f0 91 1b 07 	lds	r31, 0x071B	; 0x80071b <__flp+0x1>
    251c:	20 e0       	ldi	r18, 0x00	; 0
    251e:	30 e0       	ldi	r19, 0x00	; 0
    2520:	a0 e0       	ldi	r26, 0x00	; 0
    2522:	b0 e0       	ldi	r27, 0x00	; 0
    2524:	30 97       	sbiw	r30, 0x00	; 0
    2526:	19 f1       	breq	.+70     	; 0x256e <malloc+0x6c>
    2528:	40 81       	ld	r20, Z
    252a:	51 81       	ldd	r21, Z+1	; 0x01
    252c:	02 81       	ldd	r16, Z+2	; 0x02
    252e:	13 81       	ldd	r17, Z+3	; 0x03
    2530:	48 17       	cp	r20, r24
    2532:	59 07       	cpc	r21, r25
    2534:	c8 f0       	brcs	.+50     	; 0x2568 <malloc+0x66>
    2536:	84 17       	cp	r24, r20
    2538:	95 07       	cpc	r25, r21
    253a:	69 f4       	brne	.+26     	; 0x2556 <malloc+0x54>
    253c:	10 97       	sbiw	r26, 0x00	; 0
    253e:	31 f0       	breq	.+12     	; 0x254c <malloc+0x4a>
    2540:	12 96       	adiw	r26, 0x02	; 2
    2542:	0c 93       	st	X, r16
    2544:	12 97       	sbiw	r26, 0x02	; 2
    2546:	13 96       	adiw	r26, 0x03	; 3
    2548:	1c 93       	st	X, r17
    254a:	27 c0       	rjmp	.+78     	; 0x259a <malloc+0x98>
    254c:	00 93 1a 07 	sts	0x071A, r16	; 0x80071a <__flp>
    2550:	10 93 1b 07 	sts	0x071B, r17	; 0x80071b <__flp+0x1>
    2554:	22 c0       	rjmp	.+68     	; 0x259a <malloc+0x98>
    2556:	21 15       	cp	r18, r1
    2558:	31 05       	cpc	r19, r1
    255a:	19 f0       	breq	.+6      	; 0x2562 <malloc+0x60>
    255c:	42 17       	cp	r20, r18
    255e:	53 07       	cpc	r21, r19
    2560:	18 f4       	brcc	.+6      	; 0x2568 <malloc+0x66>
    2562:	9a 01       	movw	r18, r20
    2564:	bd 01       	movw	r22, r26
    2566:	ef 01       	movw	r28, r30
    2568:	df 01       	movw	r26, r30
    256a:	f8 01       	movw	r30, r16
    256c:	db cf       	rjmp	.-74     	; 0x2524 <malloc+0x22>
    256e:	21 15       	cp	r18, r1
    2570:	31 05       	cpc	r19, r1
    2572:	f9 f0       	breq	.+62     	; 0x25b2 <malloc+0xb0>
    2574:	28 1b       	sub	r18, r24
    2576:	39 0b       	sbc	r19, r25
    2578:	24 30       	cpi	r18, 0x04	; 4
    257a:	31 05       	cpc	r19, r1
    257c:	80 f4       	brcc	.+32     	; 0x259e <malloc+0x9c>
    257e:	8a 81       	ldd	r24, Y+2	; 0x02
    2580:	9b 81       	ldd	r25, Y+3	; 0x03
    2582:	61 15       	cp	r22, r1
    2584:	71 05       	cpc	r23, r1
    2586:	21 f0       	breq	.+8      	; 0x2590 <malloc+0x8e>
    2588:	fb 01       	movw	r30, r22
    258a:	93 83       	std	Z+3, r25	; 0x03
    258c:	82 83       	std	Z+2, r24	; 0x02
    258e:	04 c0       	rjmp	.+8      	; 0x2598 <malloc+0x96>
    2590:	90 93 1b 07 	sts	0x071B, r25	; 0x80071b <__flp+0x1>
    2594:	80 93 1a 07 	sts	0x071A, r24	; 0x80071a <__flp>
    2598:	fe 01       	movw	r30, r28
    259a:	32 96       	adiw	r30, 0x02	; 2
    259c:	44 c0       	rjmp	.+136    	; 0x2626 <malloc+0x124>
    259e:	fe 01       	movw	r30, r28
    25a0:	e2 0f       	add	r30, r18
    25a2:	f3 1f       	adc	r31, r19
    25a4:	81 93       	st	Z+, r24
    25a6:	91 93       	st	Z+, r25
    25a8:	22 50       	subi	r18, 0x02	; 2
    25aa:	31 09       	sbc	r19, r1
    25ac:	39 83       	std	Y+1, r19	; 0x01
    25ae:	28 83       	st	Y, r18
    25b0:	3a c0       	rjmp	.+116    	; 0x2626 <malloc+0x124>
    25b2:	20 91 18 07 	lds	r18, 0x0718	; 0x800718 <__brkval>
    25b6:	30 91 19 07 	lds	r19, 0x0719	; 0x800719 <__brkval+0x1>
    25ba:	23 2b       	or	r18, r19
    25bc:	41 f4       	brne	.+16     	; 0x25ce <malloc+0xcc>
    25be:	20 91 10 01 	lds	r18, 0x0110	; 0x800110 <__malloc_heap_start>
    25c2:	30 91 11 01 	lds	r19, 0x0111	; 0x800111 <__malloc_heap_start+0x1>
    25c6:	30 93 19 07 	sts	0x0719, r19	; 0x800719 <__brkval+0x1>
    25ca:	20 93 18 07 	sts	0x0718, r18	; 0x800718 <__brkval>
    25ce:	20 91 0e 01 	lds	r18, 0x010E	; 0x80010e <__malloc_heap_end>
    25d2:	30 91 0f 01 	lds	r19, 0x010F	; 0x80010f <__malloc_heap_end+0x1>
    25d6:	21 15       	cp	r18, r1
    25d8:	31 05       	cpc	r19, r1
    25da:	41 f4       	brne	.+16     	; 0x25ec <malloc+0xea>
    25dc:	2d b7       	in	r18, 0x3d	; 61
    25de:	3e b7       	in	r19, 0x3e	; 62
    25e0:	40 91 12 01 	lds	r20, 0x0112	; 0x800112 <__malloc_margin>
    25e4:	50 91 13 01 	lds	r21, 0x0113	; 0x800113 <__malloc_margin+0x1>
    25e8:	24 1b       	sub	r18, r20
    25ea:	35 0b       	sbc	r19, r21
    25ec:	e0 91 18 07 	lds	r30, 0x0718	; 0x800718 <__brkval>
    25f0:	f0 91 19 07 	lds	r31, 0x0719	; 0x800719 <__brkval+0x1>
    25f4:	e2 17       	cp	r30, r18
    25f6:	f3 07       	cpc	r31, r19
    25f8:	a0 f4       	brcc	.+40     	; 0x2622 <malloc+0x120>
    25fa:	2e 1b       	sub	r18, r30
    25fc:	3f 0b       	sbc	r19, r31
    25fe:	28 17       	cp	r18, r24
    2600:	39 07       	cpc	r19, r25
    2602:	78 f0       	brcs	.+30     	; 0x2622 <malloc+0x120>
    2604:	ac 01       	movw	r20, r24
    2606:	4e 5f       	subi	r20, 0xFE	; 254
    2608:	5f 4f       	sbci	r21, 0xFF	; 255
    260a:	24 17       	cp	r18, r20
    260c:	35 07       	cpc	r19, r21
    260e:	48 f0       	brcs	.+18     	; 0x2622 <malloc+0x120>
    2610:	4e 0f       	add	r20, r30
    2612:	5f 1f       	adc	r21, r31
    2614:	50 93 19 07 	sts	0x0719, r21	; 0x800719 <__brkval+0x1>
    2618:	40 93 18 07 	sts	0x0718, r20	; 0x800718 <__brkval>
    261c:	81 93       	st	Z+, r24
    261e:	91 93       	st	Z+, r25
    2620:	02 c0       	rjmp	.+4      	; 0x2626 <malloc+0x124>
    2622:	e0 e0       	ldi	r30, 0x00	; 0
    2624:	f0 e0       	ldi	r31, 0x00	; 0
    2626:	cf 01       	movw	r24, r30
    2628:	df 91       	pop	r29
    262a:	cf 91       	pop	r28
    262c:	1f 91       	pop	r17
    262e:	0f 91       	pop	r16
    2630:	08 95       	ret

00002632 <free>:
    2632:	cf 93       	push	r28
    2634:	df 93       	push	r29
    2636:	00 97       	sbiw	r24, 0x00	; 0
    2638:	09 f4       	brne	.+2      	; 0x263c <free+0xa>
    263a:	81 c0       	rjmp	.+258    	; 0x273e <free+0x10c>
    263c:	fc 01       	movw	r30, r24
    263e:	32 97       	sbiw	r30, 0x02	; 2
    2640:	13 82       	std	Z+3, r1	; 0x03
    2642:	12 82       	std	Z+2, r1	; 0x02
    2644:	a0 91 1a 07 	lds	r26, 0x071A	; 0x80071a <__flp>
    2648:	b0 91 1b 07 	lds	r27, 0x071B	; 0x80071b <__flp+0x1>
    264c:	10 97       	sbiw	r26, 0x00	; 0
    264e:	81 f4       	brne	.+32     	; 0x2670 <free+0x3e>
    2650:	20 81       	ld	r18, Z
    2652:	31 81       	ldd	r19, Z+1	; 0x01
    2654:	82 0f       	add	r24, r18
    2656:	93 1f       	adc	r25, r19
    2658:	20 91 18 07 	lds	r18, 0x0718	; 0x800718 <__brkval>
    265c:	30 91 19 07 	lds	r19, 0x0719	; 0x800719 <__brkval+0x1>
    2660:	28 17       	cp	r18, r24
    2662:	39 07       	cpc	r19, r25
    2664:	51 f5       	brne	.+84     	; 0x26ba <free+0x88>
    2666:	f0 93 19 07 	sts	0x0719, r31	; 0x800719 <__brkval+0x1>
    266a:	e0 93 18 07 	sts	0x0718, r30	; 0x800718 <__brkval>
    266e:	67 c0       	rjmp	.+206    	; 0x273e <free+0x10c>
    2670:	ed 01       	movw	r28, r26
    2672:	20 e0       	ldi	r18, 0x00	; 0
    2674:	30 e0       	ldi	r19, 0x00	; 0
    2676:	ce 17       	cp	r28, r30
    2678:	df 07       	cpc	r29, r31
    267a:	40 f4       	brcc	.+16     	; 0x268c <free+0x5a>
    267c:	4a 81       	ldd	r20, Y+2	; 0x02
    267e:	5b 81       	ldd	r21, Y+3	; 0x03
    2680:	9e 01       	movw	r18, r28
    2682:	41 15       	cp	r20, r1
    2684:	51 05       	cpc	r21, r1
    2686:	f1 f0       	breq	.+60     	; 0x26c4 <free+0x92>
    2688:	ea 01       	movw	r28, r20
    268a:	f5 cf       	rjmp	.-22     	; 0x2676 <free+0x44>
    268c:	d3 83       	std	Z+3, r29	; 0x03
    268e:	c2 83       	std	Z+2, r28	; 0x02
    2690:	40 81       	ld	r20, Z
    2692:	51 81       	ldd	r21, Z+1	; 0x01
    2694:	84 0f       	add	r24, r20
    2696:	95 1f       	adc	r25, r21
    2698:	c8 17       	cp	r28, r24
    269a:	d9 07       	cpc	r29, r25
    269c:	59 f4       	brne	.+22     	; 0x26b4 <free+0x82>
    269e:	88 81       	ld	r24, Y
    26a0:	99 81       	ldd	r25, Y+1	; 0x01
    26a2:	84 0f       	add	r24, r20
    26a4:	95 1f       	adc	r25, r21
    26a6:	02 96       	adiw	r24, 0x02	; 2
    26a8:	91 83       	std	Z+1, r25	; 0x01
    26aa:	80 83       	st	Z, r24
    26ac:	8a 81       	ldd	r24, Y+2	; 0x02
    26ae:	9b 81       	ldd	r25, Y+3	; 0x03
    26b0:	93 83       	std	Z+3, r25	; 0x03
    26b2:	82 83       	std	Z+2, r24	; 0x02
    26b4:	21 15       	cp	r18, r1
    26b6:	31 05       	cpc	r19, r1
    26b8:	29 f4       	brne	.+10     	; 0x26c4 <free+0x92>
    26ba:	f0 93 1b 07 	sts	0x071B, r31	; 0x80071b <__flp+0x1>
    26be:	e0 93 1a 07 	sts	0x071A, r30	; 0x80071a <__flp>
    26c2:	3d c0       	rjmp	.+122    	; 0x273e <free+0x10c>
    26c4:	e9 01       	movw	r28, r18
    26c6:	fb 83       	std	Y+3, r31	; 0x03
    26c8:	ea 83       	std	Y+2, r30	; 0x02
    26ca:	49 91       	ld	r20, Y+
    26cc:	59 91       	ld	r21, Y+
    26ce:	c4 0f       	add	r28, r20
    26d0:	d5 1f       	adc	r29, r21
    26d2:	ec 17       	cp	r30, r28
    26d4:	fd 07       	cpc	r31, r29
    26d6:	61 f4       	brne	.+24     	; 0x26f0 <free+0xbe>
    26d8:	80 81       	ld	r24, Z
    26da:	91 81       	ldd	r25, Z+1	; 0x01
    26dc:	84 0f       	add	r24, r20
    26de:	95 1f       	adc	r25, r21
    26e0:	02 96       	adiw	r24, 0x02	; 2
    26e2:	e9 01       	movw	r28, r18
    26e4:	99 83       	std	Y+1, r25	; 0x01
    26e6:	88 83       	st	Y, r24
    26e8:	82 81       	ldd	r24, Z+2	; 0x02
    26ea:	93 81       	ldd	r25, Z+3	; 0x03
    26ec:	9b 83       	std	Y+3, r25	; 0x03
    26ee:	8a 83       	std	Y+2, r24	; 0x02
    26f0:	e0 e0       	ldi	r30, 0x00	; 0
    26f2:	f0 e0       	ldi	r31, 0x00	; 0
    26f4:	12 96       	adiw	r26, 0x02	; 2
    26f6:	8d 91       	ld	r24, X+
    26f8:	9c 91       	ld	r25, X
    26fa:	13 97       	sbiw	r26, 0x03	; 3
    26fc:	00 97       	sbiw	r24, 0x00	; 0
    26fe:	19 f0       	breq	.+6      	; 0x2706 <free+0xd4>
    2700:	fd 01       	movw	r30, r26
    2702:	dc 01       	movw	r26, r24
    2704:	f7 cf       	rjmp	.-18     	; 0x26f4 <free+0xc2>
    2706:	8d 91       	ld	r24, X+
    2708:	9c 91       	ld	r25, X
    270a:	11 97       	sbiw	r26, 0x01	; 1
    270c:	9d 01       	movw	r18, r26
    270e:	2e 5f       	subi	r18, 0xFE	; 254
    2710:	3f 4f       	sbci	r19, 0xFF	; 255
    2712:	82 0f       	add	r24, r18
    2714:	93 1f       	adc	r25, r19
    2716:	20 91 18 07 	lds	r18, 0x0718	; 0x800718 <__brkval>
    271a:	30 91 19 07 	lds	r19, 0x0719	; 0x800719 <__brkval+0x1>
    271e:	28 17       	cp	r18, r24
    2720:	39 07       	cpc	r19, r25
    2722:	69 f4       	brne	.+26     	; 0x273e <free+0x10c>
    2724:	30 97       	sbiw	r30, 0x00	; 0
    2726:	29 f4       	brne	.+10     	; 0x2732 <free+0x100>
    2728:	10 92 1b 07 	sts	0x071B, r1	; 0x80071b <__flp+0x1>
    272c:	10 92 1a 07 	sts	0x071A, r1	; 0x80071a <__flp>
    2730:	02 c0       	rjmp	.+4      	; 0x2736 <free+0x104>
    2732:	13 82       	std	Z+3, r1	; 0x03
    2734:	12 82       	std	Z+2, r1	; 0x02
    2736:	b0 93 19 07 	sts	0x0719, r27	; 0x800719 <__brkval+0x1>
    273a:	a0 93 18 07 	sts	0x0718, r26	; 0x800718 <__brkval>
    273e:	df 91       	pop	r29
    2740:	cf 91       	pop	r28
    2742:	08 95       	ret

00002744 <__do_global_dtors>:
    2744:	10 e0       	ldi	r17, 0x00	; 0
    2746:	c4 e5       	ldi	r28, 0x54	; 84
    2748:	d0 e0       	ldi	r29, 0x00	; 0
    274a:	04 c0       	rjmp	.+8      	; 0x2754 <__do_global_dtors+0x10>
    274c:	fe 01       	movw	r30, r28
    274e:	0e 94 35 12 	call	0x246a	; 0x246a <__tablejump2__>
    2752:	21 96       	adiw	r28, 0x01	; 1
    2754:	c5 35       	cpi	r28, 0x55	; 85
    2756:	d1 07       	cpc	r29, r17
    2758:	c9 f7       	brne	.-14     	; 0x274c <__do_global_dtors+0x8>
    275a:	f8 94       	cli

0000275c <__stop_program>:
    275c:	ff cf       	rjmp	.-2      	; 0x275c <__stop_program>
